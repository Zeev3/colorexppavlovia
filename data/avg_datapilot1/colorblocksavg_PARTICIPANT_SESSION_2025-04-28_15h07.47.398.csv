"trial_type","trial_index","time_elapsed","internal_node_id","participant_id","rt","url","view_history","responses","stimulus","key_press","Name","config","type","prompt","step","max","start","on_load","data","min","labels","button_label","stimulus_duration","trial_duration","response_ends_trial","imageSelected","indexSelected","exp_type","fixationTime","faceIdentity","array_length","array_values","meanVal","description","trial","color","button_pressed","purpose"
"pavlovia","0","6","0.0-0.0","67ef42807f408cca62ea4bb0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"external-html","1","30517","0.0-1.0","67ef42807f408cca62ea4bb0","29410.200000047684","external_page.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","2","118370","0.0-2.0","67ef42807f408cca62ea4bb0","87851.89999985695","","[{""page_index"":0,""viewing_time"":21073.700000047684},{""page_index"":1,""viewing_time"":23213.599999904633},{""page_index"":2,""viewing_time"":32565.200000047684},{""page_index"":3,""viewing_time"":10998.799999952316}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","3","129248","0.0-3.0","67ef42807f408cca62ea4bb0","10870","","","{""Q0"":""67ef42807f408cca62ea4bb0""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","4","135273","0.0-4.0","67ef42807f408cca62ea4bb0","6024.200000047684","","[{""page_index"":0,""viewing_time"":6024.099999904633}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","5","203170","0.0-5.0","67ef42807f408cca62ea4bb0","67894.70000004768","","","{""Q0"":""There are three giraffes on a field""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","6","220939","0.0-6.0-0.0","67ef42807f408cca62ea4bb0","17766.199999809265","","","{""Q0"":""but""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","7","221542","0.0-7.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","8","223044","0.0-8.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:1600% 0%;margin-top:46px'></div> <div class='red' style='background-position:500% 0%;margin-top:50px'></div> <div class='red' style='background-position:2000% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:31px'></div> <div class='red' style='background-position:1000% 0%;margin-top:31px'></div> <div class='red' style='background-position:1500% 0%;margin-top:28px'></div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:48px'></div> <div class='red' style='background-position:1800% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:100% 0%;margin-top:29px'></div></span>","null","stimulus","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","9","241850","0.0-9.0","67ef42807f408cca62ea4bb0","18801","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":0,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","18801","18801","true","red34.jpg","33","avg","600","red","11","[16,5,11,14,19,20,18,15,6,10,1]","12.272727272727273","There are three giraffes on a field","1","","",""
"html-keyboard-response","10","242266","0.0-10.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","11","243774","0.0-11.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:4200% 0%;margin-top:50px'></div> <div class='red' style='background-position:3100% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:49px'></div> <div class='red' style='background-position:4500% 0%;margin-top:27px'></div> <div class='red' style='background-position:3900% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:27px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:38px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":0,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","12","255828","0.0-12.0","67ef42807f408cca62ea4bb0","12054","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":1,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","12054","12054","true","red40.jpg","39","avg","400","red","9","[33,38,36,42,45,31,29,35,39]","36.44444444444444","There are three giraffes on a field","2","","",""
"html-keyboard-response","13","256230","0.0-13.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","14","257743","0.0-14.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:4800% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:39px'></div> <div> </div></span>","null","stimulus","{""index"":1,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","15","267184","0.0-15.0","67ef42807f408cca62ea4bb0","9438","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":2,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9438","9438","true","red45.jpg","44","avg","400","red","3","[43,33,48]","41.333333333333336","There are three giraffes on a field","3","","",""
"html-keyboard-response","16","267784","0.0-16.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","17","269293","0.0-17.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:900% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:21px'></div> <div class='red' style='background-position:700% 0%;margin-top:24px'></div> <div class='red' style='background-position:100% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:35px'></div></span>","null","stimulus","{""index"":2,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","18","275662","0.0-18.0","67ef42807f408cca62ea4bb0","6365","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":3,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6365","6365","true","red11.jpg","10","avg","600","red","6","[18,7,6,1,9,13]","9","There are three giraffes on a field","4","","",""
"html-keyboard-response","19","276172","0.0-19.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","20","277680","0.0-20.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3200% 0%;margin-top:26px'></div> <div class='red' style='background-position:4400% 0%;margin-top:39px'></div> <div class='red' style='background-position:4800% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:31px'></div> <div class='red' style='background-position:3000% 0%;margin-top:44px'></div> <div class='red' style='background-position:3400% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:4600% 0%;margin-top:27px'></div> <div class='red' style='background-position:3900% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:4500% 0%;margin-top:39px'></div> <div class='red' style='background-position:4200% 0%;margin-top:23px'></div> <div> </div></span>","null","stimulus","{""index"":3,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","21","283799","0.0-21.0","67ef42807f408cca62ea4bb0","6118","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":4,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6118","6118","true","red47.jpg","46","avg","500","red","11","[48,36,45,29,30,42,34,39,44,46,32]","38.63636363636363","There are three giraffes on a field","5","","",""
"html-keyboard-response","22","284202","0.0-22.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","23","285715","0.0-23.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:3200% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:4800% 0%;margin-top:41px'></div> <div class='red' style='background-position:4100% 0%;margin-top:31px'></div> <div class='red' style='background-position:3600% 0%;margin-top:44px'></div> <div class='red' style='background-position:3000% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:4600% 0%;margin-top:21px'></div> <div class='red' style='background-position:4700% 0%;margin-top:20px'></div> <div class='red' style='background-position:3900% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:23px'></div> <div class='red' style='background-position:3300% 0%;margin-top:22px'></div> <div class='red' style='background-position:3400% 0%;margin-top:25px'></div></span>","null","stimulus","{""index"":4,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","24","291934","0.0-24.0","67ef42807f408cca62ea4bb0","6216","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":5,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6216","6216","true","red46.jpg","45","avg","400","red","12","[30,32,41,33,39,34,35,46,47,48,38,36]","38.25","There are three giraffes on a field","6","","",""
"html-keyboard-response","25","292436","0.0-25.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","26","293951","0.0-26.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:400% 0%;margin-top:50px'></div> <div class='red' style='background-position:700% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:38px'></div> <div class='red' style='background-position:500% 0%;margin-top:45px'></div> <div class='red' style='background-position:1800% 0%;margin-top:33px'></div> <div class='red' style='background-position:100% 0%;margin-top:22px'></div></span>","null","stimulus","{""index"":5,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","27","302455","0.0-27.0","67ef42807f408cca62ea4bb0","8502","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":6,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8502","8502","true","red19.jpg","18","avg","500","red","9","[7,16,4,20,18,1,12,17,5]","11.11111111111111","There are three giraffes on a field","7","","",""
"html-keyboard-response","28","303057","0.0-28.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","29","304561","0.0-29.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:3500% 0%;margin-top:21px'></div> <div class='red' style='background-position:4000% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":6,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","30","311087","0.0-30.0","67ef42807f408cca62ea4bb0","6523","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":7,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6523","6523","true","red14.jpg","13","avg","600","red","2","[40,35]","37.5","There are three giraffes on a field","8","","",""
"html-keyboard-response","31","311689","0.0-31.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","32","313195","0.0-32.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:400% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:48px'></div> <div class='red' style='background-position:1500% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:28px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:25px'></div> <div class='red' style='background-position:900% 0%;margin-top:45px'></div> <div class='red' style='background-position:1200% 0%;margin-top:50px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":7,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","33","317412","0.0-33.0","67ef42807f408cca62ea4bb0","4214","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":8,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4214","4214","true","red28.jpg","27","avg","600","red","8","[9,6,2,16,12,15,4,10]","9.25","There are three giraffes on a field","9","","",""
"html-keyboard-response","34","317922","0.0-34.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","35","319432","0.0-35.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:4200% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:4500% 0%;margin-top:27px'></div> <div class='red' style='background-position:3000% 0%;margin-top:21px'></div> <div class='red' style='background-position:3100% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:43px'></div> <div class='red' style='background-position:3200% 0%;margin-top:24px'></div> <div class='red' style='background-position:2900% 0%;margin-top:26px'></div> <div class='red' style='background-position:4800% 0%;margin-top:46px'></div> <div> </div></span>","null","stimulus","{""index"":8,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","36","324707","0.0-36.0","67ef42807f408cca62ea4bb0","5271","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":9,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5271","5271","true","red47.jpg","46","avg","500","red","11","[37,31,30,32,45,36,48,35,34,42,29]","36.27272727272727","There are three giraffes on a field","10","","",""
"html-keyboard-response","37","325308","0.0-37.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","38","326811","0.0-38.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:1800% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:42px'></div> <div class='red' style='background-position:1400% 0%;margin-top:35px'></div> <div class='red' style='background-position:200% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:100% 0%;margin-top:39px'></div> <div class='red' style='background-position:2000% 0%;margin-top:43px'></div> <div class='red' style='background-position:1000% 0%;margin-top:27px'></div> <div class='red' style='background-position:1200% 0%;margin-top:30px'></div> <div class='red' style='background-position:300% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:800% 0%;margin-top:45px'></div> <div class='red' style='background-position:1500% 0%;margin-top:45px'></div> <div class='red' style='background-position:1900% 0%;margin-top:45px'></div> <div> </div></span>","null","stimulus","{""index"":9,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","39","335593","0.0-39.0","67ef42807f408cca62ea4bb0","8779","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":10,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8779","8779","true","red19.jpg","18","avg","600","red","12","[19,20,2,10,15,3,8,1,12,14,13,18]","11.25","There are three giraffes on a field","11","","",""
"html-keyboard-response","40","336104","0.0-40.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","41","337610","0.0-41.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:900% 0%;margin-top:45px'></div> <div class='red' style='background-position:2000% 0%;margin-top:30px'></div> <div class='red' style='background-position:200% 0%;margin-top:46px'></div> <div class='red' style='background-position:400% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:700% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:33px'></div> <div class='red' style='background-position:100% 0%;margin-top:44px'></div> <div class='red' style='background-position:300% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:27px'></div> <div class='red' style='background-position:1900% 0%;margin-top:43px'></div> <div class='red' style='background-position:1700% 0%;margin-top:42px'></div> <div class='red' style='background-position:1600% 0%;margin-top:37px'></div></span>","null","stimulus","{""index"":10,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","42","343784","0.0-42.0","67ef42807f408cca62ea4bb0","6171","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":11,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6171","6171","true","red23.jpg","22","avg","500","red","12","[3,14,16,7,4,9,20,1,18,17,19,2]","10.833333333333334","There are three giraffes on a field","12","","",""
"html-keyboard-response","43","344297","0.0-43.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","44","345804","0.0-44.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:3600% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:4400% 0%;margin-top:32px'></div> <div class='red' style='background-position:3400% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4700% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4800% 0%;margin-top:21px'></div> <div class='red' style='background-position:4500% 0%;margin-top:39px'></div> <div class='red' style='background-position:4000% 0%;margin-top:33px'></div> <div class='red' style='background-position:3800% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:48px'></div> <div class='red' style='background-position:4300% 0%;margin-top:35px'></div></span>","null","stimulus","{""index"":11,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","45","349087","0.0-45.0","67ef42807f408cca62ea4bb0","3280","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":12,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3280","3280","true","red41.jpg","40","avg","500","red","10","[36,45,38,40,43,41,34,47,44,48]","41.6","There are three giraffes on a field","13","","",""
"html-keyboard-response","46","349589","0.0-46.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","47","351096","0.0-47.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2000% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:100% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:35px'></div> <div class='red' style='background-position:800% 0%;margin-top:30px'></div> <div class='red' style='background-position:200% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:300% 0%;margin-top:42px'></div></span>","null","stimulus","{""index"":12,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","48","355879","0.0-48.0","67ef42807f408cca62ea4bb0","4780","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":13,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4780","4780","true","red29.jpg","28","avg","500","red","8","[2,1,15,5,8,17,3,20]","8.875","There are three giraffes on a field","14","","",""
"html-keyboard-response","49","356481","0.0-49.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","50","357985","0.0-50.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:300% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:27px'></div> <div class='red' style='background-position:1500% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:48px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":13,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","51","363157","0.0-51.0","67ef42807f408cca62ea4bb0","5169","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":14,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5169","5169","true","red7.jpg","6","avg","600","red","4","[19,15,3,2]","9.75","There are three giraffes on a field","15","","",""
"html-keyboard-response","52","363762","0.0-52.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","53","365264","0.0-53.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:4700% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:50px'></div> <div class='red' style='background-position:4000% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:40px'></div></span>","null","stimulus","{""index"":14,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","54","369238","0.0-54.0","67ef42807f408cca62ea4bb0","3974","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":15,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3974","3974","true","red36.jpg","35","avg","600","red","6","[47,37,35,43,30,40]","38.666666666666664","There are three giraffes on a field","16","","",""
"html-keyboard-response","55","369741","0.0-55.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","56","371244","0.0-56.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:41px'></div> <div class='red' style='background-position:1300% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:32px'></div> <div class='red' style='background-position:1200% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:42px'></div> <div class='red' style='background-position:1000% 0%;margin-top:28px'></div> <div class='red' style='background-position:1500% 0%;margin-top:42px'></div></span>","null","stimulus","{""index"":15,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","57","375595","0.0-57.0","67ef42807f408cca62ea4bb0","4349","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":16,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4349","4349","true","red23.jpg","22","avg","500","red","7","[13,18,17,10,15,12,6]","13","There are three giraffes on a field","17","","",""
"html-keyboard-response","58","376107","0.0-58.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","59","377613","0.0-59.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:32px'></div> <div class='red' style='background-position:400% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:45px'></div> <div class='red' style='background-position:500% 0%;margin-top:22px'></div></span>","null","stimulus","{""index"":16,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","60","384144","0.0-60.0","67ef42807f408cca62ea4bb0","6529","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":17,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6529","6529","true","red18.jpg","17","avg","500","red","6","[4,19,2,5,15,17]","10.333333333333334","There are three giraffes on a field","18","","",""
"html-keyboard-response","61","384546","0.0-61.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","62","386048","0.0-62.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:3600% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:23px'></div> <div class='red' style='background-position:3100% 0%;margin-top:32px'></div> <div class='red' style='background-position:3800% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:27px'></div> <div> </div> <div class='red' style='background-position:4400% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4500% 0%;margin-top:49px'></div> <div class='red' style='background-position:4200% 0%;margin-top:49px'></div> <div class='red' style='background-position:3000% 0%;margin-top:41px'></div> <div class='red' style='background-position:4000% 0%;margin-top:46px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":17,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","63","391163","0.0-63.0","67ef42807f408cca62ea4bb0","5111","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":18,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5111","5111","true","red38.jpg","37","avg","400","red","10","[40,45,42,30,31,38,34,36,44,43]","38.3","There are three giraffes on a field","19","","",""
"html-keyboard-response","64","391676","0.0-64.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","65","393184","0.0-65.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:900% 0%;margin-top:35px'></div> <div class='red' style='background-position:600% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:32px'></div> <div class='red' style='background-position:800% 0%;margin-top:50px'></div> <div class='red' style='background-position:1100% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:50px'></div> <div class='red' style='background-position:1700% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:39px'></div> <div class='red' style='background-position:1500% 0%;margin-top:25px'></div> <div class='red' style='background-position:1400% 0%;margin-top:29px'></div> <div class='red' style='background-position:1000% 0%;margin-top:45px'></div> <div> </div></span>","null","stimulus","{""index"":18,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","66","398051","0.0-66.0","67ef42807f408cca62ea4bb0","4865","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":19,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4865","4865","true","red25.jpg","24","avg","500","red","12","[6,5,12,19,9,15,20,10,14,17,11,8]","12.166666666666666","There are three giraffes on a field","20","","",""
"instructions","67","400172","0.0-67.0","67ef42807f408cca62ea4bb0","2120.0999999046326","","[{""page_index"":0,""viewing_time"":2119.899999856949}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","68","407776","0.0-68.0-0.0","67ef42807f408cca62ea4bb0","7601.799999952316","","","{""Q0"":""rock""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","69","408286","0.0-69.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","70","409796","0.0-70.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:45px'></div> <div> </div></span>","null","stimulus","{""index"":19,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","71","414123","0.0-71.0","67ef42807f408cca62ea4bb0","4322","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":0,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4322","4322","true","blue33.jpg","32","avg","500","blue","2","[30,38]","34","There are three giraffes on a field","21","blue","",""
"html-keyboard-response","72","414527","0.0-72.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","73","416033","0.0-73.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:2900% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:36px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3900% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:45px'></div> <div> </div></span>","null","stimulus","{""index"":0,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","74","420051","0.0-74.0","67ef42807f408cca62ea4bb0","4016","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":1,""type"":""experimental"",""array_length"":8,""meanVal"":31,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4016","4016","true","blue35.jpg","34","avg","400","blue","8","[23,25,27,29,33,35,37,39]","31","There are three giraffes on a field","22","blue","",""
"html-keyboard-response","75","420656","0.0-75.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","76","422166","0.0-76.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:600% 0%;margin-top:27px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:34px'></div> <div class='blue' style='background-position:500% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:20px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:48px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:49px'></div></span>","null","stimulus","{""index"":1,""type"":""experimental"",""array_length"":8,""meanVal"":31,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","77","428503","0.0-77.0","67ef42807f408cca62ea4bb0","6335","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":2,""type"":""experimental"",""array_length"":12,""meanVal"":14,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6335","6335","true","blue24.jpg","23","avg","600","blue","12","[5,9,6,12,14,13,16,16,17,20,21,23]","14","There are three giraffes on a field","23","blue","",""
"html-keyboard-response","78","429104","0.0-78.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","79","430617","0.0-79.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3900% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:39px'></div> <div> </div></span>","null","stimulus","{""index"":2,""type"":""experimental"",""array_length"":12,""meanVal"":14,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","80","435813","0.0-80.0","67ef42807f408cca62ea4bb0","5193","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":3,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5193","5193","true","blue33.jpg","32","avg","600","blue","2","[31,39]","35","There are three giraffes on a field","24","blue","",""
"html-keyboard-response","81","436415","0.0-81.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","82","437922","0.0-82.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:45px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:21px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":3,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","83","442629","0.0-83.0","67ef42807f408cca62ea4bb0","4706","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":4,""type"":""experimental"",""array_length"":6,""meanVal"":23,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4706","4706","true","blue24.jpg","23","avg","600","blue","6","[17,19,21,25,27,29]","23","There are three giraffes on a field","25","blue","",""
"html-keyboard-response","84","443145","0.0-84.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","85","444646","0.0-85.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:2100% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:20px'></div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:27px'></div></span>","null","stimulus","{""index"":4,""type"":""experimental"",""array_length"":6,""meanVal"":23,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","86","447523","0.0-86.0","67ef42807f408cca62ea4bb0","2877","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":5,""type"":""experimental"",""array_length"":8,""meanVal"":29,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2877","2877","true","blue32.jpg","31","avg","500","blue","8","[21,23,25,27,31,33,35,37]","29","There are three giraffes on a field","26","blue","",""
"html-keyboard-response","87","447929","0.0-87.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","88","449441","0.0-88.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":5,""type"":""experimental"",""array_length"":8,""meanVal"":29,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","89","453567","0.0-89.0","67ef42807f408cca62ea4bb0","4123","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":6,""type"":""experimental"",""array_length"":2,""meanVal"":28,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4123","4123","true","blue33.jpg","32","avg","400","blue","2","[24,32]","28","There are three giraffes on a field","27","blue","",""
"html-keyboard-response","90","454169","0.0-90.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","91","455672","0.0-91.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:2600% 0%;margin-top:33px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:20px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:48px'></div></span>","null","stimulus","{""index"":6,""type"":""experimental"",""array_length"":2,""meanVal"":28,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","92","460860","0.0-92.0","67ef42807f408cca62ea4bb0","5186","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":7,""type"":""experimental"",""array_length"":12,""meanVal"":23,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5186","5186","true","blue29.jpg","28","avg","600","blue","12","[14,18,15,21,23,22,25,25,26,29,30,32]","23","There are three giraffes on a field","28","blue","",""
"html-keyboard-response","93","461462","0.0-93.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","94","462975","0.0-94.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:3200% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:22px'></div></span>","null","stimulus","{""index"":7,""type"":""experimental"",""array_length"":12,""meanVal"":23,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","95","468432","0.0-95.0","67ef42807f408cca62ea4bb0","5456","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":8,""type"":""experimental"",""array_length"":6,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5456","5456","true","blue25.jpg","24","avg","600","blue","6","[28,30,32,36,38,40]","34","There are three giraffes on a field","29","blue","",""
"html-keyboard-response","96","468933","0.0-96.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","97","470448","0.0-97.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:2600% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:29px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:21px'></div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":8,""type"":""experimental"",""array_length"":6,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","98","473494","0.0-98.0","67ef42807f408cca62ea4bb0","3044","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":9,""type"":""experimental"",""array_length"":6,""meanVal"":30,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3044","3044","true","blue31.jpg","30","avg","500","blue","6","[24,26,28,32,34,36]","30","There are three giraffes on a field","30","blue","",""
"html-keyboard-response","99","473896","0.0-99.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","100","475400","0.0-100.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:4200% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:43px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:4400% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:46px'></div></span>","null","stimulus","{""index"":9,""type"":""experimental"",""array_length"":6,""meanVal"":30,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","101","479232","0.0-101.0","67ef42807f408cca62ea4bb0","3829","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":10,""type"":""experimental"",""array_length"":8,""meanVal"":36,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3829","3829","true","blue43.jpg","42","avg","400","blue","8","[28,30,32,34,38,40,42,44]","36","There are three giraffes on a field","31","blue","",""
"html-keyboard-response","102","479839","0.0-102.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","103","481347","0.0-103.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:3000% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:22px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:48px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:3900% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:44px'></div></span>","null","stimulus","{""index"":10,""type"":""experimental"",""array_length"":8,""meanVal"":36,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","104","486380","0.0-104.0","67ef42807f408cca62ea4bb0","5031","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":11,""type"":""experimental"",""array_length"":12,""meanVal"":30,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5031","5031","true","blue31.jpg","30","avg","600","blue","12","[21,25,22,28,30,29,32,32,33,36,37,39]","30","There are three giraffes on a field","32","blue","",""
"html-keyboard-response","105","486983","0.0-105.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","106","488490","0.0-106.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:1700% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:600% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:28px'></div> <div class='blue' style='background-position:700% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:36px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:28px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:26px'></div></span>","null","stimulus","{""index"":11,""type"":""experimental"",""array_length"":12,""meanVal"":30,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","107","492952","0.0-107.0","67ef42807f408cca62ea4bb0","4461","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":12,""type"":""experimental"",""array_length"":12,""meanVal"":15,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4461","4461","true","blue22.jpg","21","avg","600","blue","12","[6,10,7,13,15,14,17,17,18,21,22,24]","15","There are three giraffes on a field","33","blue","",""
"html-keyboard-response","108","493463","0.0-108.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","109","494973","0.0-109.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:26px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":12,""type"":""experimental"",""array_length"":12,""meanVal"":15,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","110","500517","0.0-110.0","67ef42807f408cca62ea4bb0","5542","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":13,""type"":""experimental"",""array_length"":2,""meanVal"":19,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5542","5542","true","blue20.jpg","19","avg","500","blue","2","[15,23]","19","There are three giraffes on a field","34","blue","",""
"html-keyboard-response","111","500934","0.0-111.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","112","502443","0.0-112.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:3300% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:42px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3900% 0%;margin-top:49px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:44px'></div> <div class='blue' style='background-position:4200% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:47px'></div></span>","null","stimulus","{""index"":13,""type"":""experimental"",""array_length"":2,""meanVal"":19,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","113","507088","0.0-113.0","67ef42807f408cca62ea4bb0","4643","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":14,""type"":""experimental"",""array_length"":12,""meanVal"":33,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4643","4643","true","blue37.jpg","36","avg","400","blue","12","[24,28,25,31,33,32,35,35,36,39,40,42]","33","There are three giraffes on a field","35","blue","",""
"html-keyboard-response","114","507503","0.0-114.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","115","509013","0.0-115.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:43px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:46px'></div></span>","null","stimulus","{""index"":14,""type"":""experimental"",""array_length"":12,""meanVal"":33,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","116","513625","0.0-116.0","67ef42807f408cca62ea4bb0","4610","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":15,""type"":""experimental"",""array_length"":6,""meanVal"":33,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4610","4610","true","blue29.jpg","28","avg","400","blue","6","[27,29,31,35,37,39]","33","There are three giraffes on a field","36","blue","",""
"html-keyboard-response","117","514136","0.0-117.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","118","515644","0.0-118.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:3400% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:39px'></div> <div> </div> <div class='blue' style='background-position:3900% 0%;margin-top:26px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:44px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:29px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":15,""type"":""experimental"",""array_length"":6,""meanVal"":33,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","119","519506","0.0-119.0","67ef42807f408cca62ea4bb0","3859","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":16,""type"":""experimental"",""array_length"":12,""meanVal"":32,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3859","3859","true","blue32.jpg","31","avg","500","blue","12","[23,27,24,30,32,31,34,34,35,38,39,41]","32","There are three giraffes on a field","37","blue","",""
"html-keyboard-response","120","520112","0.0-120.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","121","521620","0.0-121.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:2800% 0%;margin-top:42px'></div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:36px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":16,""type"":""experimental"",""array_length"":12,""meanVal"":32,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","122","530208","0.0-122.0","67ef42807f408cca62ea4bb0","8587","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":17,""type"":""experimental"",""array_length"":8,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","8587","8587","true","blue32.jpg","31","avg","600","blue","8","[18,20,22,24,28,30,32,34]","26","There are three giraffes on a field","38","blue","",""
"html-keyboard-response","123","530612","0.0-123.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","124","532120","0.0-124.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":17,""type"":""experimental"",""array_length"":8,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","125","537002","0.0-125.0","67ef42807f408cca62ea4bb0","4880","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":18,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4880","4880","true","blue27.jpg","26","avg","400","blue","2","[28,36]","32","There are three giraffes on a field","39","blue","",""
"html-keyboard-response","126","537603","0.0-126.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","127","539109","0.0-127.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:47px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:41px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:26px'></div></span>","null","stimulus","{""index"":18,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","128","544976","0.0-128.0","67ef42807f408cca62ea4bb0","5864","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":19,""type"":""experimental"",""array_length"":12,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5864","5864","true","blue27.jpg","26","avg","600","blue","12","[16,20,17,23,25,24,27,27,28,31,32,34]","25","There are three giraffes on a field","40","blue","",""
"html-keyboard-response","129","545582","0.0-129.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","130","547089","0.0-130.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:50px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:29px'></div> <div> </div></span>","null","stimulus","{""index"":19,""type"":""experimental"",""array_length"":12,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","131","552217","0.0-131.0","67ef42807f408cca62ea4bb0","5126","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":20,""type"":""experimental"",""array_length"":6,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5126","5126","true","blue16.jpg","15","avg","600","blue","6","[16,18,20,24,26,28]","22","There are three giraffes on a field","41","blue","",""
"html-keyboard-response","132","552820","0.0-132.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","133","554328","0.0-133.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:42px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:22px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":20,""type"":""experimental"",""array_length"":6,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","134","560453","0.0-134.0","67ef42807f408cca62ea4bb0","6122","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":21,""type"":""experimental"",""array_length"":2,""meanVal"":31,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6122","6122","true","blue22.jpg","21","avg","600","blue","2","[27,35]","31","There are three giraffes on a field","42","blue","",""
"html-keyboard-response","135","561056","0.0-135.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","136","562563","0.0-136.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:3900% 0%;margin-top:43px'></div> <div> </div> <div class='blue' style='background-position:4200% 0%;margin-top:20px'></div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:32px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:33px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:37px'></div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:48px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:45px'></div> <div class='blue' style='background-position:4500% 0%;margin-top:38px'></div> <div class='blue' style='background-position:4300% 0%;margin-top:41px'></div> <div> </div></span>","null","stimulus","{""index"":21,""type"":""experimental"",""array_length"":2,""meanVal"":31,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","137","567979","0.0-137.0","67ef42807f408cca62ea4bb0","5413","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":22,""type"":""experimental"",""array_length"":12,""meanVal"":36,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5413","5413","true","blue36.jpg","35","avg","600","blue","12","[27,31,28,34,36,35,38,38,39,42,43,45]","36","There are three giraffes on a field","43","blue","",""
"html-keyboard-response","138","568581","0.0-138.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","139","570094","0.0-139.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:40px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:27px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":22,""type"":""experimental"",""array_length"":12,""meanVal"":36,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","140","573544","0.0-140.0","67ef42807f408cca62ea4bb0","3448","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":23,""type"":""experimental"",""array_length"":6,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3448","3448","true","blue21.jpg","20","avg","600","blue","6","[16,18,20,24,26,28]","22","There are three giraffes on a field","44","blue","",""
"html-keyboard-response","141","574054","0.0-141.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","142","575563","0.0-142.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:25px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:28px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:45px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":23,""type"":""experimental"",""array_length"":6,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","143","580221","0.0-143.0","67ef42807f408cca62ea4bb0","4656","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":24,""type"":""experimental"",""array_length"":12,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4656","4656","true","blue27.jpg","26","avg","500","blue","12","[17,21,18,24,26,25,28,28,29,32,33,35]","26","There are three giraffes on a field","45","blue","",""
"html-keyboard-response","144","580824","0.0-144.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","145","582325","0.0-145.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:30px'></div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:22px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:45px'></div> <div> </div></span>","null","stimulus","{""index"":24,""type"":""experimental"",""array_length"":12,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","146","588224","0.0-146.0","67ef42807f408cca62ea4bb0","5898","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":25,""type"":""experimental"",""array_length"":6,""meanVal"":19,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5898","5898","true","blue17.jpg","16","avg","600","blue","6","[13,15,17,21,23,25]","19","There are three giraffes on a field","46","blue","",""
"html-keyboard-response","147","588828","0.0-147.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","148","590330","0.0-148.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:36px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:28px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":25,""type"":""experimental"",""array_length"":6,""meanVal"":19,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","149","593538","0.0-149.0","67ef42807f408cca62ea4bb0","3206","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":26,""type"":""experimental"",""array_length"":8,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3206","3206","true","blue27.jpg","26","avg","600","blue","8","[17,19,21,23,27,29,31,33]","25","There are three giraffes on a field","47","blue","",""
"html-keyboard-response","150","594048","0.0-150.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","151","595554","0.0-151.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:1800% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":26,""type"":""experimental"",""array_length"":8,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","152","600632","0.0-152.0","67ef42807f408cca62ea4bb0","5076","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":27,""type"":""experimental"",""array_length"":6,""meanVal"":20,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5076","5076","true","blue29.jpg","28","avg","500","blue","6","[14,16,18,22,24,26]","20","There are three giraffes on a field","48","blue","",""
"html-keyboard-response","153","601035","0.0-153.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","154","602539","0.0-154.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:50px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":27,""type"":""experimental"",""array_length"":6,""meanVal"":20,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","155","607025","0.0-155.0","67ef42807f408cca62ea4bb0","4485","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":28,""type"":""experimental"",""array_length"":6,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4485","4485","true","blue34.jpg","33","avg","400","blue","6","[28,30,32,36,38,40]","34","There are three giraffes on a field","49","blue","",""
"html-keyboard-response","156","607640","0.0-156.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","157","609148","0.0-157.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:26px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1100% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:22px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":28,""type"":""experimental"",""array_length"":6,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","158","612887","0.0-158.0","67ef42807f408cca62ea4bb0","3737","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":29,""type"":""experimental"",""array_length"":6,""meanVal"":17,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3737","3737","true","blue22.jpg","21","avg","600","blue","6","[11,13,15,19,21,23]","17","There are three giraffes on a field","50","blue","",""
"html-keyboard-response","159","613492","0.0-159.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","160","615001","0.0-160.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:1500% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:35px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:21px'></div></span>","null","stimulus","{""index"":29,""type"":""experimental"",""array_length"":6,""meanVal"":17,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","161","618785","0.0-161.0","67ef42807f408cca62ea4bb0","3781","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":30,""type"":""experimental"",""array_length"":8,""meanVal"":17,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3781","3781","true","blue17.jpg","16","avg","600","blue","8","[9,11,13,15,19,21,23,25]","17","There are three giraffes on a field","51","blue","",""
"html-keyboard-response","162","619386","0.0-162.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","163","620897","0.0-163.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:36px'></div> <div> </div></span>","null","stimulus","{""index"":30,""type"":""experimental"",""array_length"":8,""meanVal"":17,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","164","629375","0.0-164.0","67ef42807f408cca62ea4bb0","8476","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":31,""type"":""experimental"",""array_length"":2,""meanVal"":28,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","8476","8476","true","blue25.jpg","24","avg","600","blue","2","[24,32]","28","There are three giraffes on a field","52","blue","",""
"html-keyboard-response","165","629980","0.0-165.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","166","631490","0.0-166.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":31,""type"":""experimental"",""array_length"":2,""meanVal"":28,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","167","636171","0.0-167.0","67ef42807f408cca62ea4bb0","4678","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":32,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4678","4678","true","blue38.jpg","37","avg","600","blue","2","[32,40]","36","There are three giraffes on a field","53","blue","",""
"html-keyboard-response","168","636683","0.0-168.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","169","638186","0.0-169.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:22px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":32,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","170","644503","0.0-170.0","67ef42807f408cca62ea4bb0","6314","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":33,""type"":""experimental"",""array_length"":8,""meanVal"":19,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6314","6314","true","blue16.jpg","15","avg","500","blue","8","[11,13,15,17,21,23,25,27]","19","There are three giraffes on a field","54","blue","",""
"html-keyboard-response","171","644920","0.0-171.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","172","646430","0.0-172.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:40px'></div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:45px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:30px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:42px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:43px'></div> <div> </div></span>","null","stimulus","{""index"":33,""type"":""experimental"",""array_length"":8,""meanVal"":19,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","173","651055","0.0-173.0","67ef42807f408cca62ea4bb0","4625","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":34,""type"":""experimental"",""array_length"":8,""meanVal"":24,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4625","4625","true","blue29.jpg","28","avg","400","blue","8","[16,18,20,22,26,28,30,32]","24","There are three giraffes on a field","55","blue","",""
"html-keyboard-response","174","651658","0.0-174.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","175","653166","0.0-175.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:2200% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:31px'></div></span>","null","stimulus","{""index"":34,""type"":""experimental"",""array_length"":8,""meanVal"":24,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","176","657787","0.0-176.0","67ef42807f408cca62ea4bb0","4618","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":35,""type"":""experimental"",""array_length"":6,""meanVal"":28,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4618","4618","true","blue30.jpg","29","avg","600","blue","6","[22,24,26,30,32,34]","28","There are three giraffes on a field","56","blue","",""
"html-keyboard-response","177","658188","0.0-177.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","178","659693","0.0-178.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:2600% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:35px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:30px'></div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:38px'></div> <div> </div></span>","null","stimulus","{""index"":35,""type"":""experimental"",""array_length"":6,""meanVal"":28,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","179","668027","0.0-179.0","67ef42807f408cca62ea4bb0","8332","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":36,""type"":""experimental"",""array_length"":8,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","8332","8332","true","blue23.jpg","22","avg","400","blue","8","[10,12,14,16,20,22,24,26]","18","There are three giraffes on a field","57","blue","",""
"html-keyboard-response","180","668443","0.0-180.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","181","669951","0.0-181.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:33px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":36,""type"":""experimental"",""array_length"":8,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","182","675724","0.0-182.0","67ef42807f408cca62ea4bb0","5770","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":37,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5770","5770","true","blue23.jpg","22","avg","400","blue","2","[20,28]","24","There are three giraffes on a field","58","blue","",""
"html-keyboard-response","183","676328","0.0-183.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","184","677834","0.0-184.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:28px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:41px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:27px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":37,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","185","683498","0.0-185.0","67ef42807f408cca62ea4bb0","5662","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":38,""type"":""experimental"",""array_length"":8,""meanVal"":24,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5662","5662","true","blue26.jpg","25","avg","600","blue","8","[16,18,20,22,26,28,30,32]","24","There are three giraffes on a field","59","blue","",""
"html-keyboard-response","186","684105","0.0-186.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","187","685615","0.0-187.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:1700% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:49px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:20px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:31px'></div> <div class='blue' style='background-position:900% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:800% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:38px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:32px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:39px'></div> <div> </div></span>","null","stimulus","{""index"":38,""type"":""experimental"",""array_length"":8,""meanVal"":24,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","188","692750","0.0-188.0","67ef42807f408cca62ea4bb0","7134","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":39,""type"":""experimental"",""array_length"":12,""meanVal"":17,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7134","7134","true","blue29.jpg","28","avg","600","blue","12","[8,12,9,15,17,16,19,19,20,23,24,26]","17","There are three giraffes on a field","60","blue","",""
"html-keyboard-response","189","693258","0.0-189.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","190","694765","0.0-190.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:20px'></div> <div> </div></span>","null","stimulus","{""index"":39,""type"":""experimental"",""array_length"":12,""meanVal"":17,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","191","702330","0.0-191.0","67ef42807f408cca62ea4bb0","7563","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":40,""type"":""experimental"",""array_length"":2,""meanVal"":28,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7563","7563","true","blue17.jpg","16","avg","500","blue","2","[24,32]","28","There are three giraffes on a field","61","blue","",""
"html-keyboard-response","192","702933","0.0-192.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","193","704446","0.0-193.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":40,""type"":""experimental"",""array_length"":2,""meanVal"":28,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","194","709284","0.0-194.0","67ef42807f408cca62ea4bb0","4837","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":41,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4837","4837","true","blue35.jpg","34","avg","600","blue","2","[30,38]","34","There are three giraffes on a field","62","blue","",""
"html-keyboard-response","195","709797","0.0-195.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","196","711303","0.0-196.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:49px'></div></span>","null","stimulus","{""index"":41,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","197","717858","0.0-197.0","67ef42807f408cca62ea4bb0","6554","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":42,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6554","6554","true","blue28.jpg","27","avg","500","blue","2","[23,31]","27","There are three giraffes on a field","63","blue","",""
"html-keyboard-response","198","718462","0.0-198.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","199","719968","0.0-199.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:2400% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:42px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:42px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:50px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:21px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:20px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:37px'></div></span>","null","stimulus","{""index"":42,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","200","725973","0.0-200.0","67ef42807f408cca62ea4bb0","6004","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":43,""type"":""experimental"",""array_length"":12,""meanVal"":24,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6004","6004","true","blue27.jpg","26","avg","600","blue","12","[15,19,16,22,24,23,26,26,27,30,31,33]","24","There are three giraffes on a field","64","blue","",""
"html-keyboard-response","201","726574","0.0-201.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","202","728087","0.0-202.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:3100% 0%;margin-top:29px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:21px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:29px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:42px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":43,""type"":""experimental"",""array_length"":12,""meanVal"":24,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","203","732177","0.0-203.0","67ef42807f408cca62ea4bb0","4087","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":44,""type"":""experimental"",""array_length"":6,""meanVal"":33,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4087","4087","true","blue34.jpg","33","avg","600","blue","6","[27,29,31,35,37,39]","33","There are three giraffes on a field","65","blue","",""
"html-keyboard-response","204","732690","0.0-204.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","205","734198","0.0-205.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:50px'></div> <div> </div> <div class='blue' style='background-position:3900% 0%;margin-top:24px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:20px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:25px'></div> <div> </div></span>","null","stimulus","{""index"":44,""type"":""experimental"",""array_length"":6,""meanVal"":33,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","206","740833","0.0-206.0","67ef42807f408cca62ea4bb0","6632","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":45,""type"":""experimental"",""array_length"":8,""meanVal"":33,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6632","6632","true","blue41.jpg","40","avg","500","blue","8","[25,27,29,31,35,37,39,41]","33","There are three giraffes on a field","66","blue","",""
"html-keyboard-response","207","741344","0.0-207.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","208","742853","0.0-208.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:39px'></div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:49px'></div> <div class='blue' style='background-position:4400% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:46px'></div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:42px'></div> <div class='blue' style='background-position:4200% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:38px'></div> <div> </div></span>","null","stimulus","{""index"":45,""type"":""experimental"",""array_length"":8,""meanVal"":33,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","209","746574","0.0-209.0","67ef42807f408cca62ea4bb0","3720","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":46,""type"":""experimental"",""array_length"":8,""meanVal"":36,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3720","3720","true","blue43.jpg","42","avg","500","blue","8","[28,30,32,34,38,40,42,44]","36","There are three giraffes on a field","67","blue","",""
"html-keyboard-response","210","747086","0.0-210.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","211","748589","0.0-211.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='blue' style='background-position:3100% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:41px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:35px'></div></span>","null","stimulus","{""index"":46,""type"":""experimental"",""array_length"":8,""meanVal"":36,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","212","755993","0.0-212.0","67ef42807f408cca62ea4bb0","7402","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":47,""type"":""experimental"",""array_length"":12,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7402","7402","true","blue32.jpg","31","avg","500","blue","12","[13,17,14,20,22,21,24,24,25,28,29,31]","22","There are three giraffes on a field","68","blue","",""
"survey-text","213","765180","0.0-213.0-0.0","67ef42807f408cca62ea4bb0","9183.799999952316","","","{""Q0"":""sky""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","214","765583","0.0-214.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","215","767086","0.0-215.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:900% 0%;margin-top:41px'></div> <div class='red' style='background-position:2300% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:34px'></div> <div class='red' style='background-position:1300% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:40px'></div> <div class='red' style='background-position:1600% 0%;margin-top:46px'></div> <div class='red' style='background-position:1600% 0%;margin-top:23px'></div> <div class='red' style='background-position:2000% 0%;margin-top:40px'></div> <div class='red' style='background-position:600% 0%;margin-top:41px'></div> <div class='red' style='background-position:1700% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:48px'></div></span>","null","stimulus","{""index"":47,""type"":""experimental"",""array_length"":12,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","216","771236","0.0-216.0","67ef42807f408cca62ea4bb0","4146","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":48,""type"":""experimental"",""array_length"":12,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4146","4146","true","red21.jpg","20","avg","400","red","12","[5,9,6,12,14,13,16,16,17,20,21,23]","14","There are three giraffes on a field","69","red","",""
"html-keyboard-response","217","771745","0.0-217.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","218","773248","0.0-218.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:31px'></div> <div class='red' style='background-position:3100% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:28px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":48,""type"":""experimental"",""array_length"":12,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","219","777280","0.0-219.0","67ef42807f408cca62ea4bb0","4031","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":49,""type"":""experimental"",""array_length"":6,""meanVal"":25,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4031","4031","true","red32.jpg","31","avg","500","red","6","[19,21,23,27,29,31]","25","There are three giraffes on a field","70","red","",""
"html-keyboard-response","220","777695","0.0-220.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","221","779205","0.0-221.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:43px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":49,""type"":""experimental"",""array_length"":6,""meanVal"":25,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","222","783613","0.0-222.0","67ef42807f408cca62ea4bb0","4407","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":50,""type"":""experimental"",""array_length"":2,""meanVal"":31,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4407","4407","true","red36.jpg","35","avg","400","red","2","[27,35]","31","There are three giraffes on a field","71","red","",""
"html-keyboard-response","223","784214","0.0-223.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","224","785715","0.0-224.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:2900% 0%;margin-top:26px'></div> <div class='red' style='background-position:4100% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:23px'></div> <div class='red' style='background-position:3900% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:49px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":50,""type"":""experimental"",""array_length"":2,""meanVal"":31,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","225","789489","0.0-225.0","67ef42807f408cca62ea4bb0","3771","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":51,""type"":""experimental"",""array_length"":6,""meanVal"":35,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3771","3771","true","red42.jpg","41","avg","600","red","6","[29,31,33,37,39,41]","35","There are three giraffes on a field","72","red","",""
"html-keyboard-response","226","790090","0.0-226.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","227","791599","0.0-227.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:37px'></div> <div class='red' style='background-position:3000% 0%;margin-top:24px'></div> <div class='red' style='background-position:3800% 0%;margin-top:41px'></div> <div class='red' style='background-position:2800% 0%;margin-top:47px'></div></span>","null","stimulus","{""index"":51,""type"":""experimental"",""array_length"":6,""meanVal"":35,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","228","795517","0.0-228.0","67ef42807f408cca62ea4bb0","3915","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":52,""type"":""experimental"",""array_length"":6,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3915","3915","true","red36.jpg","35","avg","600","red","6","[28,30,32,36,38,40]","34","There are three giraffes on a field","73","red","",""
"html-keyboard-response","229","796027","0.0-229.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","230","797536","0.0-230.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3200% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:29px'></div> <div class='red' style='background-position:2800% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:47px'></div> <div class='red' style='background-position:3000% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":52,""type"":""experimental"",""array_length"":6,""meanVal"":34,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","231","802029","0.0-231.0","67ef42807f408cca62ea4bb0","4491","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":53,""type"":""experimental"",""array_length"":6,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4491","4491","true","red32.jpg","31","avg","500","red","6","[28,30,32,36,38,40]","34","There are three giraffes on a field","74","red","",""
"html-keyboard-response","232","802632","0.0-232.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","233","804137","0.0-233.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:2500% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:48px'></div> <div class='red' style='background-position:1900% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:42px'></div> <div class='red' style='background-position:2600% 0%;margin-top:26px'></div> <div class='red' style='background-position:2900% 0%;margin-top:45px'></div> <div class='red' style='background-position:2200% 0%;margin-top:34px'></div> <div class='red' style='background-position:1800% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:31px'></div> <div class='red' style='background-position:3600% 0%;margin-top:26px'></div> <div class='red' style='background-position:3300% 0%;margin-top:25px'></div></span>","null","stimulus","{""index"":53,""type"":""experimental"",""array_length"":6,""meanVal"":34,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","234","808113","0.0-234.0","67ef42807f408cca62ea4bb0","3972","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":54,""type"":""experimental"",""array_length"":12,""meanVal"":27,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3972","3972","true","red31.jpg","30","avg","600","red","12","[18,22,19,25,27,26,29,29,30,33,34,36]","27","There are three giraffes on a field","75","red","",""
"html-keyboard-response","235","808621","0.0-235.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","236","810133","0.0-236.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:2000% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":54,""type"":""experimental"",""array_length"":12,""meanVal"":27,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","237","815579","0.0-237.0","67ef42807f408cca62ea4bb0","5443","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":55,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5443","5443","true","red22.jpg","21","avg","500","red","2","[20,28]","24","There are three giraffes on a field","76","red","",""
"html-keyboard-response","238","816090","0.0-238.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","239","817591","0.0-239.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:2600% 0%;margin-top:26px'></div> <div class='red' style='background-position:2000% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:50px'></div> <div class='red' style='background-position:3000% 0%;margin-top:21px'></div></span>","null","stimulus","{""index"":55,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","240","821143","0.0-240.0","67ef42807f408cca62ea4bb0","3550","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":56,""type"":""experimental"",""array_length"":8,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3550","3550","true","red32.jpg","31","avg","500","red","8","[14,16,18,20,24,26,28,30]","22","There are three giraffes on a field","77","red","",""
"html-keyboard-response","241","821644","0.0-241.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","242","823151","0.0-242.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:35px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":56,""type"":""experimental"",""array_length"":8,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","243","830121","0.0-243.0","67ef42807f408cca62ea4bb0","6969","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":57,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6969","6969","true","red29.jpg","28","avg","500","red","2","[30,38]","34","There are three giraffes on a field","78","red","",""
"html-keyboard-response","244","830631","0.0-244.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","245","832138","0.0-245.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3000% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:41px'></div> <div class='red' style='background-position:3900% 0%;margin-top:50px'></div> <div class='red' style='background-position:3600% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:20px'></div> <div class='red' style='background-position:3200% 0%;margin-top:28px'></div> <div class='red' style='background-position:2500% 0%;margin-top:42px'></div> <div class='red' style='background-position:2800% 0%;margin-top:26px'></div> <div class='red' style='background-position:2200% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:31px'></div> <div class='red' style='background-position:3700% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:33px'></div></span>","null","stimulus","{""index"":57,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","246","835923","0.0-246.0","67ef42807f408cca62ea4bb0","3783","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":58,""type"":""experimental"",""array_length"":12,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3783","3783","true","red40.jpg","39","avg","500","red","12","[21,25,22,28,30,29,32,32,33,36,37,39]","30","There are three giraffes on a field","79","red","",""
"html-keyboard-response","247","836327","0.0-247.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","248","837834","0.0-248.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2200% 0%;margin-top:48px'></div> <div class='red' style='background-position:2400% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:27px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:30px'></div> <div class='red' style='background-position:2600% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:36px'></div></span>","null","stimulus","{""index"":58,""type"":""experimental"",""array_length"":12,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","249","841722","0.0-249.0","67ef42807f408cca62ea4bb0","3885","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":59,""type"":""experimental"",""array_length"":8,""meanVal"":28,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3885","3885","true","red34.jpg","33","avg","400","red","8","[20,22,24,26,30,32,34,36]","28","There are three giraffes on a field","80","red","",""
"html-keyboard-response","250","842129","0.0-250.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","251","843632","0.0-251.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:2900% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:46px'></div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:40px'></div> <div class='red' style='background-position:4100% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:30px'></div></span>","null","stimulus","{""index"":59,""type"":""experimental"",""array_length"":8,""meanVal"":28,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","252","847006","0.0-252.0","67ef42807f408cca62ea4bb0","3373","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":60,""type"":""experimental"",""array_length"":8,""meanVal"":33,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3373","3373","true","red44.jpg","43","avg","400","red","8","[25,27,29,31,35,37,39,41]","33","There are three giraffes on a field","81","red","",""
"html-keyboard-response","253","847410","0.0-253.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","254","848916","0.0-254.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1500% 0%;margin-top:42px'></div> <div class='red' style='background-position:2100% 0%;margin-top:40px'></div> <div class='red' style='background-position:1900% 0%;margin-top:50px'></div> <div class='red' style='background-position:2300% 0%;margin-top:36px'></div> <div class='red' style='background-position:1100% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":60,""type"":""experimental"",""array_length"":8,""meanVal"":33,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","255","853121","0.0-255.0","67ef42807f408cca62ea4bb0","4203","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":61,""type"":""experimental"",""array_length"":6,""meanVal"":17,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4203","4203","true","red22.jpg","21","avg","400","red","6","[11,13,15,19,21,23]","17","There are three giraffes on a field","82","red","",""
"html-keyboard-response","256","853631","0.0-256.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","257","855134","0.0-257.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:2500% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:34px'></div> <div class='red' style='background-position:1500% 0%;margin-top:23px'></div> <div class='red' style='background-position:2300% 0%;margin-top:39px'></div> <div class='red' style='background-position:1900% 0%;margin-top:48px'></div> <div class='red' style='background-position:2900% 0%;margin-top:48px'></div> <div class='red' style='background-position:1300% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":61,""type"":""experimental"",""array_length"":6,""meanVal"":17,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","258","865038","0.0-258.0","67ef42807f408cca62ea4bb0","9900","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":62,""type"":""experimental"",""array_length"":8,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9900","9900","true","red23.jpg","22","avg","500","red","8","[13,15,17,19,23,25,27,29]","21","There are three giraffes on a field","83","red","",""
"html-keyboard-response","259","865641","0.0-259.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","260","867151","0.0-260.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:38px'></div> <div class='red' style='background-position:2800% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:27px'></div> <div class='red' style='background-position:2000% 0%;margin-top:28px'></div> <div class='red' style='background-position:2400% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:40px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":62,""type"":""experimental"",""array_length"":8,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","261","872950","0.0-261.0","67ef42807f408cca62ea4bb0","5797","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":63,""type"":""experimental"",""array_length"":6,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5797","5797","true","red29.jpg","28","avg","600","red","6","[20,22,24,28,30,32]","26","There are three giraffes on a field","84","red","",""
"html-keyboard-response","262","873352","0.0-262.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","263","874860","0.0-263.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2500% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:40px'></div> <div class='red' style='background-position:2300% 0%;margin-top:32px'></div> <div class='red' style='background-position:2900% 0%;margin-top:47px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:44px'></div> <div class='red' style='background-position:1500% 0%;margin-top:35px'></div></span>","null","stimulus","{""index"":63,""type"":""experimental"",""array_length"":6,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","264","877915","0.0-264.0","67ef42807f408cca62ea4bb0","3052","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":64,""type"":""experimental"",""array_length"":8,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3052","3052","true","red29.jpg","28","avg","400","red","8","[13,15,17,19,23,25,27,29]","21","There are three giraffes on a field","85","red","",""
"html-keyboard-response","265","878317","0.0-265.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","266","879828","0.0-266.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:700% 0%;margin-top:29px'></div> <div class='red' style='background-position:800% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:46px'></div> <div class='red' style='background-position:1400% 0%;margin-top:32px'></div> <div class='red' style='background-position:1100% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:50px'></div> <div class='red' style='background-position:1500% 0%;margin-top:25px'></div> <div class='red' style='background-position:2500% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:26px'></div> <div class='red' style='background-position:2300% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:42px'></div></span>","null","stimulus","{""index"":64,""type"":""experimental"",""array_length"":8,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","267","883976","0.0-267.0","67ef42807f408cca62ea4bb0","4147","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":65,""type"":""experimental"",""array_length"":12,""meanVal"":16,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4147","4147","true","red21.jpg","20","avg","400","red","12","[7,11,8,14,16,15,18,18,19,22,23,25]","16","There are three giraffes on a field","86","red","",""
"html-keyboard-response","268","884393","0.0-268.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","269","885897","0.0-269.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:22px'></div> <div class='red' style='background-position:1900% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":65,""type"":""experimental"",""array_length"":12,""meanVal"":16,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","270","890244","0.0-270.0","67ef42807f408cca62ea4bb0","4345","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":66,""type"":""experimental"",""array_length"":2,""meanVal"":15,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4345","4345","true","red21.jpg","20","avg","400","red","2","[11,19]","15","There are three giraffes on a field","87","red","",""
"html-keyboard-response","271","890745","0.0-271.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","272","892247","0.0-272.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:38px'></div> <div class='red' style='background-position:2000% 0%;margin-top:38px'></div> <div class='red' style='background-position:2500% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:36px'></div> <div class='red' style='background-position:3400% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:43px'></div> <div class='red' style='background-position:1600% 0%;margin-top:34px'></div> <div class='red' style='background-position:3100% 0%;margin-top:22px'></div> <div class='red' style='background-position:2400% 0%;margin-top:49px'></div> <div class='red' style='background-position:3200% 0%;margin-top:48px'></div> <div class='red' style='background-position:2700% 0%;margin-top:50px'></div> <div class='red' style='background-position:2300% 0%;margin-top:23px'></div></span>","null","stimulus","{""index"":66,""type"":""experimental"",""array_length"":2,""meanVal"":15,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","273","897397","0.0-273.0","67ef42807f408cca62ea4bb0","5148","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":67,""type"":""experimental"",""array_length"":12,""meanVal"":25,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5148","5148","true","red28.jpg","27","avg","500","red","12","[16,20,17,23,25,24,27,27,28,31,32,34]","25","There are three giraffes on a field","88","red","",""
"html-keyboard-response","274","897798","0.0-274.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","275","899300","0.0-275.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2800% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:46px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:37px'></div> <div class='red' style='background-position:2400% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:27px'></div> <div> </div></span>","null","stimulus","{""index"":67,""type"":""experimental"",""array_length"":12,""meanVal"":25,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","276","904249","0.0-276.0","67ef42807f408cca62ea4bb0","4946","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":68,""type"":""experimental"",""array_length"":8,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4946","4946","true","red32.jpg","31","avg","400","red","8","[24,26,28,30,34,36,38,40]","32","There are three giraffes on a field","89","red","",""
"html-keyboard-response","277","904857","0.0-277.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","278","906375","0.0-278.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4200% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:38px'></div> <div class='red' style='background-position:4000% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:29px'></div> <div class='red' style='background-position:3200% 0%;margin-top:42px'></div></span>","null","stimulus","{""index"":68,""type"":""experimental"",""array_length"":8,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","279","912282","0.0-279.0","67ef42807f408cca62ea4bb0","5904","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":69,""type"":""experimental"",""array_length"":6,""meanVal"":36,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5904","5904","true","red31.jpg","30","avg","600","red","6","[30,32,34,38,40,42]","36","There are three giraffes on a field","90","red","",""
"html-keyboard-response","280","912794","0.0-280.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","281","914297","0.0-281.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:33px'></div> <div class='red' style='background-position:1600% 0%;margin-top:31px'></div> <div class='red' style='background-position:800% 0%;margin-top:22px'></div> <div class='red' style='background-position:2000% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:26px'></div> <div class='red' style='background-position:1200% 0%;margin-top:27px'></div> <div class='red' style='background-position:1800% 0%;margin-top:49px'></div> <div class='red' style='background-position:600% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":69,""type"":""experimental"",""array_length"":6,""meanVal"":36,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","282","917637","0.0-282.0","67ef42807f408cca62ea4bb0","3338","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":70,""type"":""experimental"",""array_length"":8,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3338","3338","true","red17.jpg","16","avg","500","red","8","[6,8,10,12,16,18,20,22]","14","There are three giraffes on a field","91","red","",""
"html-keyboard-response","283","918039","0.0-283.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","284","919554","0.0-284.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:26px'></div> <div class='red' style='background-position:3900% 0%;margin-top:39px'></div></span>","null","stimulus","{""index"":70,""type"":""experimental"",""array_length"":8,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","285","923269","0.0-285.0","67ef42807f408cca62ea4bb0","3713","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":71,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3713","3713","true","red40.jpg","39","avg","400","red","2","[31,39]","35","There are three giraffes on a field","92","red","",""
"html-keyboard-response","286","923685","0.0-286.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","287","925197","0.0-287.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:49px'></div> <div> </div></span>","null","stimulus","{""index"":71,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","288","929273","0.0-288.0","67ef42807f408cca62ea4bb0","4074","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":72,""type"":""experimental"",""array_length"":2,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4074","4074","true","red25.jpg","24","avg","400","red","2","[17,25]","21","There are three giraffes on a field","93","red","",""
"html-keyboard-response","289","929781","0.0-289.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","290","931290","0.0-290.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":72,""type"":""experimental"",""array_length"":2,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","291","937050","0.0-291.0","67ef42807f408cca62ea4bb0","5758","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":73,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5758","5758","true","red34.jpg","33","avg","500","red","2","[28,36]","32","There are three giraffes on a field","94","red","",""
"html-keyboard-response","292","937453","0.0-292.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","293","938957","0.0-293.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:3500% 0%;margin-top:47px'></div> <div class='red' style='background-position:3900% 0%;margin-top:34px'></div> <div class='red' style='background-position:3400% 0%;margin-top:43px'></div> <div class='red' style='background-position:3600% 0%;margin-top:21px'></div> <div class='red' style='background-position:2800% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:34px'></div> <div class='red' style='background-position:4500% 0%;margin-top:31px'></div> <div class='red' style='background-position:4200% 0%;margin-top:30px'></div> <div class='red' style='background-position:2700% 0%;margin-top:44px'></div> <div class='red' style='background-position:3800% 0%;margin-top:45px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":73,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","294","943488","0.0-294.0","67ef42807f408cca62ea4bb0","4530","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":74,""type"":""experimental"",""array_length"":12,""meanVal"":36,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4530","4530","true","red39.jpg","38","avg","400","red","12","[27,31,28,34,36,35,38,38,39,42,43,45]","36","There are three giraffes on a field","95","red","",""
"html-keyboard-response","295","943890","0.0-295.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","296","945398","0.0-296.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3800% 0%;margin-top:25px'></div> <div class='red' style='background-position:3200% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4400% 0%;margin-top:26px'></div> <div class='red' style='background-position:3000% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:4200% 0%;margin-top:47px'></div> <div class='red' style='background-position:2800% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:43px'></div> <div class='red' style='background-position:3400% 0%;margin-top:43px'></div></span>","null","stimulus","{""index"":74,""type"":""experimental"",""array_length"":12,""meanVal"":36,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","297","951150","0.0-297.0","67ef42807f408cca62ea4bb0","5749","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":75,""type"":""experimental"",""array_length"":8,""meanVal"":36,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5749","5749","true","red46.jpg","45","avg","400","red","8","[28,30,32,34,38,40,42,44]","36","There are three giraffes on a field","96","red","",""
"html-keyboard-response","298","951756","0.0-298.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","299","953262","0.0-299.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:35px'></div> <div> </div></span>","null","stimulus","{""index"":75,""type"":""experimental"",""array_length"":8,""meanVal"":36,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","300","956993","0.0-300.0","67ef42807f408cca62ea4bb0","3728","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":76,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3728","3728","true","red27.jpg","26","avg","600","red","2","[18,26]","22","There are three giraffes on a field","97","red","",""
"html-keyboard-response","301","957394","0.0-301.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","302","958896","0.0-302.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:3100% 0%;margin-top:22px'></div> <div class='red' style='background-position:1900% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:50px'></div> <div class='red' style='background-position:1600% 0%;margin-top:33px'></div> <div class='red' style='background-position:2300% 0%;margin-top:24px'></div> <div class='red' style='background-position:3300% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:27px'></div> <div class='red' style='background-position:2400% 0%;margin-top:21px'></div> <div class='red' style='background-position:2600% 0%;margin-top:29px'></div> <div class='red' style='background-position:1500% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:45px'></div></span>","null","stimulus","{""index"":76,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","303","963031","0.0-303.0","67ef42807f408cca62ea4bb0","4131","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":77,""type"":""experimental"",""array_length"":12,""meanVal"":24,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4131","4131","true","red38.jpg","37","avg","400","red","12","[15,19,16,22,24,23,26,26,27,30,31,33]","24","There are three giraffes on a field","98","red","",""
"html-keyboard-response","304","963447","0.0-304.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","305","964956","0.0-305.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1500% 0%;margin-top:36px'></div> <div class='red' style='background-position:2500% 0%;margin-top:44px'></div> <div class='red' style='background-position:2100% 0%;margin-top:39px'></div> <div class='red' style='background-position:2500% 0%;margin-top:49px'></div> <div class='red' style='background-position:2300% 0%;margin-top:49px'></div> <div class='red' style='background-position:3000% 0%;margin-top:27px'></div> <div class='red' style='background-position:3200% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:28px'></div> <div class='red' style='background-position:1800% 0%;margin-top:35px'></div> <div class='red' style='background-position:2900% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:49px'></div> <div class='red' style='background-position:2200% 0%;margin-top:36px'></div> <div> </div></span>","null","stimulus","{""index"":77,""type"":""experimental"",""array_length"":12,""meanVal"":24,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","306","970501","0.0-306.0","67ef42807f408cca62ea4bb0","5543","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":78,""type"":""experimental"",""array_length"":12,""meanVal"":23,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5543","5543","true","red28.jpg","27","avg","400","red","12","[14,18,15,21,23,22,25,25,26,29,30,32]","23","There are three giraffes on a field","99","red","",""
"html-keyboard-response","307","971108","0.0-307.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","308","972609","0.0-308.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:29px'></div> <div class='red' style='background-position:900% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:37px'></div></span>","null","stimulus","{""index"":78,""type"":""experimental"",""array_length"":12,""meanVal"":23,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","309","975993","0.0-309.0","67ef42807f408cca62ea4bb0","3383","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":79,""type"":""experimental"",""array_length"":6,""meanVal"":15,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3383","3383","true","red16.jpg","15","avg","600","red","6","[9,11,13,17,19,21]","15","There are three giraffes on a field","100","red","",""
"html-keyboard-response","310","976597","0.0-310.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","311","978099","0.0-311.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:1900% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:35px'></div> <div class='red' style='background-position:2500% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:25px'></div> <div class='red' style='background-position:2700% 0%;margin-top:31px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":79,""type"":""experimental"",""array_length"":6,""meanVal"":15,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","312","982276","0.0-312.0","67ef42807f408cca62ea4bb0","4176","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":80,""type"":""experimental"",""array_length"":6,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4176","4176","true","red25.jpg","24","avg","600","red","6","[15,17,19,23,25,27]","21","There are three giraffes on a field","101","red","",""
"html-keyboard-response","313","982692","0.0-313.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","314","984201","0.0-314.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:2600% 0%;margin-top:44px'></div> <div class='red' style='background-position:2400% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":80,""type"":""experimental"",""array_length"":6,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","315","988994","0.0-315.0","67ef42807f408cca62ea4bb0","4792","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":81,""type"":""experimental"",""array_length"":6,""meanVal"":20,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4792","4792","true","red20.jpg","19","avg","400","red","6","[14,16,18,22,24,26]","20","There are three giraffes on a field","102","red","",""
"html-keyboard-response","316","989600","0.0-316.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","317","991113","0.0-317.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:40px'></div> <div> </div></span>","null","stimulus","{""index"":81,""type"":""experimental"",""array_length"":6,""meanVal"":20,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","318","995672","0.0-318.0","67ef42807f408cca62ea4bb0","4558","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":82,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4558","4558","true","red27.jpg","26","avg","600","red","2","[22,30]","26","There are three giraffes on a field","103","red","",""
"html-keyboard-response","319","996087","0.0-319.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","320","997595","0.0-320.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:41px'></div> <div class='red' style='background-position:2100% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:31px'></div> <div class='red' style='background-position:1700% 0%;margin-top:39px'></div> <div class='red' style='background-position:2700% 0%;margin-top:30px'></div> <div class='red' style='background-position:3100% 0%;margin-top:33px'></div> <div class='red' style='background-position:1900% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":82,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","321","1003110","0.0-321.0","67ef42807f408cca62ea4bb0","5512","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":83,""type"":""experimental"",""array_length"":8,""meanVal"":23,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5512","5512","true","red31.jpg","30","avg","400","red","8","[15,17,19,21,25,27,29,31]","23","There are three giraffes on a field","104","red","",""
"html-keyboard-response","322","1003712","0.0-322.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","323","1005220","0.0-323.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2700% 0%;margin-top:39px'></div> <div class='red' style='background-position:1600% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:38px'></div> <div class='red' style='background-position:2300% 0%;margin-top:27px'></div> <div class='red' style='background-position:2700% 0%;margin-top:43px'></div> <div class='red' style='background-position:3100% 0%;margin-top:22px'></div> <div class='red' style='background-position:3200% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:29px'></div> <div class='red' style='background-position:3400% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:21px'></div> <div class='red' style='background-position:2400% 0%;margin-top:39px'></div></span>","null","stimulus","{""index"":83,""type"":""experimental"",""array_length"":8,""meanVal"":23,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","324","1011312","0.0-324.0","67ef42807f408cca62ea4bb0","6090","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":84,""type"":""experimental"",""array_length"":12,""meanVal"":25,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6090","6090","true","red29.jpg","28","avg","600","red","12","[16,20,17,23,25,24,27,27,28,31,32,34]","25","There are three giraffes on a field","105","red","",""
"html-keyboard-response","325","1011728","0.0-325.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","326","1013229","0.0-326.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":84,""type"":""experimental"",""array_length"":12,""meanVal"":25,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","327","1017127","0.0-327.0","67ef42807f408cca62ea4bb0","3895","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":85,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3895","3895","true","red36.jpg","35","avg","400","red","2","[25,33]","29","There are three giraffes on a field","106","red","",""
"html-keyboard-response","328","1017728","0.0-328.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","329","1019238","0.0-329.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:3400% 0%;margin-top:48px'></div> <div class='red' style='background-position:3400% 0%;margin-top:36px'></div> <div class='red' style='background-position:3100% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:40px'></div> <div class='red' style='background-position:3200% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:45px'></div> <div class='red' style='background-position:2300% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:43px'></div> <div class='red' style='background-position:3500% 0%;margin-top:47px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:21px'></div></span>","null","stimulus","{""index"":85,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","330","1025056","0.0-330.0","67ef42807f408cca62ea4bb0","5814","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":86,""type"":""experimental"",""array_length"":12,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5814","5814","true","red35.jpg","34","avg","600","red","12","[23,27,24,30,32,31,34,34,35,38,39,41]","32","There are three giraffes on a field","107","red","",""
"html-keyboard-response","331","1025558","0.0-331.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","332","1027063","0.0-332.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2900% 0%;margin-top:27px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:37px'></div> <div class='red' style='background-position:1300% 0%;margin-top:30px'></div> <div class='red' style='background-position:1900% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:48px'></div> <div class='red' style='background-position:2300% 0%;margin-top:32px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":86,""type"":""experimental"",""array_length"":12,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","333","1031638","0.0-333.0","67ef42807f408cca62ea4bb0","4574","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":87,""type"":""experimental"",""array_length"":8,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4574","4574","true","red30.jpg","29","avg","500","red","8","[13,15,17,19,23,25,27,29]","21","There are three giraffes on a field","108","red","",""
"html-keyboard-response","334","1032042","0.0-334.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","335","1033544","0.0-335.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:2800% 0%;margin-top:24px'></div> <div class='red' style='background-position:2600% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:21px'></div> <div class='red' style='background-position:2900% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:33px'></div> <div class='red' style='background-position:2500% 0%;margin-top:22px'></div> <div class='red' style='background-position:3200% 0%;margin-top:45px'></div> <div class='red' style='background-position:1700% 0%;margin-top:43px'></div> <div class='red' style='background-position:2400% 0%;margin-top:48px'></div> <div class='red' style='background-position:2100% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:47px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:45px'></div></span>","null","stimulus","{""index"":87,""type"":""experimental"",""array_length"":8,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","336","1038228","0.0-336.0","67ef42807f408cca62ea4bb0","4682","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":88,""type"":""experimental"",""array_length"":12,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4682","4682","true","red28.jpg","27","avg","400","red","12","[17,21,18,24,26,25,28,28,29,32,33,35]","26","There are three giraffes on a field","109","red","",""
"html-keyboard-response","337","1038735","0.0-337.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","338","1040244","0.0-338.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:3100% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:38px'></div> <div class='red' style='background-position:2900% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:42px'></div> <div class='red' style='background-position:3900% 0%;margin-top:42px'></div> <div> </div></span>","null","stimulus","{""index"":88,""type"":""experimental"",""array_length"":12,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","339","1046933","0.0-339.0","67ef42807f408cca62ea4bb0","6688","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":89,""type"":""experimental"",""array_length"":6,""meanVal"":33,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6688","6688","true","red34.jpg","33","avg","500","red","6","[27,29,31,35,37,39]","33","There are three giraffes on a field","110","red","",""
"html-keyboard-response","340","1047442","0.0-340.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","341","1048949","0.0-341.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":89,""type"":""experimental"",""array_length"":6,""meanVal"":33,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","342","1055704","0.0-342.0","67ef42807f408cca62ea4bb0","6753","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":90,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6753","6753","true","red22.jpg","21","avg","500","red","2","[10,18]","14","There are three giraffes on a field","111","red","",""
"html-keyboard-response","343","1056219","0.0-343.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","344","1057722","0.0-344.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3200% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:40px'></div> <div class='red' style='background-position:3300% 0%;margin-top:37px'></div> <div class='red' style='background-position:2500% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:25px'></div> <div class='red' style='background-position:2900% 0%;margin-top:23px'></div> <div class='red' style='background-position:3600% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:32px'></div> <div class='red' style='background-position:3200% 0%;margin-top:49px'></div> <div class='red' style='background-position:3900% 0%;margin-top:31px'></div> <div class='red' style='background-position:3700% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:43px'></div></span>","null","stimulus","{""index"":90,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","345","1062501","0.0-345.0","67ef42807f408cca62ea4bb0","4777","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":91,""type"":""experimental"",""array_length"":12,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4777","4777","true","red23.jpg","22","avg","500","red","12","[21,25,22,28,30,29,32,32,33,36,37,39]","30","There are three giraffes on a field","112","red","",""
"html-keyboard-response","346","1063010","0.0-346.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","347","1064520","0.0-347.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:34px'></div> <div class='red' style='background-position:1600% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:46px'></div> <div class='red' style='background-position:1400% 0%;margin-top:20px'></div> <div class='red' style='background-position:2400% 0%;margin-top:26px'></div> <div class='red' style='background-position:1200% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:45px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:34px'></div> <div> </div></span>","null","stimulus","{""index"":91,""type"":""experimental"",""array_length"":12,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","348","1070753","0.0-348.0","67ef42807f408cca62ea4bb0","6230","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":92,""type"":""experimental"",""array_length"":8,""meanVal"":18,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6230","6230","true","red22.jpg","21","avg","500","red","8","[10,12,14,16,20,22,24,26]","18","There are three giraffes on a field","113","red","",""
"html-keyboard-response","349","1071166","0.0-349.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","350","1072676","0.0-350.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3800% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:4200% 0%;margin-top:44px'></div> <div class='red' style='background-position:3200% 0%;margin-top:48px'></div> <div class='red' style='background-position:3000% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:42px'></div> <div class='red' style='background-position:4000% 0%;margin-top:38px'></div> <div class='red' style='background-position:3600% 0%;margin-top:40px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":92,""type"":""experimental"",""array_length"":8,""meanVal"":18,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","351","1075675","0.0-351.0","67ef42807f408cca62ea4bb0","2997","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":93,""type"":""experimental"",""array_length"":8,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2997","2997","true","red41.jpg","40","avg","400","red","8","[26,28,30,32,36,38,40,42]","34","There are three giraffes on a field","114","red","",""
"html-keyboard-response","352","1076077","0.0-352.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","353","1077583","0.0-353.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:2300% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:35px'></div></span>","null","stimulus","{""index"":93,""type"":""experimental"",""array_length"":8,""meanVal"":34,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","354","1086182","0.0-354.0","67ef42807f408cca62ea4bb0","8596","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":94,""type"":""experimental"",""array_length"":6,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8596","8596","true","red23.jpg","22","avg","400","red","6","[15,17,19,23,25,27]","21","There are three giraffes on a field","115","red","",""
"html-keyboard-response","355","1086695","0.0-355.0","67ef42807f408cca62ea4bb0","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","356","1088197","0.0-356.0","67ef42807f408cca62ea4bb0","null","","","","<span class='grid'><div class='red' style='background-position:1300% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":94,""type"":""experimental"",""array_length"":6,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","357","1092455","0.0-357.0","67ef42807f408cca62ea4bb0","4255","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":95,""type"":""experimental"",""array_length"":2,""meanVal"":17,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4255","4255","true","red21.jpg","20","avg","500","red","2","[13,21]","17","There are three giraffes on a field","116","red","",""
"html-button-response","358","1149538","0.0-358.0","67ef42807f408cca62ea4bb0","57082.09999990463","","","","<p><strong>My purpose in this experiment was:</strong></p>","","","","","","","","","","","","","","","","","","","","","","","","","","","","1","2"
"survey-text","359","1283243","0.0-360.0-0.0","67ef42807f408cca62ea4bb0","133700.20000004768","","","{""feel_strategy"":""I looked at the average level of shade of the array. I payed attention to the colored squares, and estimate their average color.""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","360","1287041","0.0-362.0","67ef42807f408cca62ea4bb0","3796.7999999523163","","[{""page_index"":0,""viewing_time"":3796.5}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
