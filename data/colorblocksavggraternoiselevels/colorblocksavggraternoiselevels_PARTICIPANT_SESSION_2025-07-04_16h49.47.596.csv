"trial_type","trial_index","time_elapsed","internal_node_id","participant_id","rt","url","view_history","responses","stimulus","key_press","Name","config","type","prompt","step","max","start","on_load","data","min","labels","button_label","stimulus_duration","trial_duration","response_ends_trial","imageSelected","indexSelected","exp_type","fixationTime","faceIdentity","array_length","array_values","meanVal","description","trial","color","button_pressed","purpose"
"pavlovia","0","6","0.0-0.0","60dfd857e293a99dd577f4c8","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"external-html","1","18859","0.0-1.0","60dfd857e293a99dd577f4c8","18507.700000047684","external_page.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","2","105775","0.0-2.0","60dfd857e293a99dd577f4c8","86914.39999997616","","[{""page_index"":0,""viewing_time"":15818},{""page_index"":1,""viewing_time"":33186.699999928474},{""page_index"":2,""viewing_time"":27348.899999976158},{""page_index"":3,""viewing_time"":10559.900000095367}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","3","111117","0.0-3.0","60dfd857e293a99dd577f4c8","5311.399999976158","","","{""Q0"":""60dfd857e293a99dd577f4c8""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","4","113409","0.0-4.0","60dfd857e293a99dd577f4c8","2288.7000000476837","","[{""page_index"":0,""viewing_time"":2288.399999976158}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","5","142508","0.0-5.0","60dfd857e293a99dd577f4c8","29096.5","","","{""Q0"":""three giraffes in a field""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","6","155747","0.0-6.0-0.0","60dfd857e293a99dd577f4c8","13235.199999928474","","","{""Q0"":""but""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","7","156250","0.0-7.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","8","157753","0.0-8.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:1700% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:35px'></div> <div class='red' style='background-position:1200% 0%;margin-top:31px'></div> <div class='red' style='background-position:1400% 0%;margin-top:20px'></div> <div class='red' style='background-position:2000% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:46px'></div> <div class='red' style='background-position:100% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","9","189900","0.0-9.0","60dfd857e293a99dd577f4c8","32127","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":0,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","32127","32127","true","red11.jpg","10","avg","500","red","7","[20,19,10,17,12,1,14]","13.285714285714286","three giraffes in a field","1","","",""
"html-keyboard-response","10","190302","0.0-10.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","11","191806","0.0-11.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:3300% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4500% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:43px'></div> <div class='red' style='background-position:4800% 0%;margin-top:21px'></div> <div class='red' style='background-position:4200% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:4400% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:23px'></div> <div class='red' style='background-position:4000% 0%;margin-top:35px'></div></span>","null","stimulus","{""index"":0,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","12","203169","0.0-12.0","60dfd857e293a99dd577f4c8","11358","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":1,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","11358","11358","true","red33.jpg","32","avg","400","red","8","[33,45,43,42,44,48,40,38]","41.625","three giraffes in a field","2","","",""
"html-keyboard-response","13","203671","0.0-13.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","14","205173","0.0-14.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:1700% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:34px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":1,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","15","215178","0.0-15.0","60dfd857e293a99dd577f4c8","9999","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":2,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9999","9999","true","red7.jpg","6","avg","500","red","3","[5,17,6]","9.333333333333334","three giraffes in a field","3","","",""
"html-keyboard-response","16","215679","0.0-16.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","17","217180","0.0-17.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:27px'></div> <div class='red' style='background-position:4300% 0%;margin-top:23px'></div> <div> </div></span>","null","stimulus","{""index"":2,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","18","222638","0.0-18.0","60dfd857e293a99dd577f4c8","5456","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":3,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5456","5456","true","red34.jpg","33","avg","500","red","3","[29,43,31]","34.333333333333336","three giraffes in a field","4","","",""
"html-keyboard-response","19","223240","0.0-19.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","20","224741","0.0-20.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:400% 0%;margin-top:37px'></div> <div class='red' style='background-position:700% 0%;margin-top:22px'></div> <div class='red' style='background-position:2000% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:28px'></div> <div class='red' style='background-position:1200% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='red' style='background-position:800% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:46px'></div> <div class='red' style='background-position:100% 0%;margin-top:24px'></div></span>","null","stimulus","{""index"":3,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","21","233369","0.0-21.0","60dfd857e293a99dd577f4c8","8626","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":4,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8626","8626","true","red7.jpg","6","avg","600","red","9","[4,8,20,1,12,7,18,10,5]","9.444444444444445","three giraffes in a field","5","","",""
"html-keyboard-response","22","233971","0.0-22.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","23","235474","0.0-23.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:4700% 0%;margin-top:41px'></div> <div class='red' style='background-position:4100% 0%;margin-top:44px'></div> <div class='red' style='background-position:3000% 0%;margin-top:50px'></div> <div class='red' style='background-position:3200% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":4,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","24","237305","0.0-24.0","60dfd857e293a99dd577f4c8","1826","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":5,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1826","1826","true","red25.jpg","24","avg","600","red","6","[32,31,36,47,41,30]","36.166666666666664","three giraffes in a field","6","","",""
"html-keyboard-response","25","237806","0.0-25.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","26","239308","0.0-26.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:4600% 0%;margin-top:26px'></div> <div class='red' style='background-position:4200% 0%;margin-top:32px'></div> <div class='red' style='background-position:3000% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:4500% 0%;margin-top:48px'></div> <div class='red' style='background-position:4000% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:28px'></div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:21px'></div> <div class='red' style='background-position:4700% 0%;margin-top:42px'></div> <div class='red' style='background-position:3800% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:50px'></div> <div class='red' style='background-position:3400% 0%;margin-top:33px'></div> <div class='red' style='background-position:2900% 0%;margin-top:38px'></div> <div> </div></span>","null","stimulus","{""index"":5,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","27","250058","0.0-27.0","60dfd857e293a99dd577f4c8","10745","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":6,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","10745","10745","true","red35.jpg","34","avg","500","red","12","[45,30,35,29,41,42,34,38,40,46,47,36]","38.583333333333336","three giraffes in a field","7","","",""
"html-keyboard-response","28","250660","0.0-28.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","29","252162","0.0-29.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:27px'></div> <div> </div></span>","null","stimulus","{""index"":6,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","30","261404","0.0-30.0","60dfd857e293a99dd577f4c8","9237","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":7,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9237","9237","true","red5.jpg","4","avg","600","red","2","[10,16]","13","three giraffes in a field","8","","",""
"html-keyboard-response","31","261806","0.0-31.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","32","263309","0.0-32.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:4600% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:48px'></div> <div class='red' style='background-position:4300% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":7,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","33","273231","0.0-33.0","60dfd857e293a99dd577f4c8","9919","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":8,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9919","9919","true","red37.jpg","36","avg","400","red","4","[38,46,43,29]","39","three giraffes in a field","9","","",""
"html-keyboard-response","34","273633","0.0-34.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","35","275134","0.0-35.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:35px'></div> <div class='red' style='background-position:2900% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":8,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","36","284669","0.0-36.0","60dfd857e293a99dd577f4c8","9532","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":9,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9532","9532","true","red31.jpg","30","avg","400","red","2","[29,35]","32","three giraffes in a field","10","","",""
"html-keyboard-response","37","285270","0.0-37.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","38","286773","0.0-38.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:300% 0%;margin-top:37px'></div> <div class='red' style='background-position:200% 0%;margin-top:36px'></div> <div class='red' style='background-position:1900% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:900% 0%;margin-top:24px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":9,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","39","301669","0.0-39.0","60dfd857e293a99dd577f4c8","14890","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":10,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","14890","14890","true","red8.jpg","7","avg","600","red","4","[9,2,3,19]","8.25","three giraffes in a field","11","","",""
"html-keyboard-response","40","302270","0.0-40.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","41","303771","0.0-41.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:500% 0%;margin-top:22px'></div> <div class='red' style='background-position:1400% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:34px'></div> <div class='red' style='background-position:100% 0%;margin-top:34px'></div> <div class='red' style='background-position:700% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:36px'></div> <div class='red' style='background-position:900% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:32px'></div> <div class='red' style='background-position:1600% 0%;margin-top:33px'></div></span>","null","stimulus","{""index"":10,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","42","319886","0.0-42.0","60dfd857e293a99dd577f4c8","16109","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":11,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","16109","16109","true","red10.jpg","9","avg","600","red","10","[12,16,5,14,9,2,7,6,15,1]","8.7","three giraffes in a field","12","","",""
"html-keyboard-response","43","320287","0.0-43.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","44","321790","0.0-44.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3200% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:4700% 0%;margin-top:21px'></div> <div class='red' style='background-position:4400% 0%;margin-top:44px'></div> <div class='red' style='background-position:3000% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:4600% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:20px'></div> <div class='red' style='background-position:3500% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:27px'></div> <div class='red' style='background-position:3800% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:4200% 0%;margin-top:27px'></div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:43px'></div></span>","null","stimulus","{""index"":11,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","45","329795","0.0-45.0","60dfd857e293a99dd577f4c8","8000","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":12,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8000","8000","true","red32.jpg","31","avg","400","red","11","[42,38,32,39,35,44,40,43,30,47,46]","39.63636363636363","three giraffes in a field","13","","",""
"html-keyboard-response","46","330396","0.0-46.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","47","331898","0.0-47.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1600% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:900% 0%;margin-top:20px'></div> <div class='red' style='background-position:1800% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":12,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","48","340407","0.0-48.0","60dfd857e293a99dd577f4c8","8505","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":13,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8505","8505","true","red14.jpg","13","avg","600","red","4","[16,18,9,20]","15.75","three giraffes in a field","14","","",""
"html-keyboard-response","49","340811","0.0-49.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","50","342316","0.0-50.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1300% 0%;margin-top:38px'></div> <div class='red' style='background-position:1500% 0%;margin-top:48px'></div> <div class='red' style='background-position:1100% 0%;margin-top:31px'></div> <div class='red' style='background-position:400% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:42px'></div> <div class='red' style='background-position:1900% 0%;margin-top:41px'></div> <div class='red' style='background-position:1600% 0%;margin-top:27px'></div> <div class='red' style='background-position:1400% 0%;margin-top:28px'></div> <div class='red' style='background-position:1000% 0%;margin-top:35px'></div> <div class='red' style='background-position:500% 0%;margin-top:33px'></div> <div class='red' style='background-position:700% 0%;margin-top:32px'></div> <div> </div></span>","null","stimulus","{""index"":13,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","51","364426","0.0-51.0","60dfd857e293a99dd577f4c8","22106","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":14,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","22106","22106","true","red15.jpg","14","avg","400","red","12","[15,2,6,11,7,16,14,19,10,13,4,5]","10.166666666666666","three giraffes in a field","15","","",""
"html-keyboard-response","52","364827","0.0-52.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","53","366329","0.0-53.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:4500% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":14,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","54","373705","0.0-54.0","60dfd857e293a99dd577f4c8","7371","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":15,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7371","7371","true","red38.jpg","37","avg","400","red","2","[41,45]","43","three giraffes in a field","16","","",""
"html-keyboard-response","55","374107","0.0-55.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","56","375609","0.0-56.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:3200% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:23px'></div> <div class='red' style='background-position:4300% 0%;margin-top:47px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:37px'></div> <div class='red' style='background-position:4700% 0%;margin-top:50px'></div> <div class='red' style='background-position:2900% 0%;margin-top:26px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:44px'></div> <div class='red' style='background-position:3000% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4200% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:32px'></div> <div> </div></span>","null","stimulus","{""index"":15,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","57","381774","0.0-57.0","60dfd857e293a99dd577f4c8","6159","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":16,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6159","6159","true","red38.jpg","37","avg","400","red","10","[29,38,42,47,34,33,40,32,30,43]","36.8","three giraffes in a field","17","","",""
"html-keyboard-response","58","382175","0.0-58.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","59","383678","0.0-59.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:300% 0%;margin-top:28px'></div> <div class='red' style='background-position:1600% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:700% 0%;margin-top:28px'></div> <div class='red' style='background-position:800% 0%;margin-top:41px'></div> <div class='red' style='background-position:2000% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:100% 0%;margin-top:42px'></div> <div class='red' style='background-position:1900% 0%;margin-top:36px'></div> <div class='red' style='background-position:1500% 0%;margin-top:42px'></div> <div class='red' style='background-position:1800% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:41px'></div> <div class='red' style='background-position:1300% 0%;margin-top:30px'></div> <div> </div></span>","null","stimulus","{""index"":16,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","60","393113","0.0-60.0","60dfd857e293a99dd577f4c8","9431","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":17,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9431","9431","true","red15.jpg","14","avg","400","red","11","[20,3,13,10,19,16,18,1,15,8,7]","11.818181818181818","three giraffes in a field","18","","",""
"html-keyboard-response","61","393515","0.0-61.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","62","395017","0.0-62.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3100% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:44px'></div> <div class='red' style='background-position:4700% 0%;margin-top:50px'></div> <div class='red' style='background-position:4600% 0%;margin-top:24px'></div> <div class='red' style='background-position:3200% 0%;margin-top:33px'></div> <div class='red' style='background-position:4300% 0%;margin-top:22px'></div> <div class='red' style='background-position:3900% 0%;margin-top:22px'></div> <div class='red' style='background-position:4500% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:41px'></div> <div class='red' style='background-position:3000% 0%;margin-top:26px'></div></span>","null","stimulus","{""index"":17,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","63","402689","0.0-63.0","60dfd857e293a99dd577f4c8","7670","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":18,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7670","7670","true","red39.jpg","38","avg","400","red","11","[33,30,39,35,31,46,36,43,45,47,32]","37.90909090909091","three giraffes in a field","19","","",""
"html-keyboard-response","64","403090","0.0-64.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","65","404591","0.0-65.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:300% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:28px'></div> <div class='red' style='background-position:200% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:33px'></div> <div class='red' style='background-position:900% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='red' style='background-position:100% 0%;margin-top:21px'></div> <div class='red' style='background-position:800% 0%;margin-top:21px'></div> <div class='red' style='background-position:1400% 0%;margin-top:32px'></div> <div class='red' style='background-position:700% 0%;margin-top:21px'></div></span>","null","stimulus","{""index"":18,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","66","413547","0.0-66.0","60dfd857e293a99dd577f4c8","8954","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":19,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8954","8954","true","red15.jpg","14","avg","400","red","11","[5,16,3,20,2,9,7,18,14,8,1]","9.363636363636363","three giraffes in a field","20","","",""
"instructions","67","419362","0.0-67.0","60dfd857e293a99dd577f4c8","5814.399999976158","","[{""page_index"":0,""viewing_time"":5814}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","68","427283","0.0-68.0-0.0","60dfd857e293a99dd577f4c8","7917.100000023842","","","{""Q0"":""rock""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","69","427885","0.0-69.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","70","429390","0.0-70.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:600% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:30px'></div> <div class='blue' style='background-position:400% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:28px'></div> <div class='blue' style='background-position:700% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:48px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:32px'></div> <div class='blue' style='background-position:700% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:700% 0%;margin-top:22px'></div> <div class='blue' style='background-position:700% 0%;margin-top:29px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:20px'></div> <div class='blue' style='background-position:700% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:38px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:33px'></div> <div> </div></span>","null","stimulus","{""index"":19,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","71","444387","0.0-71.0","60dfd857e293a99dd577f4c8","14994","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":0,""type"":""experimental"",""array_length"":20,""meanVal"":14,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","14994","14994","true","blue17.jpg","16","avg","600","blue","20","[4,6,7,7,7,7,7,11,12,13,13,13,14,14,15,15,19,20,23,23]","14","three giraffes in a field","21","blue","",""
"html-keyboard-response","72","444888","0.0-72.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","73","446391","0.0-73.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:38px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:38px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:35px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:43px'></div> <div> </div></span>","null","stimulus","{""index"":0,""type"":""experimental"",""array_length"":20,""meanVal"":14,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","74","453491","0.0-74.0","60dfd857e293a99dd577f4c8","7095","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":1,""type"":""experimental"",""array_length"":10,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7095","7095","true","blue25.jpg","24","avg","500","blue","10","[17,21,18,24,25,28,29,32,33,35]","26","three giraffes in a field","22","blue","",""
"html-keyboard-response","75","453992","0.0-75.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","76","455494","0.0-76.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1200% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:20px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":1,""type"":""experimental"",""array_length"":10,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","77","461659","0.0-77.0","60dfd857e293a99dd577f4c8","6162","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":2,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6162","6162","true","blue13.jpg","12","avg","500","blue","2","[12,20]","16","three giraffes in a field","23","blue","",""
"html-keyboard-response","78","462260","0.0-78.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","79","463763","0.0-79.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1100% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:35px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:25px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:39px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:41px'></div> <div class='blue' style='background-position:800% 0%;margin-top:26px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:27px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:48px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:29px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:33px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:49px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:36px'></div></span>","null","stimulus","{""index"":2,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","80","469512","0.0-80.0","60dfd857e293a99dd577f4c8","5746","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":3,""type"":""experimental"",""array_length"":20,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5746","5746","true","blue10.jpg","9","avg","600","blue","20","[8,10,11,11,11,11,11,15,16,17,17,17,18,18,19,19,23,24,27,27]","18","three giraffes in a field","24","blue","",""
"html-keyboard-response","81","469913","0.0-81.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","82","471415","0.0-82.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":3,""type"":""experimental"",""array_length"":20,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","83","477483","0.0-83.0","60dfd857e293a99dd577f4c8","6064","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":4,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6064","6064","true","blue18.jpg","17","avg","400","blue","2","[20,28]","24","three giraffes in a field","25","blue","",""
"html-keyboard-response","84","477885","0.0-84.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","85","479387","0.0-85.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2200% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:41px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:33px'></div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:39px'></div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:46px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:21px'></div></span>","null","stimulus","{""index"":4,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","86","487904","0.0-86.0","60dfd857e293a99dd577f4c8","8514","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":5,""type"":""experimental"",""array_length"":10,""meanVal"":27,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","8514","8514","true","blue27.jpg","26","avg","400","blue","10","[18,22,19,25,26,29,30,33,34,36]","27","three giraffes in a field","26","blue","",""
"html-keyboard-response","87","488505","0.0-87.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","88","490008","0.0-88.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:40px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":5,""type"":""experimental"",""array_length"":10,""meanVal"":27,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","89","498358","0.0-89.0","60dfd857e293a99dd577f4c8","8346","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":6,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","8346","8346","true","blue18.jpg","17","avg","600","blue","2","[20,28]","24","three giraffes in a field","27","blue","",""
"html-keyboard-response","90","498760","0.0-90.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","91","500263","0.0-91.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2700% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:34px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:37px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:48px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:42px'></div> <div class='blue' style='background-position:4300% 0%;margin-top:22px'></div> <div class='blue' style='background-position:4300% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:41px'></div></span>","null","stimulus","{""index"":6,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","92","510805","0.0-92.0","60dfd857e293a99dd577f4c8","10539","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":7,""type"":""experimental"",""array_length"":20,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","10539","10539","true","blue25.jpg","24","avg","400","blue","20","[24,26,27,27,27,27,27,31,32,33,33,33,34,34,35,35,39,40,43,43]","34","three giraffes in a field","28","blue","",""
"html-keyboard-response","93","511206","0.0-93.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","94","512709","0.0-94.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:800% 0%;margin-top:34px'></div> <div class='blue' style='background-position:900% 0%;margin-top:43px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:45px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:22px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:25px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:33px'></div> <div class='blue' style='background-position:900% 0%;margin-top:38px'></div> <div class='blue' style='background-position:600% 0%;margin-top:27px'></div> <div class='blue' style='background-position:900% 0%;margin-top:20px'></div> <div class='blue' style='background-position:900% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:25px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:28px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:39px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:37px'></div></span>","null","stimulus","{""index"":7,""type"":""experimental"",""array_length"":20,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","95","522679","0.0-95.0","60dfd857e293a99dd577f4c8","9966","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":8,""type"":""experimental"",""array_length"":20,""meanVal"":16,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","9966","9966","true","blue18.jpg","17","avg","400","blue","20","[6,8,9,9,9,9,9,13,14,15,15,15,16,16,17,17,21,22,25,25]","16","three giraffes in a field","29","blue","",""
"html-keyboard-response","96","523280","0.0-96.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","97","524783","0.0-97.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:24px'></div> <div class='blue' style='background-position:900% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:45px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:38px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:45px'></div> <div> </div></span>","null","stimulus","{""index"":8,""type"":""experimental"",""array_length"":20,""meanVal"":16,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","98","534747","0.0-98.0","60dfd857e293a99dd577f4c8","9958","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":9,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","9958","9958","true","blue16.jpg","15","avg","600","blue","10","[9,13,10,16,17,20,21,24,25,27]","18","three giraffes in a field","30","blue","",""
"html-keyboard-response","99","535348","0.0-99.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","100","536851","0.0-100.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":9,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","101","547018","0.0-101.0","60dfd857e293a99dd577f4c8","10163","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":10,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","10163","10163","true","blue25.jpg","24","avg","600","blue","2","[32,40]","36","three giraffes in a field","31","blue","",""
"html-keyboard-response","102","547520","0.0-102.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","103","549022","0.0-103.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2200% 0%;margin-top:36px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:36px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:36px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:24px'></div> <div> </div> <div class='blue' style='background-position:1100% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":10,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","104","558186","0.0-104.0","60dfd857e293a99dd577f4c8","9162","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":11,""type"":""experimental"",""array_length"":10,""meanVal"":20,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","9162","9162","true","blue22.jpg","21","avg","500","blue","10","[11,15,12,18,19,22,23,26,27,29]","20","three giraffes in a field","32","blue","",""
"html-keyboard-response","105","558788","0.0-105.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","106","560291","0.0-106.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:47px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:21px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:38px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:43px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:49px'></div></span>","null","stimulus","{""index"":11,""type"":""experimental"",""array_length"":10,""meanVal"":20,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","107","567446","0.0-107.0","60dfd857e293a99dd577f4c8","7151","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":12,""type"":""experimental"",""array_length"":10,""meanVal"":29,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7151","7151","true","blue20.jpg","19","avg","600","blue","10","[20,24,21,27,28,31,32,35,36,38]","29","three giraffes in a field","33","blue","",""
"html-keyboard-response","108","567948","0.0-108.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","109","569451","0.0-109.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:700% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:43px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:32px'></div> <div class='blue' style='background-position:700% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:33px'></div> <div class='blue' style='background-position:400% 0%;margin-top:44px'></div> <div class='blue' style='background-position:700% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:40px'></div> <div> </div> <div class='blue' style='background-position:1100% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:32px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:42px'></div> <div class='blue' style='background-position:700% 0%;margin-top:34px'></div> <div class='blue' style='background-position:700% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:28px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:38px'></div> <div> </div> <div class='blue' style='background-position:600% 0%;margin-top:36px'></div></span>","null","stimulus","{""index"":12,""type"":""experimental"",""array_length"":10,""meanVal"":29,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","110","583823","0.0-110.0","60dfd857e293a99dd577f4c8","14368","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":13,""type"":""experimental"",""array_length"":20,""meanVal"":14,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","14368","14368","true","blue15.jpg","14","avg","500","blue","20","[4,6,7,7,7,7,7,11,12,13,13,13,14,14,15,15,19,20,23,23]","14","three giraffes in a field","34","blue","",""
"html-keyboard-response","111","584225","0.0-111.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","112","585727","0.0-112.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:28px'></div></span>","null","stimulus","{""index"":13,""type"":""experimental"",""array_length"":20,""meanVal"":14,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","113","589940","0.0-113.0","60dfd857e293a99dd577f4c8","4211","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":14,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4211","4211","true","blue23.jpg","22","avg","400","blue","2","[32,40]","36","three giraffes in a field","35","blue","",""
"html-keyboard-response","114","590442","0.0-114.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","115","591944","0.0-115.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:3700% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":14,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","116","597126","0.0-116.0","60dfd857e293a99dd577f4c8","5177","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":15,""type"":""experimental"",""array_length"":2,""meanVal"":33,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5177","5177","true","blue30.jpg","29","avg","500","blue","2","[29,37]","33","three giraffes in a field","36","blue","",""
"html-keyboard-response","117","597528","0.0-117.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","118","599030","0.0-118.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2300% 0%;margin-top:29px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:36px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:27px'></div> <div> </div></span>","null","stimulus","{""index"":15,""type"":""experimental"",""array_length"":2,""meanVal"":33,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","119","603529","0.0-119.0","60dfd857e293a99dd577f4c8","4496","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":16,""type"":""experimental"",""array_length"":10,""meanVal"":20,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4496","4496","true","blue18.jpg","17","avg","400","blue","10","[11,15,12,18,19,22,23,26,27,29]","20","three giraffes in a field","37","blue","",""
"html-keyboard-response","120","604131","0.0-120.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","121","605632","0.0-121.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:48px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:36px'></div></span>","null","stimulus","{""index"":16,""type"":""experimental"",""array_length"":10,""meanVal"":20,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","122","615510","0.0-122.0","60dfd857e293a99dd577f4c8","9876","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":17,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","9876","9876","true","blue21.jpg","20","avg","600","blue","10","[12,16,13,19,20,23,24,27,28,30]","21","three giraffes in a field","38","blue","",""
"html-keyboard-response","123","615912","0.0-123.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","124","617415","0.0-124.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2400% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:38px'></div> <div> </div> <div class='blue' style='background-position:1200% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:30px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:24px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:38px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:46px'></div></span>","null","stimulus","{""index"":17,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","125","622834","0.0-125.0","60dfd857e293a99dd577f4c8","5415","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":18,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5415","5415","true","blue25.jpg","24","avg","400","blue","10","[12,16,13,19,20,23,24,27,28,30]","21","three giraffes in a field","39","blue","",""
"html-keyboard-response","126","623235","0.0-126.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","127","624738","0.0-127.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1200% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":18,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","128","629239","0.0-128.0","60dfd857e293a99dd577f4c8","4499","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":19,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4499","4499","true","blue13.jpg","12","avg","400","blue","2","[12,20]","16","three giraffes in a field","40","blue","",""
"html-keyboard-response","129","629740","0.0-129.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","130","631242","0.0-130.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:30px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":19,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","131","637103","0.0-131.0","60dfd857e293a99dd577f4c8","5859","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":20,""type"":""experimental"",""array_length"":2,""meanVal"":23,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5859","5859","true","blue23.jpg","22","avg","500","blue","2","[19,27]","23","three giraffes in a field","41","blue","",""
"html-keyboard-response","132","637604","0.0-132.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","133","639107","0.0-133.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:28px'></div> <div> </div></span>","null","stimulus","{""index"":20,""type"":""experimental"",""array_length"":2,""meanVal"":23,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","134","645601","0.0-134.0","60dfd857e293a99dd577f4c8","6492","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":21,""type"":""experimental"",""array_length"":2,""meanVal"":21,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6492","6492","true","blue16.jpg","15","avg","500","blue","2","[17,25]","21","three giraffes in a field","42","blue","",""
"html-keyboard-response","135","646003","0.0-135.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","136","647505","0.0-136.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2900% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:1100% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:24px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:36px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:21px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:44px'></div> <div> </div></span>","null","stimulus","{""index"":21,""type"":""experimental"",""array_length"":2,""meanVal"":21,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","137","653804","0.0-137.0","60dfd857e293a99dd577f4c8","6294","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":22,""type"":""experimental"",""array_length"":10,""meanVal"":20,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6294","6294","true","blue21.jpg","20","avg","400","blue","10","[11,15,12,18,19,22,23,26,27,29]","20","three giraffes in a field","43","blue","",""
"html-keyboard-response","138","654406","0.0-138.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","139","655908","0.0-139.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":22,""type"":""experimental"",""array_length"":10,""meanVal"":20,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","140","668944","0.0-140.0","60dfd857e293a99dd577f4c8","13034","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":23,""type"":""experimental"",""array_length"":2,""meanVal"":28,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","13034","13034","true","blue22.jpg","21","avg","600","blue","2","[24,32]","28","three giraffes in a field","44","blue","",""
"html-keyboard-response","141","669446","0.0-141.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","142","670947","0.0-142.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2900% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":23,""type"":""experimental"",""array_length"":2,""meanVal"":28,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","143","680969","0.0-143.0","60dfd857e293a99dd577f4c8","10016","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":24,""type"":""experimental"",""array_length"":2,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","10016","10016","true","blue17.jpg","16","avg","500","blue","2","[21,29]","25","three giraffes in a field","45","blue","",""
"html-keyboard-response","144","681370","0.0-144.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","145","682873","0.0-145.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:3200% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":24,""type"":""experimental"",""array_length"":2,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","146","693571","0.0-146.0","60dfd857e293a99dd577f4c8","10696","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":25,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","10696","10696","true","blue23.jpg","22","avg","400","blue","2","[32,40]","36","three giraffes in a field","46","blue","",""
"html-keyboard-response","147","693972","0.0-147.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","148","695474","0.0-148.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:1600% 0%;margin-top:27px'></div> <div class='blue' style='background-position:700% 0%;margin-top:40px'></div> <div class='blue' style='background-position:900% 0%;margin-top:48px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:24px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:42px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:48px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:36px'></div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:29px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:40px'></div></span>","null","stimulus","{""index"":25,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","149","701778","0.0-149.0","60dfd857e293a99dd577f4c8","6300","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":26,""type"":""experimental"",""array_length"":20,""meanVal"":17,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6300","6300","true","blue20.jpg","19","avg","400","blue","20","[7,9,10,10,10,10,10,14,15,16,16,16,17,17,18,18,22,23,26,26]","17","three giraffes in a field","47","blue","",""
"html-keyboard-response","150","702379","0.0-150.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","151","703882","0.0-151.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":26,""type"":""experimental"",""array_length"":20,""meanVal"":17,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","152","710397","0.0-152.0","60dfd857e293a99dd577f4c8","6512","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":27,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6512","6512","true","blue16.jpg","15","avg","600","blue","2","[23,31]","27","three giraffes in a field","48","blue","",""
"html-keyboard-response","153","710799","0.0-153.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","154","712302","0.0-154.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:34px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:43px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:38px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:43px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:50px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:48px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:27px'></div></span>","null","stimulus","{""index"":27,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","155","721480","0.0-155.0","60dfd857e293a99dd577f4c8","9172","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":28,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","9172","9172","true","blue30.jpg","29","avg","400","blue","20","[22,24,25,25,25,25,25,29,30,31,31,31,32,32,33,33,37,38,41,41]","32","three giraffes in a field","49","blue","",""
"html-keyboard-response","156","722081","0.0-156.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","157","723582","0.0-157.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2200% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:43px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1100% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:1200% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:32px'></div> <div> </div></span>","null","stimulus","{""index"":28,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","158","732766","0.0-158.0","60dfd857e293a99dd577f4c8","9180","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":29,""type"":""experimental"",""array_length"":10,""meanVal"":20,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","9180","9180","true","blue22.jpg","21","avg","600","blue","10","[11,15,12,18,19,22,23,26,27,29]","20","three giraffes in a field","50","blue","",""
"html-keyboard-response","159","733367","0.0-159.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","160","734869","0.0-160.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":29,""type"":""experimental"",""array_length"":10,""meanVal"":20,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","161","740021","0.0-161.0","60dfd857e293a99dd577f4c8","5147","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":30,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5147","5147","true","blue22.jpg","21","avg","600","blue","2","[22,30]","26","three giraffes in a field","51","blue","",""
"html-keyboard-response","162","740623","0.0-162.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","163","742126","0.0-163.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2400% 0%;margin-top:43px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:38px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:41px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:49px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:49px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:33px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:28px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:41px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:43px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":30,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","164","753483","0.0-164.0","60dfd857e293a99dd577f4c8","11353","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":31,""type"":""experimental"",""array_length"":20,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","11353","11353","true","blue22.jpg","21","avg","600","blue","20","[16,18,19,19,19,19,19,23,24,25,25,25,26,26,27,27,31,32,35,35]","26","three giraffes in a field","52","blue","",""
"html-keyboard-response","165","754085","0.0-165.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","166","755587","0.0-166.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:50px'></div> <div> </div> <div class='blue' style='background-position:500% 0%;margin-top:48px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:48px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:33px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:46px'></div> <div class='blue' style='background-position:600% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:31px'></div></span>","null","stimulus","{""index"":31,""type"":""experimental"",""array_length"":20,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","167","766874","0.0-167.0","60dfd857e293a99dd577f4c8","11282","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":32,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","11282","11282","true","blue18.jpg","17","avg","600","blue","10","[5,9,6,12,13,16,17,20,21,23]","14","three giraffes in a field","53","blue","",""
"html-keyboard-response","168","767475","0.0-168.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","169","768978","0.0-169.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:30px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:24px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:33px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:27px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":32,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","170","779991","0.0-170.0","60dfd857e293a99dd577f4c8","11008","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":33,""type"":""experimental"",""array_length"":10,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","11008","11008","true","blue22.jpg","21","avg","600","blue","10","[13,17,14,20,21,24,25,28,29,31]","22","three giraffes in a field","54","blue","",""
"html-keyboard-response","171","780392","0.0-171.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","172","781894","0.0-172.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:1800% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:27px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:45px'></div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:33px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:36px'></div> <div class='blue' style='background-position:900% 0%;margin-top:39px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:35px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:700% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:35px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:32px'></div></span>","null","stimulus","{""index"":33,""type"":""experimental"",""array_length"":10,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","173","793273","0.0-173.0","60dfd857e293a99dd577f4c8","11375","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":34,""type"":""experimental"",""array_length"":20,""meanVal"":17,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","11375","11375","true","blue16.jpg","15","avg","400","blue","20","[7,9,10,10,10,10,10,14,15,16,16,16,17,17,18,18,22,23,26,26]","17","three giraffes in a field","55","blue","",""
"html-keyboard-response","174","793874","0.0-174.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","175","795376","0.0-175.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1200% 0%;margin-top:27px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":34,""type"":""experimental"",""array_length"":20,""meanVal"":17,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","176","806842","0.0-176.0","60dfd857e293a99dd577f4c8","11464","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":35,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","11464","11464","true","blue15.jpg","14","avg","600","blue","2","[12,20]","16","three giraffes in a field","56","blue","",""
"html-keyboard-response","177","807344","0.0-177.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","178","808847","0.0-178.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:1400% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:26px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:700% 0%;margin-top:49px'></div> <div class='blue' style='background-position:600% 0%;margin-top:45px'></div> <div> </div></span>","null","stimulus","{""index"":35,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","179","819636","0.0-179.0","60dfd857e293a99dd577f4c8","10787","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":36,""type"":""experimental"",""array_length"":10,""meanVal"":15,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","10787","10787","true","blue20.jpg","19","avg","500","blue","10","[6,10,7,13,14,17,18,21,22,24]","15","three giraffes in a field","57","blue","",""
"html-keyboard-response","180","820137","0.0-180.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","181","821639","0.0-181.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2800% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:24px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:32px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:24px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:46px'></div></span>","null","stimulus","{""index"":36,""type"":""experimental"",""array_length"":10,""meanVal"":15,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","182","827634","0.0-182.0","60dfd857e293a99dd577f4c8","5989","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":37,""type"":""experimental"",""array_length"":10,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5989","5989","true","blue19.jpg","18","avg","500","blue","10","[13,17,14,20,21,24,25,28,29,31]","22","three giraffes in a field","58","blue","",""
"html-keyboard-response","183","828235","0.0-183.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","184","829738","0.0-184.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:3000% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:30px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:49px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:24px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:37px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:29px'></div></span>","null","stimulus","{""index"":37,""type"":""experimental"",""array_length"":10,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","185","835368","0.0-185.0","60dfd857e293a99dd577f4c8","5625","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":38,""type"":""experimental"",""array_length"":20,""meanVal"":31,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5625","5625","true","blue22.jpg","21","avg","600","blue","20","[21,23,24,24,24,24,24,28,29,30,30,30,31,31,32,32,36,37,40,40]","31","three giraffes in a field","59","blue","",""
"html-keyboard-response","186","835969","0.0-186.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","187","837470","0.0-187.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:3200% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:28px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:37px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:36px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:21px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:24px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:35px'></div></span>","null","stimulus","{""index"":38,""type"":""experimental"",""array_length"":20,""meanVal"":31,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","188","848478","0.0-188.0","60dfd857e293a99dd577f4c8","11006","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":39,""type"":""experimental"",""array_length"":20,""meanVal"":23,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","11006","11006","true","blue25.jpg","24","avg","600","blue","20","[13,15,16,16,16,16,16,20,21,22,22,22,23,23,24,24,28,29,32,32]","23","three giraffes in a field","60","blue","",""
"html-keyboard-response","189","848980","0.0-189.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","190","850481","0.0-190.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:25px'></div> <div> </div></span>","null","stimulus","{""index"":39,""type"":""experimental"",""array_length"":20,""meanVal"":23,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","191","861037","0.0-191.0","60dfd857e293a99dd577f4c8","10554","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":40,""type"":""experimental"",""array_length"":2,""meanVal"":21,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","10554","10554","true","blue16.jpg","15","avg","500","blue","2","[17,25]","21","three giraffes in a field","61","blue","",""
"html-keyboard-response","192","861439","0.0-192.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","193","862941","0.0-193.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:20px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:35px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:26px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:30px'></div></span>","null","stimulus","{""index"":40,""type"":""experimental"",""array_length"":2,""meanVal"":21,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","194","874334","0.0-194.0","60dfd857e293a99dd577f4c8","11388","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":41,""type"":""experimental"",""array_length"":10,""meanVal"":20,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","11388","11388","true","blue20.jpg","19","avg","400","blue","10","[11,15,12,18,19,22,23,26,27,29]","20","three giraffes in a field","62","blue","",""
"html-keyboard-response","195","874735","0.0-195.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","196","876237","0.0-196.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:1400% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:400% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:36px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:41px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:25px'></div> <div class='blue' style='background-position:700% 0%;margin-top:36px'></div> <div class='blue' style='background-position:700% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:45px'></div> <div class='blue' style='background-position:700% 0%;margin-top:27px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:23px'></div> <div class='blue' style='background-position:600% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:44px'></div> <div class='blue' style='background-position:700% 0%;margin-top:44px'></div> <div class='blue' style='background-position:700% 0%;margin-top:46px'></div> <div> </div></span>","null","stimulus","{""index"":41,""type"":""experimental"",""array_length"":10,""meanVal"":20,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","197","883298","0.0-197.0","60dfd857e293a99dd577f4c8","7055","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":42,""type"":""experimental"",""array_length"":20,""meanVal"":14,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7055","7055","true","blue14.jpg","13","avg","400","blue","20","[4,6,7,7,7,7,7,11,12,13,13,13,14,14,15,15,19,20,23,23]","14","three giraffes in a field","63","blue","",""
"html-keyboard-response","198","883899","0.0-198.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","199","885402","0.0-199.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:2700% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:4100% 0%;margin-top:49px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:47px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:4200% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:22px'></div> <div class='blue' style='background-position:4400% 0%;margin-top:47px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:39px'></div></span>","null","stimulus","{""index"":42,""type"":""experimental"",""array_length"":20,""meanVal"":14,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","200","891945","0.0-200.0","60dfd857e293a99dd577f4c8","6540","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":43,""type"":""experimental"",""array_length"":10,""meanVal"":35,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6540","6540","true","blue25.jpg","24","avg","600","blue","10","[26,30,27,33,34,37,38,41,42,44]","35","three giraffes in a field","64","blue","",""
"html-keyboard-response","201","892546","0.0-201.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","202","894049","0.0-202.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:1800% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:49px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:25px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:47px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:43px'></div></span>","null","stimulus","{""index"":43,""type"":""experimental"",""array_length"":10,""meanVal"":35,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","203","900383","0.0-203.0","60dfd857e293a99dd577f4c8","6328","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":44,""type"":""experimental"",""array_length"":20,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6328","6328","true","blue22.jpg","21","avg","600","blue","20","[15,17,18,18,18,18,18,22,23,24,24,24,25,25,26,26,30,31,34,34]","25","three giraffes in a field","65","blue","",""
"html-keyboard-response","204","900984","0.0-204.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","205","902485","0.0-205.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:4100% 0%;margin-top:34px'></div> <div class='blue' style='background-position:4400% 0%;margin-top:41px'></div> <div class='blue' style='background-position:4400% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:44px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:22px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:28px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:42px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:46px'></div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:21px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:47px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:47px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:22px'></div></span>","null","stimulus","{""index"":44,""type"":""experimental"",""array_length"":20,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","206","909232","0.0-206.0","60dfd857e293a99dd577f4c8","6745","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":45,""type"":""experimental"",""array_length"":20,""meanVal"":35,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6745","6745","true","blue25.jpg","24","avg","600","blue","20","[25,27,28,28,28,28,28,32,33,34,34,34,35,35,36,36,40,41,44,44]","35","three giraffes in a field","66","blue","",""
"html-keyboard-response","207","909634","0.0-207.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","208","911137","0.0-208.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='blue' style='background-position:3300% 0%;margin-top:22px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:46px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:21px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:42px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:39px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:33px'></div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:44px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:50px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:24px'></div> <div> </div></span>","null","stimulus","{""index"":45,""type"":""experimental"",""array_length"":20,""meanVal"":35,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","209","916987","0.0-209.0","60dfd857e293a99dd577f4c8","5848","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":46,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5848","5848","true","blue25.jpg","24","avg","400","blue","20","[22,24,25,25,25,25,25,29,30,31,31,31,32,32,33,33,37,38,41,41]","32","three giraffes in a field","67","blue","",""
"html-keyboard-response","210","917389","0.0-210.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","211","918891","0.0-211.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:41px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:36px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:33px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:33px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:35px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":46,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","212","926785","0.0-212.0","60dfd857e293a99dd577f4c8","7892","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":47,""type"":""experimental"",""array_length"":20,""meanVal"":21,""color"":""blue""}","image-slider-response_noButton","<p>what was the average blueness of the array?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7892","7892","true","blue18.jpg","17","avg","400","blue","20","[11,13,14,14,14,14,14,18,19,20,20,20,21,21,22,22,26,27,30,30]","21","three giraffes in a field","68","blue","",""
"survey-text","213","938120","0.0-213.0-0.0","60dfd857e293a99dd577f4c8","11331","","","{""Q0"":""sky""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","214","938522","0.0-214.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","215","940026","0.0-215.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":47,""type"":""experimental"",""array_length"":20,""meanVal"":21,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","216","953963","0.0-216.0","60dfd857e293a99dd577f4c8","13933","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":48,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","13933","13933","true","red24.jpg","23","avg","400","red","2","[28,36]","32","three giraffes in a field","69","red","",""
"html-keyboard-response","217","954565","0.0-217.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","218","956066","0.0-218.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3000% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":48,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","219","964942","0.0-219.0","60dfd857e293a99dd577f4c8","8874","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":49,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8874","8874","true","red25.jpg","24","avg","600","red","2","[22,30]","26","three giraffes in a field","70","red","",""
"html-keyboard-response","220","965543","0.0-220.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","221","967045","0.0-221.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2500% 0%;margin-top:36px'></div> <div class='red' style='background-position:1200% 0%;margin-top:49px'></div> <div class='red' style='background-position:2800% 0%;margin-top:33px'></div> <div class='red' style='background-position:1100% 0%;margin-top:28px'></div> <div class='red' style='background-position:1800% 0%;margin-top:49px'></div> <div class='red' style='background-position:2000% 0%;margin-top:36px'></div> <div class='red' style='background-position:1700% 0%;margin-top:37px'></div> <div class='red' style='background-position:2800% 0%;margin-top:47px'></div> <div class='red' style='background-position:1200% 0%;margin-top:35px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:24px'></div> <div class='red' style='background-position:2000% 0%;margin-top:35px'></div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:41px'></div> <div class='red' style='background-position:1200% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:24px'></div> <div class='red' style='background-position:900% 0%;margin-top:29px'></div> <div class='red' style='background-position:1900% 0%;margin-top:20px'></div> <div class='red' style='background-position:1200% 0%;margin-top:48px'></div> <div class='red' style='background-position:1200% 0%;margin-top:38px'></div> <div class='red' style='background-position:1800% 0%;margin-top:22px'></div> <div class='red' style='background-position:1600% 0%;margin-top:26px'></div></span>","null","stimulus","{""index"":49,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","222","974963","0.0-222.0","60dfd857e293a99dd577f4c8","7915","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":50,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7915","7915","true","red19.jpg","18","avg","600","red","20","[9,11,12,12,12,12,12,16,17,18,18,18,19,19,20,20,24,25,28,28]","19","three giraffes in a field","71","red","",""
"html-keyboard-response","223","975464","0.0-223.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","224","976965","0.0-224.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:43px'></div> <div class='red' style='background-position:1400% 0%;margin-top:45px'></div> <div class='red' style='background-position:2800% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:49px'></div> <div class='red' style='background-position:1300% 0%;margin-top:37px'></div> <div class='red' style='background-position:3100% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:50px'></div></span>","null","stimulus","{""index"":50,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","225","990466","0.0-225.0","60dfd857e293a99dd577f4c8","13498","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":51,""type"":""experimental"",""array_length"":10,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","13498","13498","true","red14.jpg","13","avg","500","red","10","[13,17,14,20,21,24,25,28,29,31]","22","three giraffes in a field","72","red","",""
"html-keyboard-response","226","991067","0.0-226.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","227","992571","0.0-227.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2800% 0%;margin-top:32px'></div> <div class='red' style='background-position:3400% 0%;margin-top:31px'></div> <div class='red' style='background-position:4400% 0%;margin-top:27px'></div> <div class='red' style='background-position:4000% 0%;margin-top:27px'></div> <div class='red' style='background-position:2800% 0%;margin-top:50px'></div> <div class='red' style='background-position:2700% 0%;margin-top:45px'></div> <div class='red' style='background-position:4100% 0%;margin-top:23px'></div> <div class='red' style='background-position:3500% 0%;margin-top:24px'></div> <div class='red' style='background-position:3600% 0%;margin-top:41px'></div> <div class='red' style='background-position:2800% 0%;margin-top:47px'></div> <div class='red' style='background-position:4400% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:43px'></div> <div class='red' style='background-position:3300% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:40px'></div> <div class='red' style='background-position:2500% 0%;margin-top:49px'></div> <div class='red' style='background-position:3400% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:44px'></div> <div class='red' style='background-position:3600% 0%;margin-top:31px'></div> <div class='red' style='background-position:3200% 0%;margin-top:25px'></div> <div class='red' style='background-position:3500% 0%;margin-top:37px'></div></span>","null","stimulus","{""index"":51,""type"":""experimental"",""array_length"":10,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","228","998308","0.0-228.0","60dfd857e293a99dd577f4c8","5736","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":52,""type"":""experimental"",""array_length"":20,""meanVal"":35,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5736","5736","true","red28.jpg","27","avg","600","red","20","[25,27,28,28,28,28,28,32,33,34,34,34,35,35,36,36,40,41,44,44]","35","three giraffes in a field","73","red","",""
"html-keyboard-response","229","998809","0.0-229.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","230","1000311","0.0-230.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3300% 0%;margin-top:22px'></div> <div class='red' style='background-position:2100% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:23px'></div> <div class='red' style='background-position:3600% 0%;margin-top:38px'></div> <div class='red' style='background-position:2500% 0%;margin-top:40px'></div> <div class='red' style='background-position:2200% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:38px'></div> <div class='red' style='background-position:3700% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:28px'></div></span>","null","stimulus","{""index"":52,""type"":""experimental"",""array_length"":20,""meanVal"":35,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","231","1008912","0.0-231.0","60dfd857e293a99dd577f4c8","8599","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":53,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8599","8599","true","red26.jpg","25","avg","500","red","10","[21,25,22,28,29,32,33,36,37,39]","30","three giraffes in a field","74","red","",""
"html-keyboard-response","232","1009413","0.0-232.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","233","1010916","0.0-233.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:1600% 0%;margin-top:29px'></div> <div class='red' style='background-position:1200% 0%;margin-top:38px'></div> <div class='red' style='background-position:1800% 0%;margin-top:50px'></div> <div class='red' style='background-position:2400% 0%;margin-top:37px'></div> <div class='red' style='background-position:2000% 0%;margin-top:22px'></div> <div class='red' style='background-position:1200% 0%;margin-top:35px'></div> <div class='red' style='background-position:1200% 0%;margin-top:39px'></div> <div class='red' style='background-position:1800% 0%;margin-top:23px'></div> <div class='red' style='background-position:1200% 0%;margin-top:35px'></div> <div class='red' style='background-position:1900% 0%;margin-top:37px'></div> <div class='red' style='background-position:900% 0%;margin-top:48px'></div> <div class='red' style='background-position:1200% 0%;margin-top:39px'></div> <div class='red' style='background-position:2800% 0%;margin-top:47px'></div> <div class='red' style='background-position:2500% 0%;margin-top:50px'></div> <div class='red' style='background-position:1100% 0%;margin-top:23px'></div> <div class='red' style='background-position:1900% 0%;margin-top:35px'></div> <div class='red' style='background-position:1800% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:49px'></div></span>","null","stimulus","{""index"":53,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","234","1018306","0.0-234.0","60dfd857e293a99dd577f4c8","7388","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":54,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7388","7388","true","red16.jpg","15","avg","500","red","20","[9,11,12,12,12,12,12,16,17,18,18,18,19,19,20,20,24,25,28,28]","19","three giraffes in a field","75","red","",""
"html-keyboard-response","235","1018708","0.0-235.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","236","1020210","0.0-236.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":54,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","237","1035764","0.0-237.0","60dfd857e293a99dd577f4c8","15550","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":55,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","15550","15550","true","red26.jpg","25","avg","400","red","2","[30,38]","34","three giraffes in a field","76","red","",""
"html-keyboard-response","238","1036166","0.0-238.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","239","1037669","0.0-239.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2000% 0%;margin-top:41px'></div> <div class='red' style='background-position:1700% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:30px'></div> <div class='red' style='background-position:2300% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:31px'></div> <div class='red' style='background-position:1600% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:900% 0%;margin-top:30px'></div> <div class='red' style='background-position:1200% 0%;margin-top:41px'></div> <div class='red' style='background-position:500% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:47px'></div></span>","null","stimulus","{""index"":55,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","240","1047909","0.0-240.0","60dfd857e293a99dd577f4c8","10235","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":56,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","10235","10235","true","red17.jpg","16","avg","400","red","10","[5,9,6,12,13,16,17,20,21,23]","14","three giraffes in a field","77","red","",""
"html-keyboard-response","241","1048410","0.0-241.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","242","1049913","0.0-242.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2700% 0%;margin-top:33px'></div> <div class='red' style='background-position:1300% 0%;margin-top:42px'></div> <div class='red' style='background-position:3000% 0%;margin-top:48px'></div> <div class='red' style='background-position:1200% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:50px'></div> <div class='red' style='background-position:2400% 0%;margin-top:44px'></div> <div class='red' style='background-position:2300% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:44px'></div> <div class='red' style='background-position:2000% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:25px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":56,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","243","1058906","0.0-243.0","60dfd857e293a99dd577f4c8","8987","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":57,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8987","8987","true","red22.jpg","21","avg","500","red","10","[12,16,13,19,20,23,24,27,28,30]","21","three giraffes in a field","78","red","",""
"html-keyboard-response","244","1059508","0.0-244.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","245","1061009","0.0-245.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:800% 0%;margin-top:20px'></div> <div class='red' style='background-position:800% 0%;margin-top:36px'></div> <div class='red' style='background-position:800% 0%;margin-top:42px'></div> <div class='red' style='background-position:2100% 0%;margin-top:21px'></div> <div class='red' style='background-position:1400% 0%;margin-top:27px'></div> <div class='red' style='background-position:800% 0%;margin-top:24px'></div> <div class='red' style='background-position:1300% 0%;margin-top:45px'></div> <div class='red' style='background-position:1400% 0%;margin-top:30px'></div> <div class='red' style='background-position:1400% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:46px'></div> <div class='red' style='background-position:1600% 0%;margin-top:32px'></div> <div class='red' style='background-position:2000% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:41px'></div> <div class='red' style='background-position:500% 0%;margin-top:24px'></div> <div class='red' style='background-position:1200% 0%;margin-top:24px'></div> <div class='red' style='background-position:2400% 0%;margin-top:28px'></div> <div class='red' style='background-position:1600% 0%;margin-top:30px'></div> <div class='red' style='background-position:800% 0%;margin-top:40px'></div> <div class='red' style='background-position:1500% 0%;margin-top:34px'></div> <div class='red' style='background-position:700% 0%;margin-top:30px'></div> <div> </div></span>","null","stimulus","{""index"":57,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","246","1067350","0.0-246.0","60dfd857e293a99dd577f4c8","6339","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":58,""type"":""experimental"",""array_length"":20,""meanVal"":15,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6339","6339","true","red11.jpg","10","avg","600","red","20","[5,7,8,8,8,8,8,12,13,14,14,14,15,15,16,16,20,21,24,24]","15","three giraffes in a field","79","red","",""
"html-keyboard-response","247","1067952","0.0-247.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","248","1069454","0.0-248.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:1100% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:39px'></div> <div class='red' style='background-position:1700% 0%;margin-top:21px'></div> <div class='red' style='background-position:2100% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:42px'></div> <div class='red' style='background-position:2800% 0%;margin-top:35px'></div> <div class='red' style='background-position:2600% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:40px'></div></span>","null","stimulus","{""index"":58,""type"":""experimental"",""array_length"":20,""meanVal"":15,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","249","1085944","0.0-249.0","60dfd857e293a99dd577f4c8","16485","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":59,""type"":""experimental"",""array_length"":10,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","16485","16485","true","red18.jpg","17","avg","600","red","10","[10,14,11,17,18,21,22,25,26,28]","19","three giraffes in a field","80","red","",""
"html-keyboard-response","250","1086446","0.0-250.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","251","1087949","0.0-251.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:3100% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":59,""type"":""experimental"",""array_length"":10,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","252","1096134","0.0-252.0","60dfd857e293a99dd577f4c8","8182","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":60,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8182","8182","true","red27.jpg","26","avg","500","red","2","[31,39]","35","three giraffes in a field","81","red","",""
"html-keyboard-response","253","1096536","0.0-253.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","254","1098038","0.0-254.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:31px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":60,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","255","1103289","0.0-255.0","60dfd857e293a99dd577f4c8","5249","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":61,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5249","5249","true","red24.jpg","23","avg","400","red","2","[23,31]","27","three giraffes in a field","82","red","",""
"html-keyboard-response","256","1103691","0.0-256.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","257","1105192","0.0-257.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":61,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","258","1112813","0.0-258.0","60dfd857e293a99dd577f4c8","7616","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":62,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7616","7616","true","red24.jpg","23","avg","400","red","2","[28,36]","32","three giraffes in a field","83","red","",""
"html-keyboard-response","259","1113314","0.0-259.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","260","1114818","0.0-260.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2800% 0%;margin-top:47px'></div> <div class='red' style='background-position:4400% 0%;margin-top:29px'></div> <div class='red' style='background-position:3500% 0%;margin-top:23px'></div> <div class='red' style='background-position:3500% 0%;margin-top:28px'></div> <div class='red' style='background-position:4100% 0%;margin-top:41px'></div> <div class='red' style='background-position:2800% 0%;margin-top:43px'></div> <div class='red' style='background-position:2500% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:24px'></div> <div class='red' style='background-position:4000% 0%;margin-top:26px'></div> <div class='red' style='background-position:3600% 0%;margin-top:33px'></div> <div class='red' style='background-position:2800% 0%;margin-top:30px'></div> <div class='red' style='background-position:3400% 0%;margin-top:24px'></div> <div class='red' style='background-position:3400% 0%;margin-top:29px'></div> <div class='red' style='background-position:2800% 0%;margin-top:43px'></div> <div class='red' style='background-position:3200% 0%;margin-top:32px'></div> <div class='red' style='background-position:3400% 0%;margin-top:24px'></div> <div class='red' style='background-position:3600% 0%;margin-top:29px'></div> <div class='red' style='background-position:4400% 0%;margin-top:42px'></div> <div class='red' style='background-position:2800% 0%;margin-top:23px'></div> <div class='red' style='background-position:2700% 0%;margin-top:25px'></div></span>","null","stimulus","{""index"":62,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","261","1122325","0.0-261.0","60dfd857e293a99dd577f4c8","7501","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":63,""type"":""experimental"",""array_length"":20,""meanVal"":35,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7501","7501","true","red27.jpg","26","avg","500","red","20","[25,27,28,28,28,28,28,32,33,34,34,34,35,35,36,36,40,41,44,44]","35","three giraffes in a field","84","red","",""
"html-keyboard-response","262","1122726","0.0-262.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","263","1124229","0.0-263.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:3300% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:49px'></div> <div class='red' style='background-position:3700% 0%;margin-top:25px'></div> <div class='red' style='background-position:3900% 0%;margin-top:27px'></div> <div class='red' style='background-position:2500% 0%;margin-top:21px'></div> <div class='red' style='background-position:2100% 0%;margin-top:20px'></div> <div class='red' style='background-position:2900% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:22px'></div> <div class='red' style='background-position:2200% 0%;margin-top:23px'></div></span>","null","stimulus","{""index"":63,""type"":""experimental"",""array_length"":20,""meanVal"":35,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","264","1133628","0.0-264.0","60dfd857e293a99dd577f4c8","9393","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":64,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9393","9393","true","red22.jpg","21","avg","400","red","10","[21,25,22,28,29,32,33,36,37,39]","30","three giraffes in a field","85","red","",""
"html-keyboard-response","265","1134029","0.0-265.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","266","1135532","0.0-266.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2600% 0%;margin-top:28px'></div> <div class='red' style='background-position:2600% 0%;margin-top:21px'></div> <div class='red' style='background-position:3200% 0%;margin-top:47px'></div> <div class='red' style='background-position:2800% 0%;margin-top:50px'></div> <div class='red' style='background-position:2700% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:47px'></div> <div class='red' style='background-position:1700% 0%;margin-top:50px'></div> <div class='red' style='background-position:2000% 0%;margin-top:45px'></div> <div class='red' style='background-position:1900% 0%;margin-top:22px'></div> <div class='red' style='background-position:2000% 0%;margin-top:31px'></div> <div class='red' style='background-position:3300% 0%;margin-top:29px'></div> <div class='red' style='background-position:3600% 0%;margin-top:33px'></div> <div class='red' style='background-position:2400% 0%;margin-top:43px'></div> <div class='red' style='background-position:2600% 0%;margin-top:45px'></div> <div class='red' style='background-position:3600% 0%;margin-top:26px'></div> <div class='red' style='background-position:2800% 0%;margin-top:47px'></div> <div class='red' style='background-position:2000% 0%;margin-top:24px'></div> <div class='red' style='background-position:2500% 0%;margin-top:23px'></div> <div class='red' style='background-position:2700% 0%;margin-top:25px'></div> <div class='red' style='background-position:2000% 0%;margin-top:25px'></div></span>","null","stimulus","{""index"":64,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","267","1146589","0.0-267.0","60dfd857e293a99dd577f4c8","11051","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":65,""type"":""experimental"",""array_length"":20,""meanVal"":27,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","11051","11051","true","red25.jpg","24","avg","400","red","20","[17,19,20,20,20,20,20,24,25,26,26,26,27,27,28,28,32,33,36,36]","27","three giraffes in a field","86","red","",""
"html-keyboard-response","268","1146990","0.0-268.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","269","1148492","0.0-269.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3900% 0%;margin-top:42px'></div> <div class='red' style='background-position:2400% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:48px'></div> <div class='red' style='background-position:4100% 0%;margin-top:30px'></div> <div class='red' style='background-position:3800% 0%;margin-top:34px'></div> <div class='red' style='background-position:2300% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:26px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:28px'></div> <div class='red' style='background-position:3500% 0%;margin-top:34px'></div> <div class='red' style='background-position:2700% 0%;margin-top:46px'></div></span>","null","stimulus","{""index"":65,""type"":""experimental"",""array_length"":20,""meanVal"":27,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","270","1156556","0.0-270.0","60dfd857e293a99dd577f4c8","8060","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":66,""type"":""experimental"",""array_length"":10,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8060","8060","true","red26.jpg","25","avg","400","red","10","[23,27,24,30,31,34,35,38,39,41]","32","three giraffes in a field","87","red","",""
"html-keyboard-response","271","1157157","0.0-271.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","272","1158659","0.0-272.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2800% 0%;margin-top:43px'></div> <div class='red' style='background-position:1400% 0%;margin-top:22px'></div> <div class='red' style='background-position:2200% 0%;margin-top:48px'></div> <div class='red' style='background-position:2100% 0%;margin-top:23px'></div> <div class='red' style='background-position:1800% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:25px'></div> <div class='red' style='background-position:2600% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:23px'></div></span>","null","stimulus","{""index"":66,""type"":""experimental"",""array_length"":10,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","273","1163935","0.0-273.0","60dfd857e293a99dd577f4c8","5275","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":67,""type"":""experimental"",""array_length"":10,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5275","5275","true","red16.jpg","15","avg","600","red","10","[10,14,11,17,18,21,22,25,26,28]","19","three giraffes in a field","88","red","",""
"html-keyboard-response","274","1164337","0.0-274.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","275","1165840","0.0-275.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:32px'></div> <div class='red' style='background-position:3100% 0%;margin-top:37px'></div> <div class='red' style='background-position:4200% 0%;margin-top:45px'></div> <div class='red' style='background-position:4000% 0%;margin-top:43px'></div> <div class='red' style='background-position:3600% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:46px'></div> <div class='red' style='background-position:3500% 0%;margin-top:36px'></div> <div class='red' style='background-position:2800% 0%;margin-top:31px'></div></span>","null","stimulus","{""index"":67,""type"":""experimental"",""array_length"":10,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","276","1172891","0.0-276.0","60dfd857e293a99dd577f4c8","7047","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":68,""type"":""experimental"",""array_length"":10,""meanVal"":33,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7047","7047","true","red25.jpg","24","avg","400","red","10","[24,28,25,31,32,35,36,39,40,42]","33","three giraffes in a field","89","red","",""
"html-keyboard-response","277","1173293","0.0-277.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","278","1174796","0.0-278.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2700% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:45px'></div> <div> </div></span>","null","stimulus","{""index"":68,""type"":""experimental"",""array_length"":10,""meanVal"":33,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","279","1180458","0.0-279.0","60dfd857e293a99dd577f4c8","5657","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":69,""type"":""experimental"",""array_length"":2,""meanVal"":23,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5657","5657","true","red21.jpg","20","avg","400","red","2","[19,27]","23","three giraffes in a field","90","red","",""
"html-keyboard-response","280","1181059","0.0-280.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","281","1182560","0.0-281.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:1200% 0%;margin-top:34px'></div> <div class='red' style='background-position:1800% 0%;margin-top:41px'></div> <div class='red' style='background-position:1900% 0%;margin-top:41px'></div> <div class='red' style='background-position:900% 0%;margin-top:34px'></div> <div class='red' style='background-position:1200% 0%;margin-top:21px'></div> <div class='red' style='background-position:2500% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:36px'></div> <div class='red' style='background-position:2800% 0%;margin-top:47px'></div> <div class='red' style='background-position:1700% 0%;margin-top:44px'></div> <div class='red' style='background-position:1800% 0%;margin-top:48px'></div> <div class='red' style='background-position:1200% 0%;margin-top:32px'></div> <div class='red' style='background-position:1100% 0%;margin-top:34px'></div> <div class='red' style='background-position:2000% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:29px'></div> <div class='red' style='background-position:1600% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:48px'></div> <div class='red' style='background-position:1200% 0%;margin-top:46px'></div> <div class='red' style='background-position:2400% 0%;margin-top:38px'></div> <div class='red' style='background-position:2000% 0%;margin-top:45px'></div> <div class='red' style='background-position:1800% 0%;margin-top:33px'></div></span>","null","stimulus","{""index"":69,""type"":""experimental"",""array_length"":2,""meanVal"":23,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","282","1188465","0.0-282.0","60dfd857e293a99dd577f4c8","5902","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":70,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5902","5902","true","red21.jpg","20","avg","600","red","20","[9,11,12,12,12,12,12,16,17,18,18,18,19,19,20,20,24,25,28,28]","19","three giraffes in a field","91","red","",""
"html-keyboard-response","283","1188966","0.0-283.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","284","1190468","0.0-284.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:1000% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":70,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","285","1195738","0.0-285.0","60dfd857e293a99dd577f4c8","5267","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":71,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5267","5267","true","red10.jpg","9","avg","500","red","2","[10,18]","14","three giraffes in a field","92","red","",""
"html-keyboard-response","286","1196340","0.0-286.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","287","1197842","0.0-287.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2300% 0%;margin-top:38px'></div> <div class='red' style='background-position:2600% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:33px'></div> <div class='red' style='background-position:3400% 0%;margin-top:46px'></div> <div class='red' style='background-position:1900% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:45px'></div> <div class='red' style='background-position:2700% 0%;margin-top:23px'></div> <div class='red' style='background-position:3100% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:35px'></div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:28px'></div></span>","null","stimulus","{""index"":71,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","288","1206534","0.0-288.0","60dfd857e293a99dd577f4c8","8688","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":72,""type"":""experimental"",""array_length"":10,""meanVal"":28,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8688","8688","true","red25.jpg","24","avg","600","red","10","[19,23,20,26,27,30,31,34,35,37]","28","three giraffes in a field","93","red","",""
"html-keyboard-response","289","1206936","0.0-289.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","290","1208439","0.0-290.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2900% 0%;margin-top:22px'></div> <div class='red' style='background-position:2800% 0%;margin-top:40px'></div> <div class='red' style='background-position:2200% 0%;margin-top:25px'></div> <div class='red' style='background-position:2200% 0%;margin-top:20px'></div> <div class='red' style='background-position:2200% 0%;margin-top:28px'></div> <div class='red' style='background-position:3000% 0%;margin-top:37px'></div> <div class='red' style='background-position:2200% 0%;margin-top:46px'></div> <div class='red' style='background-position:2200% 0%;margin-top:37px'></div> <div class='red' style='background-position:2800% 0%;margin-top:34px'></div> <div class='red' style='background-position:3800% 0%;margin-top:41px'></div> <div class='red' style='background-position:2900% 0%;margin-top:46px'></div> <div class='red' style='background-position:3000% 0%;margin-top:49px'></div> <div class='red' style='background-position:1900% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:32px'></div> <div class='red' style='background-position:3400% 0%;margin-top:24px'></div> <div class='red' style='background-position:2800% 0%;margin-top:43px'></div> <div class='red' style='background-position:2100% 0%;margin-top:49px'></div> <div class='red' style='background-position:3500% 0%;margin-top:37px'></div> <div class='red' style='background-position:3800% 0%;margin-top:22px'></div> <div class='red' style='background-position:2700% 0%;margin-top:41px'></div> <div> </div></span>","null","stimulus","{""index"":72,""type"":""experimental"",""array_length"":10,""meanVal"":28,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","291","1217222","0.0-291.0","60dfd857e293a99dd577f4c8","8778","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":73,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8778","8778","true","red25.jpg","24","avg","400","red","20","[19,21,22,22,22,22,22,26,27,28,28,28,29,29,30,30,34,35,38,38]","29","three giraffes in a field","94","red","",""
"html-keyboard-response","292","1217824","0.0-292.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","293","1219326","0.0-293.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2800% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":73,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","294","1223917","0.0-294.0","60dfd857e293a99dd577f4c8","4585","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":74,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4585","4585","true","red26.jpg","25","avg","600","red","2","[28,36]","32","three giraffes in a field","95","red","",""
"html-keyboard-response","295","1224518","0.0-295.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","296","1226021","0.0-296.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:1400% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:47px'></div> <div class='red' style='background-position:3100% 0%;margin-top:24px'></div> <div class='red' style='background-position:1700% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:48px'></div> <div class='red' style='background-position:2400% 0%;margin-top:24px'></div></span>","null","stimulus","{""index"":74,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","297","1234586","0.0-297.0","60dfd857e293a99dd577f4c8","8559","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":75,""type"":""experimental"",""array_length"":10,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8559","8559","true","red25.jpg","24","avg","600","red","10","[13,17,14,20,21,24,25,28,29,31]","22","three giraffes in a field","96","red","",""
"html-keyboard-response","298","1234987","0.0-298.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","299","1236489","0.0-299.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2900% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:41px'></div></span>","null","stimulus","{""index"":75,""type"":""experimental"",""array_length"":10,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","300","1246157","0.0-300.0","60dfd857e293a99dd577f4c8","9665","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":76,""type"":""experimental"",""array_length"":2,""meanVal"":33,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9665","9665","true","red27.jpg","26","avg","400","red","2","[29,37]","33","three giraffes in a field","97","red","",""
"html-keyboard-response","301","1246759","0.0-301.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","302","1248261","0.0-302.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":76,""type"":""experimental"",""array_length"":2,""meanVal"":33,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","303","1254851","0.0-303.0","60dfd857e293a99dd577f4c8","6588","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":77,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6588","6588","true","red27.jpg","26","avg","600","red","2","[28,36]","32","three giraffes in a field","98","red","",""
"html-keyboard-response","304","1255252","0.0-304.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","305","1256755","0.0-305.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:39px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":77,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","306","1261723","0.0-306.0","60dfd857e293a99dd577f4c8","4966","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":78,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4966","4966","true","red26.jpg","25","avg","400","red","2","[23,31]","27","three giraffes in a field","99","red","",""
"html-keyboard-response","307","1262125","0.0-307.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","308","1263628","0.0-308.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:1100% 0%;margin-top:40px'></div> <div class='red' style='background-position:1700% 0%;margin-top:48px'></div> <div class='red' style='background-position:1100% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:28px'></div> <div class='red' style='background-position:1700% 0%;margin-top:41px'></div> <div class='red' style='background-position:1600% 0%;margin-top:41px'></div> <div class='red' style='background-position:2300% 0%;margin-top:31px'></div> <div class='red' style='background-position:1500% 0%;margin-top:35px'></div> <div class='red' style='background-position:2700% 0%;margin-top:33px'></div> <div class='red' style='background-position:1800% 0%;margin-top:21px'></div> <div class='red' style='background-position:1100% 0%;margin-top:23px'></div> <div class='red' style='background-position:2400% 0%;margin-top:41px'></div> <div class='red' style='background-position:1100% 0%;margin-top:34px'></div> <div class='red' style='background-position:800% 0%;margin-top:46px'></div> <div class='red' style='background-position:1900% 0%;margin-top:39px'></div> <div class='red' style='background-position:2700% 0%;margin-top:45px'></div> <div class='red' style='background-position:1000% 0%;margin-top:29px'></div> <div class='red' style='background-position:1800% 0%;margin-top:20px'></div> <div class='red' style='background-position:1700% 0%;margin-top:46px'></div> <div class='red' style='background-position:1900% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":78,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","309","1271554","0.0-309.0","60dfd857e293a99dd577f4c8","7921","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":79,""type"":""experimental"",""array_length"":20,""meanVal"":18,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7921","7921","true","red17.jpg","16","avg","400","red","20","[8,10,11,11,11,11,11,15,16,17,17,17,18,18,19,19,23,24,27,27]","18","three giraffes in a field","100","red","",""
"html-keyboard-response","310","1272056","0.0-310.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","311","1273558","0.0-311.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3300% 0%;margin-top:47px'></div> <div class='red' style='background-position:2900% 0%;margin-top:41px'></div> <div class='red' style='background-position:2100% 0%;margin-top:38px'></div> <div class='red' style='background-position:2400% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:38px'></div> <div class='red' style='background-position:2500% 0%;margin-top:46px'></div> <div class='red' style='background-position:3500% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:24px'></div> <div> </div></span>","null","stimulus","{""index"":79,""type"":""experimental"",""array_length"":20,""meanVal"":18,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","312","1277998","0.0-312.0","60dfd857e293a99dd577f4c8","4435","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":80,""type"":""experimental"",""array_length"":10,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4435","4435","true","red25.jpg","24","avg","500","red","10","[17,21,18,24,25,28,29,32,33,35]","26","three giraffes in a field","101","red","",""
"html-keyboard-response","313","1278400","0.0-313.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","314","1279903","0.0-314.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:4500% 0%;margin-top:29px'></div> <div class='red' style='background-position:3600% 0%;margin-top:42px'></div> <div class='red' style='background-position:3500% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:48px'></div> <div class='red' style='background-position:3700% 0%;margin-top:25px'></div> <div class='red' style='background-position:3600% 0%;margin-top:27px'></div> <div class='red' style='background-position:4100% 0%;margin-top:32px'></div> <div class='red' style='background-position:3500% 0%;margin-top:20px'></div> <div class='red' style='background-position:4500% 0%;margin-top:27px'></div> <div class='red' style='background-position:2600% 0%;margin-top:38px'></div> <div class='red' style='background-position:3300% 0%;margin-top:23px'></div> <div class='red' style='background-position:2900% 0%;margin-top:47px'></div> <div class='red' style='background-position:3500% 0%;margin-top:47px'></div> <div class='red' style='background-position:3700% 0%;margin-top:23px'></div> <div class='red' style='background-position:3400% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:4200% 0%;margin-top:32px'></div> <div class='red' style='background-position:2900% 0%;margin-top:32px'></div> <div class='red' style='background-position:2900% 0%;margin-top:46px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:30px'></div> <div class='red' style='background-position:2900% 0%;margin-top:44px'></div></span>","null","stimulus","{""index"":80,""type"":""experimental"",""array_length"":10,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","315","1284969","0.0-315.0","60dfd857e293a99dd577f4c8","5064","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":81,""type"":""experimental"",""array_length"":20,""meanVal"":36,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5064","5064","true","red27.jpg","26","avg","400","red","20","[26,28,29,29,29,29,29,33,34,35,35,35,36,36,37,37,41,42,45,45]","36","three giraffes in a field","102","red","",""
"html-keyboard-response","316","1285471","0.0-316.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","317","1286974","0.0-317.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:800% 0%;margin-top:20px'></div> <div class='red' style='background-position:1500% 0%;margin-top:41px'></div> <div class='red' style='background-position:800% 0%;margin-top:50px'></div> <div class='red' style='background-position:1400% 0%;margin-top:35px'></div> <div class='red' style='background-position:1400% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:20px'></div> <div class='red' style='background-position:1200% 0%;margin-top:37px'></div> <div class='red' style='background-position:700% 0%;margin-top:49px'></div> <div class='red' style='background-position:500% 0%;margin-top:20px'></div> <div class='red' style='background-position:1400% 0%;margin-top:32px'></div> <div class='red' style='background-position:1300% 0%;margin-top:22px'></div> <div class='red' style='background-position:800% 0%;margin-top:22px'></div> <div class='red' style='background-position:800% 0%;margin-top:40px'></div> <div class='red' style='background-position:1600% 0%;margin-top:35px'></div> <div class='red' style='background-position:800% 0%;margin-top:45px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:24px'></div> <div class='red' style='background-position:2000% 0%;margin-top:45px'></div> <div class='red' style='background-position:1500% 0%;margin-top:44px'></div> <div class='red' style='background-position:1600% 0%;margin-top:32px'></div> <div class='red' style='background-position:2400% 0%;margin-top:24px'></div> <div> </div></span>","null","stimulus","{""index"":81,""type"":""experimental"",""array_length"":20,""meanVal"":36,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","318","1293195","0.0-318.0","60dfd857e293a99dd577f4c8","6219","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":82,""type"":""experimental"",""array_length"":20,""meanVal"":15,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6219","6219","true","red15.jpg","14","avg","500","red","20","[5,7,8,8,8,8,8,12,13,14,14,14,15,15,16,16,20,21,24,24]","15","three giraffes in a field","103","red","",""
"html-keyboard-response","319","1293596","0.0-319.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","320","1295098","0.0-320.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:1200% 0%;margin-top:32px'></div> <div class='red' style='background-position:2400% 0%;margin-top:22px'></div> <div class='red' style='background-position:2500% 0%;margin-top:43px'></div> <div class='red' style='background-position:1800% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:31px'></div> <div class='red' style='background-position:2000% 0%;margin-top:24px'></div> <div class='red' style='background-position:1100% 0%;margin-top:21px'></div> <div class='red' style='background-position:1900% 0%;margin-top:21px'></div> <div class='red' style='background-position:1900% 0%;margin-top:33px'></div> <div class='red' style='background-position:2000% 0%;margin-top:44px'></div> <div class='red' style='background-position:1800% 0%;margin-top:20px'></div> <div class='red' style='background-position:1200% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:46px'></div> <div class='red' style='background-position:1200% 0%;margin-top:38px'></div> <div class='red' style='background-position:1800% 0%;margin-top:44px'></div> <div class='red' style='background-position:1600% 0%;margin-top:38px'></div> <div class='red' style='background-position:1200% 0%;margin-top:37px'></div> <div class='red' style='background-position:900% 0%;margin-top:35px'></div> <div class='red' style='background-position:2800% 0%;margin-top:45px'></div> <div class='red' style='background-position:2800% 0%;margin-top:39px'></div> <div> </div></span>","null","stimulus","{""index"":82,""type"":""experimental"",""array_length"":20,""meanVal"":15,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","321","1307617","0.0-321.0","60dfd857e293a99dd577f4c8","12517","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":83,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","12517","12517","true","red21.jpg","20","avg","400","red","20","[9,11,12,12,12,12,12,16,17,18,18,18,19,19,20,20,24,25,28,28]","19","three giraffes in a field","104","red","",""
"html-keyboard-response","322","1308119","0.0-322.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","323","1309622","0.0-323.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2000% 0%;margin-top:37px'></div> <div class='red' style='background-position:2800% 0%;margin-top:33px'></div> <div class='red' style='background-position:1200% 0%;margin-top:46px'></div> <div class='red' style='background-position:2400% 0%;margin-top:27px'></div> <div class='red' style='background-position:1800% 0%;margin-top:23px'></div> <div class='red' style='background-position:2000% 0%;margin-top:23px'></div> <div class='red' style='background-position:1600% 0%;margin-top:42px'></div> <div class='red' style='background-position:1200% 0%;margin-top:42px'></div> <div class='red' style='background-position:1200% 0%;margin-top:28px'></div> <div class='red' style='background-position:1800% 0%;margin-top:21px'></div> <div class='red' style='background-position:1200% 0%;margin-top:39px'></div> <div class='red' style='background-position:1200% 0%;margin-top:29px'></div> <div class='red' style='background-position:1100% 0%;margin-top:33px'></div> <div class='red' style='background-position:1900% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:40px'></div> <div class='red' style='background-position:1800% 0%;margin-top:38px'></div> <div class='red' style='background-position:900% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:22px'></div> <div class='red' style='background-position:2800% 0%;margin-top:43px'></div> <div class='red' style='background-position:2500% 0%;margin-top:26px'></div> <div> </div></span>","null","stimulus","{""index"":83,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","324","1314792","0.0-324.0","60dfd857e293a99dd577f4c8","5167","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":84,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5167","5167","true","red18.jpg","17","avg","500","red","20","[9,11,12,12,12,12,12,16,17,18,18,18,19,19,20,20,24,25,28,28]","19","three giraffes in a field","105","red","",""
"html-keyboard-response","325","1315393","0.0-325.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","326","1316896","0.0-326.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:3500% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:26px'></div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:45px'></div> <div class='red' style='background-position:1900% 0%;margin-top:37px'></div> <div class='red' style='background-position:3700% 0%;margin-top:45px'></div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:42px'></div> <div class='red' style='background-position:2600% 0%;margin-top:34px'></div> <div class='red' style='background-position:3000% 0%;margin-top:38px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":84,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","327","1324450","0.0-327.0","60dfd857e293a99dd577f4c8","7553","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":85,""type"":""experimental"",""array_length"":10,""meanVal"":28,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7553","7553","true","red25.jpg","24","avg","600","red","10","[19,23,20,26,27,30,31,34,35,37]","28","three giraffes in a field","106","red","",""
"html-keyboard-response","328","1324952","0.0-328.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","329","1326455","0.0-329.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2000% 0%;margin-top:31px'></div> <div class='red' style='background-position:2400% 0%;margin-top:40px'></div> <div class='red' style='background-position:2800% 0%;margin-top:20px'></div> <div class='red' style='background-position:2700% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:40px'></div> <div class='red' style='background-position:2600% 0%;margin-top:35px'></div> <div class='red' style='background-position:2000% 0%;margin-top:31px'></div> <div class='red' style='background-position:3600% 0%;margin-top:23px'></div> <div class='red' style='background-position:2000% 0%;margin-top:47px'></div> <div class='red' style='background-position:2800% 0%;margin-top:35px'></div> <div class='red' style='background-position:1900% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:36px'></div> <div class='red' style='background-position:2600% 0%;margin-top:29px'></div> <div class='red' style='background-position:3600% 0%;margin-top:44px'></div> <div class='red' style='background-position:2600% 0%;margin-top:30px'></div> <div class='red' style='background-position:3300% 0%;margin-top:34px'></div> <div class='red' style='background-position:3200% 0%;margin-top:24px'></div> <div class='red' style='background-position:2000% 0%;margin-top:46px'></div> <div class='red' style='background-position:2000% 0%;margin-top:46px'></div> <div class='red' style='background-position:2500% 0%;margin-top:22px'></div></span>","null","stimulus","{""index"":85,""type"":""experimental"",""array_length"":10,""meanVal"":28,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","330","1332731","0.0-330.0","60dfd857e293a99dd577f4c8","6273","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":86,""type"":""experimental"",""array_length"":20,""meanVal"":27,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6273","6273","true","red24.jpg","23","avg","500","red","20","[17,19,20,20,20,20,20,24,25,26,26,26,27,27,28,28,32,33,36,36]","27","three giraffes in a field","107","red","",""
"html-keyboard-response","331","1333232","0.0-331.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","332","1334735","0.0-332.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2600% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:25px'></div> <div class='red' style='background-position:1300% 0%;margin-top:33px'></div> <div class='red' style='background-position:2500% 0%;margin-top:41px'></div> <div class='red' style='background-position:1700% 0%;margin-top:27px'></div> <div class='red' style='background-position:1300% 0%;margin-top:36px'></div> <div class='red' style='background-position:1000% 0%;margin-top:36px'></div> <div class='red' style='background-position:2900% 0%;margin-top:27px'></div> <div class='red' style='background-position:2900% 0%;margin-top:37px'></div> <div class='red' style='background-position:1300% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:38px'></div> <div class='red' style='background-position:1300% 0%;margin-top:47px'></div> <div class='red' style='background-position:2100% 0%;margin-top:46px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:37px'></div> <div class='red' style='background-position:1900% 0%;margin-top:32px'></div> <div class='red' style='background-position:2000% 0%;margin-top:40px'></div> <div class='red' style='background-position:1800% 0%;margin-top:35px'></div> <div class='red' style='background-position:1900% 0%;margin-top:30px'></div> <div class='red' style='background-position:1900% 0%;margin-top:36px'></div> <div class='red' style='background-position:1200% 0%;margin-top:46px'></div></span>","null","stimulus","{""index"":86,""type"":""experimental"",""array_length"":20,""meanVal"":27,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","333","1345249","0.0-333.0","60dfd857e293a99dd577f4c8","10509","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":87,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","10509","10509","true","red18.jpg","17","avg","500","red","20","[10,12,13,13,13,13,13,17,18,19,19,19,20,20,21,21,25,26,29,29]","20","three giraffes in a field","108","red","",""
"html-keyboard-response","334","1345751","0.0-334.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","335","1347253","0.0-335.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2900% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:41px'></div> <div class='red' style='background-position:1800% 0%;margin-top:46px'></div> <div class='red' style='background-position:2200% 0%;margin-top:47px'></div> <div class='red' style='background-position:3000% 0%;margin-top:34px'></div> <div class='red' style='background-position:2500% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:37px'></div> <div class='red' style='background-position:2600% 0%;margin-top:37px'></div> <div class='red' style='background-position:3400% 0%;margin-top:47px'></div></span>","null","stimulus","{""index"":87,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","336","1355066","0.0-336.0","60dfd857e293a99dd577f4c8","7810","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":88,""type"":""experimental"",""array_length"":10,""meanVal"":27,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7810","7810","true","red23.jpg","22","avg","500","red","10","[18,22,19,25,26,29,30,33,34,36]","27","three giraffes in a field","109","red","",""
"html-keyboard-response","337","1355468","0.0-337.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","338","1356970","0.0-338.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:1800% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":88,""type"":""experimental"",""array_length"":10,""meanVal"":27,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","339","1364770","0.0-339.0","60dfd857e293a99dd577f4c8","7795","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":89,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7795","7795","true","red11.jpg","10","avg","400","red","2","[10,18]","14","three giraffes in a field","110","red","",""
"html-keyboard-response","340","1365171","0.0-340.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","341","1366674","0.0-341.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:27px'></div> <div class='red' style='background-position:3200% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":89,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","342","1371340","0.0-342.0","60dfd857e293a99dd577f4c8","4664","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":90,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4664","4664","true","red29.jpg","28","avg","400","red","2","[32,40]","36","three giraffes in a field","111","red","",""
"html-keyboard-response","343","1371742","0.0-343.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","344","1373245","0.0-344.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:44px'></div> <div class='red' style='background-position:2400% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:42px'></div> <div class='red' style='background-position:2500% 0%;margin-top:28px'></div> <div class='red' style='background-position:1000% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:50px'></div> <div class='red' style='background-position:1300% 0%;margin-top:23px'></div> <div class='red' style='background-position:2100% 0%;margin-top:46px'></div> <div class='red' style='background-position:900% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:28px'></div></span>","null","stimulus","{""index"":90,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","345","1384579","0.0-345.0","60dfd857e293a99dd577f4c8","11331","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":91,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","11331","11331","true","red22.jpg","21","avg","400","red","10","[9,13,10,16,17,20,21,24,25,27]","18","three giraffes in a field","112","red","",""
"html-keyboard-response","346","1385180","0.0-346.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","347","1386683","0.0-347.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":91,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","348","1397064","0.0-348.0","60dfd857e293a99dd577f4c8","10377","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":92,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","10377","10377","true","red22.jpg","21","avg","600","red","2","[22,30]","26","three giraffes in a field","113","red","",""
"html-keyboard-response","349","1397566","0.0-349.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","350","1399069","0.0-350.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2800% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:33px'></div> <div class='red' style='background-position:2900% 0%;margin-top:44px'></div> <div class='red' style='background-position:3600% 0%;margin-top:23px'></div> <div class='red' style='background-position:2500% 0%;margin-top:27px'></div> <div class='red' style='background-position:2100% 0%;margin-top:31px'></div> <div class='red' style='background-position:3300% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:40px'></div> <div class='red' style='background-position:3700% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:40px'></div></span>","null","stimulus","{""index"":92,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","351","1409352","0.0-351.0","60dfd857e293a99dd577f4c8","10281","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":93,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","10281","10281","true","red24.jpg","23","avg","500","red","10","[21,25,22,28,29,32,33,36,37,39]","30","three giraffes in a field","114","red","",""
"html-keyboard-response","352","1409954","0.0-352.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","353","1411457","0.0-353.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2600% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":93,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","354","1422812","0.0-354.0","60dfd857e293a99dd577f4c8","11350","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":94,""type"":""experimental"",""array_length"":2,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","11350","11350","true","red26.jpg","25","avg","600","red","2","[26,34]","30","three giraffes in a field","115","red","",""
"html-keyboard-response","355","1423213","0.0-355.0","60dfd857e293a99dd577f4c8","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","356","1424716","0.0-356.0","60dfd857e293a99dd577f4c8","null","","","","<span class='grid'><div class='red' style='background-position:2200% 0%;margin-top:39px'></div> <div class='red' style='background-position:3900% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:44px'></div> <div class='red' style='background-position:2300% 0%;margin-top:43px'></div> <div class='red' style='background-position:2900% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:36px'></div> <div class='red' style='background-position:3900% 0%;margin-top:28px'></div> <div class='red' style='background-position:3000% 0%;margin-top:30px'></div> <div class='red' style='background-position:2900% 0%;margin-top:40px'></div> <div class='red' style='background-position:2900% 0%;margin-top:25px'></div> <div class='red' style='background-position:2700% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:22px'></div> <div class='red' style='background-position:3600% 0%;margin-top:47px'></div> <div class='red' style='background-position:3100% 0%;margin-top:46px'></div> <div class='red' style='background-position:2300% 0%;margin-top:47px'></div> <div class='red' style='background-position:2000% 0%;margin-top:30px'></div> <div class='red' style='background-position:2300% 0%;margin-top:30px'></div> <div class='red' style='background-position:3500% 0%;margin-top:21px'></div> <div class='red' style='background-position:3100% 0%;margin-top:31px'></div> <div class='red' style='background-position:2300% 0%;margin-top:23px'></div></span>","null","stimulus","{""index"":94,""type"":""experimental"",""array_length"":2,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","357","1432895","0.0-357.0","60dfd857e293a99dd577f4c8","8175","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":95,""type"":""experimental"",""array_length"":20,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>what was the average redness of the array?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8175","8175","true","red24.jpg","23","avg","400","red","20","[20,22,23,23,23,23,23,27,28,29,29,29,30,30,31,31,35,36,39,39]","30","three giraffes in a field","116","red","",""
"html-button-response","358","1443986","0.0-358.0","60dfd857e293a99dd577f4c8","11088.600000023842","","","","<p><strong>My purpose in this experiment was:</strong></p>","","","","","","","","","","","","","","","","","","","","","","","","","","","","1","1"
"survey-text","359","1494887","0.0-359.0-0.0","60dfd857e293a99dd577f4c8","50898.10000002384","","","{""avg_strategy"":""I tried to go to the middle of the colors mixed together.""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","360","1504408","0.0-362.0","60dfd857e293a99dd577f4c8","9515.5","","[{""page_index"":0,""viewing_time"":9515.100000023842}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
