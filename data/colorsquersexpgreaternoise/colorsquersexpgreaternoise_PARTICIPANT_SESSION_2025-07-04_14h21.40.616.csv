"trial_type","trial_index","time_elapsed","internal_node_id","participant_id","rt","url","view_history","responses","stimulus","key_press","Name","config","type","prompt","step","max","start","on_load","data","min","labels","button_label","stimulus_duration","trial_duration","response_ends_trial","imageSelected","indexSelected","exp_type","fixationTime","faceIdentity","array_length","array_values","meanVal","description","trial","color","button_pressed","purpose"
"pavlovia","0","2","0.0-0.0","582474a8aac01b0001e45ef9","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"external-html","1","48810","0.0-1.0","582474a8aac01b0001e45ef9","48657.60000002384","external_page.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","2","81578","0.0-2.0","582474a8aac01b0001e45ef9","32767.600000023842","","[{""page_index"":0,""viewing_time"":9295.399999976158},{""page_index"":1,""viewing_time"":9336},{""page_index"":2,""viewing_time"":10271.5},{""page_index"":3,""viewing_time"":3864.4000000953674}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","3","88730","0.0-3.0","582474a8aac01b0001e45ef9","7150.300000071526","","","{""Q0"":""582474a8aac01b0001e45ef9""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","4","90378","0.0-4.0","582474a8aac01b0001e45ef9","1647.1000000238419","","[{""page_index"":0,""viewing_time"":1647}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","5","192738","0.0-5.0","582474a8aac01b0001e45ef9","102359","","","{""Q0"":""that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","6","197274","0.0-6.0-0.0","582474a8aac01b0001e45ef9","4533.700000047684","","","{""Q0"":""but""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","7","197777","0.0-7.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","8","199294","0.0-8.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:2000% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:400% 0%;margin-top:39px'></div> <div class='red' style='background-position:200% 0%;margin-top:20px'></div> <div class='red' style='background-position:1700% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:28px'></div></span>","null","stimulus","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","9","209866","0.0-9.0","582474a8aac01b0001e45ef9","10571","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":0,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","10571","10571","true","red11.jpg","10","exp","500","red","6","[4,19,20,17,2,12]","12.333333333333334","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","1","","",""
"html-keyboard-response","10","210467","0.0-10.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","11","211984","0.0-11.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1000% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:33px'></div> <div class='red' style='background-position:600% 0%;margin-top:46px'></div> <div class='red' style='background-position:700% 0%;margin-top:39px'></div> <div class='red' style='background-position:500% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":0,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","12","215226","0.0-12.0","582474a8aac01b0001e45ef9","3240","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":1,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3240","3240","true","red11.jpg","10","exp","600","red","7","[6,5,17,10,7,15,11]","10.142857142857142","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","2","","",""
"html-keyboard-response","13","215826","0.0-13.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","14","217338","0.0-14.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:1000% 0%;margin-top:48px'></div> <div class='red' style='background-position:300% 0%;margin-top:49px'></div> <div class='red' style='background-position:100% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:22px'></div> <div class='red' style='background-position:400% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:25px'></div> <div class='red' style='background-position:1300% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:42px'></div> <div> </div></span>","null","stimulus","{""index"":1,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","15","220234","0.0-15.0","582474a8aac01b0001e45ef9","2893","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":2,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2893","2893","true","red9.jpg","8","exp","600","red","9","[1,10,11,3,18,4,12,14,13]","9.555555555555555","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","3","","",""
"html-keyboard-response","16","220736","0.0-16.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","17","222243","0.0-17.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":2,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","18","224914","0.0-18.0","582474a8aac01b0001e45ef9","2668","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":3,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2668","2668","true","red16.jpg","15","exp","500","red","2","[2,19]","10.5","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","4","","",""
"html-keyboard-response","19","225415","0.0-19.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","20","226918","0.0-20.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:41px'></div> <div class='red' style='background-position:4600% 0%;margin-top:43px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":3,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","21","229753","0.0-21.0","582474a8aac01b0001e45ef9","2833","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":4,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2833","2833","true","red38.jpg","37","exp","500","red","3","[46,32,40]","39.333333333333336","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","5","","",""
"html-keyboard-response","22","230368","0.0-22.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","23","231886","0.0-23.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:37px'></div> <div> </div></span>","null","stimulus","{""index"":4,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","24","235210","0.0-24.0","582474a8aac01b0001e45ef9","3322","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":5,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3322","3322","true","red13.jpg","12","exp","600","red","2","[13,11]","12","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","6","","",""
"html-keyboard-response","25","235711","0.0-25.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","26","237212","0.0-26.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:400% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:22px'></div> <div class='red' style='background-position:800% 0%;margin-top:47px'></div> <div class='red' style='background-position:1700% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:900% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":5,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","27","238905","0.0-27.0","582474a8aac01b0001e45ef9","1692","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":6,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1692","1692","true","red14.jpg","13","exp","500","red","5","[19,4,8,17,9]","11.4","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","7","","",""
"html-keyboard-response","28","239521","0.0-28.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","29","241032","0.0-29.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:24px'></div> <div class='red' style='background-position:700% 0%;margin-top:20px'></div> <div class='red' style='background-position:100% 0%;margin-top:27px'></div> <div class='red' style='background-position:300% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:45px'></div> <div class='red' style='background-position:1100% 0%;margin-top:39px'></div> <div class='red' style='background-position:600% 0%;margin-top:24px'></div> <div class='red' style='background-position:1000% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":6,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","30","243834","0.0-30.0","582474a8aac01b0001e45ef9","2801","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":7,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2801","2801","true","red10.jpg","9","exp","600","red","8","[2,6,1,7,11,3,12,10]","6.5","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","8","","",""
"html-keyboard-response","31","244336","0.0-31.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","32","245839","0.0-32.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1500% 0%;margin-top:50px'></div> <div class='red' style='background-position:1700% 0%;margin-top:39px'></div> <div class='red' style='background-position:1200% 0%;margin-top:46px'></div> <div class='red' style='background-position:600% 0%;margin-top:47px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:34px'></div> <div class='red' style='background-position:1800% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":7,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","33","249474","0.0-33.0","582474a8aac01b0001e45ef9","3632","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":8,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3632","3632","true","red10.jpg","9","exp","500","red","8","[12,16,18,17,6,11,2,15]","12.125","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","9","","",""
"html-keyboard-response","34","249975","0.0-34.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","35","251481","0.0-35.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:300% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:700% 0%;margin-top:33px'></div></span>","null","stimulus","{""index"":8,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","36","253618","0.0-36.0","582474a8aac01b0001e45ef9","2135","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":9,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2135","2135","true","red9.jpg","8","exp","500","red","6","[10,5,2,17,7,3]","7.333333333333333","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","10","","",""
"html-keyboard-response","37","254019","0.0-37.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","38","255529","0.0-38.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:44px'></div> <div class='red' style='background-position:4300% 0%;margin-top:41px'></div></span>","null","stimulus","{""index"":9,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","39","260497","0.0-39.0","582474a8aac01b0001e45ef9","4968","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":10,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4968","4968","true","red33.jpg","32","exp","400","red","5","[34,43,40,31,41]","37.8","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","11","","",""
"html-keyboard-response","40","261099","0.0-40.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","41","262601","0.0-41.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:900% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:31px'></div> <div class='red' style='background-position:300% 0%;margin-top:29px'></div> <div class='red' style='background-position:200% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:42px'></div> <div class='red' style='background-position:600% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:49px'></div> <div class='red' style='background-position:1500% 0%;margin-top:39px'></div> <div> </div></span>","null","stimulus","{""index"":10,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","42","264305","0.0-42.0","582474a8aac01b0001e45ef9","1702","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":11,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1702","1702","true","red9.jpg","8","exp","600","red","8","[15,3,20,12,9,6,11,2]","9.75","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","12","","",""
"html-keyboard-response","43","264918","0.0-43.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","44","266435","0.0-44.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1200% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:40px'></div> <div> </div></span>","null","stimulus","{""index"":11,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","45","268418","0.0-45.0","582474a8aac01b0001e45ef9","1981","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":12,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1981","1981","true","red10.jpg","9","exp","600","red","3","[14,6,12]","10.666666666666666","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","13","","",""
"html-keyboard-response","46","268821","0.0-46.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","47","270322","0.0-47.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:700% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:38px'></div> <div class='red' style='background-position:200% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":12,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","48","272882","0.0-48.0","582474a8aac01b0001e45ef9","2558","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":13,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2558","2558","true","red8.jpg","7","exp","400","red","3","[7,2,15]","8","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","14","","",""
"html-keyboard-response","49","273383","0.0-49.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","50","274887","0.0-50.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:25px'></div> <div class='red' style='background-position:4200% 0%;margin-top:30px'></div> <div class='red' style='background-position:3400% 0%;margin-top:42px'></div> <div class='red' style='background-position:3300% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4600% 0%;margin-top:22px'></div> <div class='red' style='background-position:3800% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":13,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","51","276980","0.0-51.0","582474a8aac01b0001e45ef9","2091","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":14,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2091","2091","true","red40.jpg","39","exp","500","red","8","[46,40,36,38,37,34,33,42]","38.25","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","15","","",""
"html-keyboard-response","52","277390","0.0-52.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","53","278892","0.0-53.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:3700% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:32px'></div> <div class='red' style='background-position:3100% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:38px'></div> <div class='red' style='background-position:3200% 0%;margin-top:33px'></div> <div class='red' style='background-position:3800% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:28px'></div> <div class='red' style='background-position:4500% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4800% 0%;margin-top:22px'></div> <div class='red' style='background-position:3300% 0%;margin-top:44px'></div> <div class='red' style='background-position:3400% 0%;margin-top:29px'></div> <div> </div></span>","null","stimulus","{""index"":14,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","54","280794","0.0-54.0","582474a8aac01b0001e45ef9","1900","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":15,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1900","1900","true","red36.jpg","35","exp","400","red","11","[40,41,33,45,48,32,34,38,31,37,35]","37.63636363636363","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","16","","",""
"html-keyboard-response","55","281298","0.0-55.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","56","282821","0.0-56.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:800% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:26px'></div> <div class='red' style='background-position:1900% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:900% 0%;margin-top:31px'></div> <div class='red' style='background-position:100% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:22px'></div> <div class='red' style='background-position:300% 0%;margin-top:48px'></div> <div class='red' style='background-position:500% 0%;margin-top:48px'></div> <div class='red' style='background-position:1600% 0%;margin-top:43px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":15,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","57","285514","0.0-57.0","582474a8aac01b0001e45ef9","2691","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":16,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2691","2691","true","red15.jpg","14","exp","500","red","10","[3,12,8,1,19,15,5,13,9,16]","10.1","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","17","","",""
"html-keyboard-response","58","286020","0.0-58.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","59","287535","0.0-59.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:3300% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:50px'></div> <div class='red' style='background-position:4600% 0%;margin-top:22px'></div> <div class='red' style='background-position:4800% 0%;margin-top:36px'></div> <div class='red' style='background-position:3600% 0%;margin-top:49px'></div> <div class='red' style='background-position:4200% 0%;margin-top:47px'></div> <div class='red' style='background-position:3500% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:35px'></div> <div> </div></span>","null","stimulus","{""index"":16,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","60","289721","0.0-60.0","582474a8aac01b0001e45ef9","2183","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":17,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2183","2183","true","red38.jpg","37","exp","500","red","9","[31,33,32,36,43,42,48,46,35]","38.44444444444444","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","18","","",""
"html-keyboard-response","61","290235","0.0-61.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","62","291739","0.0-62.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:400% 0%;margin-top:45px'></div> <div class='red' style='background-position:200% 0%;margin-top:33px'></div> <div class='red' style='background-position:1200% 0%;margin-top:20px'></div> <div class='red' style='background-position:700% 0%;margin-top:43px'></div> <div class='red' style='background-position:900% 0%;margin-top:50px'></div> <div class='red' style='background-position:1300% 0%;margin-top:48px'></div> <div class='red' style='background-position:1000% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:31px'></div> <div class='red' style='background-position:100% 0%;margin-top:44px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":17,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","63","294186","0.0-63.0","582474a8aac01b0001e45ef9","2446","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":18,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2446","2446","true","red19.jpg","18","exp","500","red","11","[1,9,7,12,16,2,11,13,10,20,4]","9.545454545454545","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","19","","",""
"html-keyboard-response","64","294602","0.0-64.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","65","296114","0.0-65.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:4400% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4700% 0%;margin-top:50px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":18,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","66","297697","0.0-66.0","582474a8aac01b0001e45ef9","1581","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":19,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1581","1581","true","red36.jpg","35","exp","400","red","4","[47,36,44,31]","39.5","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","20","","",""
"instructions","67","313386","0.0-67.0","582474a8aac01b0001e45ef9","15688.200000047684","","[{""page_index"":0,""viewing_time"":15688}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","68","318794","0.0-68.0-0.0","582474a8aac01b0001e45ef9","5406.799999952316","","","{""Q0"":""rock""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","69","319401","0.0-69.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","70","320902","0.0-70.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:31px'></div> <div class='red' style='background-position:2000% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:39px'></div> <div class='red' style='background-position:3100% 0%;margin-top:30px'></div> <div class='red' style='background-position:3000% 0%;margin-top:29px'></div> <div class='red' style='background-position:3700% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:30px'></div></span>","null","stimulus","{""index"":19,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","71","323642","0.0-71.0","582474a8aac01b0001e45ef9","2736","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":0,""type"":""experimental"",""array_length"":10,""meanVal"":28,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2736","2736","true","red17.jpg","16","exp","600","red","10","[19,23,20,26,27,30,31,34,35,37]","28","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","21","red","",""
"html-keyboard-response","72","324048","0.0-72.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","73","325552","0.0-73.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:22px'></div> <div class='red' style='background-position:3600% 0%;margin-top:38px'></div> <div class='red' style='background-position:2800% 0%;margin-top:48px'></div> <div class='red' style='background-position:4000% 0%;margin-top:49px'></div> <div class='red' style='background-position:3100% 0%;margin-top:34px'></div> <div class='red' style='background-position:2500% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:46px'></div> <div class='red' style='background-position:4200% 0%;margin-top:30px'></div> <div class='red' style='background-position:3200% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":0,""type"":""experimental"",""array_length"":10,""meanVal"":28,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","74","327658","0.0-74.0","582474a8aac01b0001e45ef9","2103","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":1,""type"":""experimental"",""array_length"":10,""meanVal"":33,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2103","2103","true","red21.jpg","20","exp","400","red","10","[24,28,25,31,32,35,36,39,40,42]","33","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","22","red","",""
"html-keyboard-response","75","328064","0.0-75.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","76","329565","0.0-76.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:47px'></div></span>","null","stimulus","{""index"":1,""type"":""experimental"",""array_length"":10,""meanVal"":33,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","77","331410","0.0-77.0","582474a8aac01b0001e45ef9","1844","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":2,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1844","1844","true","red15.jpg","14","exp","400","red","2","[10,18]","14","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","23","red","",""
"html-keyboard-response","78","331919","0.0-78.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","79","333421","0.0-79.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:1700% 0%;margin-top:50px'></div> <div class='red' style='background-position:1500% 0%;margin-top:21px'></div> <div class='red' style='background-position:2100% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:900% 0%;margin-top:21px'></div> <div class='red' style='background-position:900% 0%;margin-top:32px'></div> <div class='red' style='background-position:1500% 0%;margin-top:26px'></div> <div class='red' style='background-position:1500% 0%;margin-top:30px'></div> <div class='red' style='background-position:900% 0%;margin-top:48px'></div> <div class='red' style='background-position:900% 0%;margin-top:44px'></div> <div class='red' style='background-position:900% 0%;margin-top:30px'></div> <div class='red' style='background-position:1300% 0%;margin-top:46px'></div> <div class='red' style='background-position:1700% 0%;margin-top:20px'></div> <div class='red' style='background-position:1600% 0%;margin-top:49px'></div> <div class='red' style='background-position:1600% 0%;margin-top:42px'></div> <div class='red' style='background-position:2200% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:36px'></div> <div class='red' style='background-position:1400% 0%;margin-top:24px'></div> <div class='red' style='background-position:800% 0%;margin-top:46px'></div> <div class='red' style='background-position:2500% 0%;margin-top:26px'></div></span>","null","stimulus","{""index"":2,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","80","335730","0.0-80.0","582474a8aac01b0001e45ef9","2307","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":3,""type"":""experimental"",""array_length"":20,""meanVal"":16,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2307","2307","true","red13.jpg","12","exp","500","red","20","[6,8,9,9,9,9,9,13,14,15,15,15,16,16,17,17,21,22,25,25]","16","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","24","red","",""
"html-keyboard-response","81","336331","0.0-81.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","82","337838","0.0-82.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:2700% 0%;margin-top:36px'></div> <div class='red' style='background-position:3400% 0%;margin-top:23px'></div> <div class='red' style='background-position:3900% 0%;margin-top:20px'></div> <div class='red' style='background-position:2700% 0%;margin-top:21px'></div> <div class='red' style='background-position:3300% 0%;margin-top:23px'></div> <div class='red' style='background-position:3300% 0%;margin-top:31px'></div> <div class='red' style='background-position:2700% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:27px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:27px'></div> <div class='red' style='background-position:4000% 0%;margin-top:40px'></div> <div class='red' style='background-position:3500% 0%;margin-top:40px'></div> <div class='red' style='background-position:4300% 0%;margin-top:29px'></div> <div class='red' style='background-position:2700% 0%;margin-top:43px'></div> <div class='red' style='background-position:2700% 0%;margin-top:42px'></div> <div class='red' style='background-position:4300% 0%;margin-top:29px'></div> <div class='red' style='background-position:3100% 0%;margin-top:38px'></div> <div class='red' style='background-position:3300% 0%;margin-top:36px'></div> <div class='red' style='background-position:3400% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:44px'></div> <div class='red' style='background-position:3500% 0%;margin-top:28px'></div></span>","null","stimulus","{""index"":3,""type"":""experimental"",""array_length"":20,""meanVal"":16,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","83","340682","0.0-83.0","582474a8aac01b0001e45ef9","2843","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":4,""type"":""experimental"",""array_length"":20,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2843","2843","true","red29.jpg","28","exp","600","red","20","[24,26,27,27,27,27,27,31,32,33,33,33,34,34,35,35,39,40,43,43]","34","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","25","red","",""
"html-keyboard-response","84","341183","0.0-84.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","85","342694","0.0-85.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:1500% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:700% 0%;margin-top:29px'></div> <div class='red' style='background-position:1900% 0%;margin-top:29px'></div> <div class='red' style='background-position:2200% 0%;margin-top:46px'></div> <div class='red' style='background-position:1400% 0%;margin-top:33px'></div> <div class='red' style='background-position:2500% 0%;margin-top:48px'></div> <div class='red' style='background-position:1100% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:800% 0%;margin-top:29px'></div> <div class='red' style='background-position:1800% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":4,""type"":""experimental"",""array_length"":20,""meanVal"":34,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","86","344546","0.0-86.0","582474a8aac01b0001e45ef9","1848","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":5,""type"":""experimental"",""array_length"":10,""meanVal"":16,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1848","1848","true","red17.jpg","16","exp","500","red","10","[7,11,8,14,15,18,19,22,23,25]","16","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","26","red","",""
"html-keyboard-response","87","345047","0.0-87.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","88","346563","0.0-88.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":5,""type"":""experimental"",""array_length"":10,""meanVal"":16,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","89","348737","0.0-89.0","582474a8aac01b0001e45ef9","2173","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":6,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2173","2173","true","red24.jpg","23","exp","500","red","2","[20,28]","24","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","27","red","",""
"html-keyboard-response","90","349338","0.0-90.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","91","350854","0.0-91.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1800% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:45px'></div></span>","null","stimulus","{""index"":6,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","92","352626","0.0-92.0","582474a8aac01b0001e45ef9","1770","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":7,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1770","1770","true","red14.jpg","13","exp","600","red","2","[18,26]","22","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","28","red","",""
"html-keyboard-response","93","353228","0.0-93.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","94","354741","0.0-94.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:3400% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:21px'></div> <div class='red' style='background-position:4100% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:22px'></div> <div class='red' style='background-position:4200% 0%;margin-top:47px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:31px'></div> <div class='red' style='background-position:3800% 0%;margin-top:23px'></div> <div class='red' style='background-position:3700% 0%;margin-top:33px'></div> <div class='red' style='background-position:4400% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:41px'></div></span>","null","stimulus","{""index"":7,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","95","357353","0.0-95.0","582474a8aac01b0001e45ef9","2611","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":8,""type"":""experimental"",""array_length"":10,""meanVal"":35,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2611","2611","true","red24.jpg","23","exp","600","red","10","[26,30,27,33,34,37,38,41,42,44]","35","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","29","red","",""
"html-keyboard-response","96","357867","0.0-96.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","97","359383","0.0-97.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":8,""type"":""experimental"",""array_length"":10,""meanVal"":35,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","98","362521","0.0-98.0","582474a8aac01b0001e45ef9","3137","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":9,""type"":""experimental"",""array_length"":2,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3137","3137","true","red19.jpg","18","exp","500","red","2","[26,34]","30","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","30","red","",""
"html-keyboard-response","99","363036","0.0-99.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","100","364551","0.0-100.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:2300% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":9,""type"":""experimental"",""array_length"":2,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","101","366769","0.0-101.0","582474a8aac01b0001e45ef9","2218","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":10,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2218","2218","true","red18.jpg","17","exp","500","red","2","[23,31]","27","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","31","red","",""
"html-keyboard-response","102","367185","0.0-102.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","103","368695","0.0-103.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":10,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","104","371074","0.0-104.0","582474a8aac01b0001e45ef9","2375","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":11,""type"":""experimental"",""array_length"":2,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2375","2375","true","red13.jpg","12","exp","400","red","2","[15,23]","19","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","32","red","",""
"html-keyboard-response","105","371582","0.0-105.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","106","373096","0.0-106.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2200% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":11,""type"":""experimental"",""array_length"":2,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","107","375130","0.0-107.0","582474a8aac01b0001e45ef9","2031","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":12,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2031","2031","true","red15.jpg","14","exp","500","red","2","[14,22]","18","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","33","red","",""
"html-keyboard-response","108","375746","0.0-108.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","109","377258","0.0-109.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:34px'></div> <div class='red' style='background-position:1200% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":12,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","110","379266","0.0-110.0","582474a8aac01b0001e45ef9","2006","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":13,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2006","2006","true","red15.jpg","14","exp","600","red","2","[12,20]","16","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","34","red","",""
"html-keyboard-response","111","379668","0.0-111.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","112","381174","0.0-112.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:3400% 0%;margin-top:29px'></div> <div class='red' style='background-position:2100% 0%;margin-top:43px'></div> <div class='red' style='background-position:2700% 0%;margin-top:38px'></div> <div class='red' style='background-position:3000% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:34px'></div> <div class='red' style='background-position:2900% 0%;margin-top:46px'></div> <div class='red' style='background-position:2200% 0%;margin-top:44px'></div> <div class='red' style='background-position:2200% 0%;margin-top:24px'></div> <div class='red' style='background-position:2200% 0%;margin-top:47px'></div> <div class='red' style='background-position:3800% 0%;margin-top:35px'></div> <div class='red' style='background-position:1900% 0%;margin-top:26px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:36px'></div> <div class='red' style='background-position:2800% 0%;margin-top:39px'></div> <div class='red' style='background-position:2800% 0%;margin-top:30px'></div> <div class='red' style='background-position:3000% 0%;margin-top:49px'></div> <div class='red' style='background-position:2200% 0%;margin-top:29px'></div> <div class='red' style='background-position:3800% 0%;margin-top:35px'></div> <div class='red' style='background-position:2800% 0%;margin-top:41px'></div> <div class='red' style='background-position:2600% 0%;margin-top:30px'></div> <div class='red' style='background-position:3500% 0%;margin-top:50px'></div> <div> </div></span>","null","stimulus","{""index"":13,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","113","384490","0.0-113.0","582474a8aac01b0001e45ef9","3313","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":14,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3313","3313","true","red22.jpg","21","exp","400","red","20","[19,21,22,22,22,22,22,26,27,28,28,28,29,29,30,30,34,35,38,38]","29","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","35","red","",""
"html-keyboard-response","114","385001","0.0-114.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","115","386518","0.0-115.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:43px'></div> <div class='red' style='background-position:2000% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":14,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","116","389553","0.0-116.0","582474a8aac01b0001e45ef9","3032","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":15,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3032","3032","true","red15.jpg","14","exp","500","red","2","[12,20]","16","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","36","red","",""
"html-keyboard-response","117","390154","0.0-117.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","118","391666","0.0-118.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:2400% 0%;margin-top:25px'></div> <div class='red' style='background-position:1700% 0%;margin-top:38px'></div> <div class='red' style='background-position:2300% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:28px'></div> <div class='red' style='background-position:3300% 0%;margin-top:23px'></div> <div class='red' style='background-position:1400% 0%;margin-top:23px'></div> <div class='red' style='background-position:3300% 0%;margin-top:40px'></div> <div class='red' style='background-position:2900% 0%;margin-top:34px'></div> <div class='red' style='background-position:2500% 0%;margin-top:38px'></div> <div class='red' style='background-position:1700% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:23px'></div> <div class='red' style='background-position:2500% 0%;margin-top:22px'></div> <div class='red' style='background-position:2400% 0%;margin-top:29px'></div> <div class='red' style='background-position:2200% 0%;margin-top:49px'></div> <div class='red' style='background-position:1700% 0%;margin-top:34px'></div> <div class='red' style='background-position:1700% 0%;margin-top:34px'></div> <div class='red' style='background-position:2300% 0%;margin-top:33px'></div> <div class='red' style='background-position:2100% 0%;margin-top:27px'></div> <div class='red' style='background-position:1700% 0%;margin-top:24px'></div></span>","null","stimulus","{""index"":15,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","119","393737","0.0-119.0","582474a8aac01b0001e45ef9","2070","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":16,""type"":""experimental"",""array_length"":20,""meanVal"":24,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2070","2070","true","red21.jpg","20","exp","600","red","20","[14,16,17,17,17,17,17,21,22,23,23,23,24,24,25,25,29,30,33,33]","24","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","37","red","",""
"html-keyboard-response","120","394348","0.0-120.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","121","395855","0.0-121.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:1500% 0%;margin-top:43px'></div> <div class='red' style='background-position:1000% 0%;margin-top:33px'></div> <div class='red' style='background-position:1600% 0%;margin-top:50px'></div> <div class='red' style='background-position:1000% 0%;margin-top:43px'></div> <div class='red' style='background-position:900% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:25px'></div> <div class='red' style='background-position:1000% 0%;margin-top:28px'></div> <div class='red' style='background-position:1000% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:42px'></div> <div class='red' style='background-position:1700% 0%;margin-top:26px'></div> <div class='red' style='background-position:2200% 0%;margin-top:24px'></div> <div class='red' style='background-position:1800% 0%;margin-top:41px'></div> <div class='red' style='background-position:1800% 0%;margin-top:24px'></div> <div class='red' style='background-position:1700% 0%;margin-top:42px'></div> <div class='red' style='background-position:700% 0%;margin-top:47px'></div> <div class='red' style='background-position:2300% 0%;margin-top:26px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:27px'></div> <div class='red' style='background-position:1000% 0%;margin-top:22px'></div> <div class='red' style='background-position:1600% 0%;margin-top:20px'></div> <div class='red' style='background-position:2600% 0%;margin-top:41px'></div></span>","null","stimulus","{""index"":16,""type"":""experimental"",""array_length"":20,""meanVal"":24,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","122","397649","0.0-122.0","582474a8aac01b0001e45ef9","1792","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":17,""type"":""experimental"",""array_length"":20,""meanVal"":17,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1792","1792","true","red12.jpg","11","exp","600","red","20","[7,9,10,10,10,10,10,14,15,16,16,16,17,17,18,18,22,23,26,26]","17","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","38","red","",""
"html-keyboard-response","123","398253","0.0-123.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","124","399763","0.0-124.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:49px'></div> <div class='red' style='background-position:2100% 0%;margin-top:23px'></div> <div class='red' style='background-position:3200% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:41px'></div> <div class='red' style='background-position:1400% 0%;margin-top:26px'></div> <div class='red' style='background-position:1500% 0%;margin-top:26px'></div> <div class='red' style='background-position:1800% 0%;margin-top:36px'></div> <div class='red' style='background-position:2900% 0%;margin-top:33px'></div> <div class='red' style='background-position:2200% 0%;margin-top:24px'></div></span>","null","stimulus","{""index"":17,""type"":""experimental"",""array_length"":20,""meanVal"":17,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","125","402522","0.0-125.0","582474a8aac01b0001e45ef9","2757","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":18,""type"":""experimental"",""array_length"":10,""meanVal"":23,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2757","2757","true","red21.jpg","20","exp","600","red","10","[14,18,15,21,22,25,26,29,30,32]","23","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","39","red","",""
"html-keyboard-response","126","402923","0.0-126.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","127","404430","0.0-127.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:2400% 0%;margin-top:29px'></div> <div class='red' style='background-position:4000% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:44px'></div> <div class='red' style='background-position:2400% 0%;margin-top:50px'></div> <div class='red' style='background-position:2100% 0%;margin-top:28px'></div> <div class='red' style='background-position:3000% 0%;margin-top:25px'></div> <div class='red' style='background-position:2900% 0%;margin-top:25px'></div> <div class='red' style='background-position:2400% 0%;margin-top:41px'></div> <div class='red' style='background-position:3000% 0%;margin-top:37px'></div> <div class='red' style='background-position:2400% 0%;margin-top:47px'></div> <div class='red' style='background-position:2300% 0%;margin-top:40px'></div> <div class='red' style='background-position:3700% 0%;margin-top:25px'></div> <div class='red' style='background-position:3100% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:45px'></div> <div class='red' style='background-position:3200% 0%;margin-top:28px'></div> <div class='red' style='background-position:3000% 0%;margin-top:46px'></div> <div class='red' style='background-position:2800% 0%;margin-top:39px'></div> <div class='red' style='background-position:3200% 0%;margin-top:24px'></div> <div class='red' style='background-position:3100% 0%;margin-top:47px'></div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:34px'></div></span>","null","stimulus","{""index"":18,""type"":""experimental"",""array_length"":10,""meanVal"":23,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","128","406546","0.0-128.0","582474a8aac01b0001e45ef9","2113","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":19,""type"":""experimental"",""array_length"":20,""meanVal"":31,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2113","2113","true","red30.jpg","29","exp","400","red","20","[21,23,24,24,24,24,24,28,29,30,30,30,31,31,32,32,36,37,40,40]","31","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","40","red","",""
"html-keyboard-response","129","406948","0.0-129.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","130","408453","0.0-130.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":19,""type"":""experimental"",""array_length"":20,""meanVal"":31,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","131","412482","0.0-131.0","582474a8aac01b0001e45ef9","4026","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":20,""type"":""experimental"",""array_length"":2,""meanVal"":31,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4026","4026","true","red27.jpg","26","exp","400","red","2","[27,35]","31","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","41","red","",""
"html-keyboard-response","132","412887","0.0-132.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","133","414403","0.0-133.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3100% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:33px'></div> <div class='red' style='background-position:2400% 0%;margin-top:27px'></div> <div class='red' style='background-position:4100% 0%;margin-top:25px'></div> <div class='red' style='background-position:3000% 0%;margin-top:27px'></div> <div class='red' style='background-position:3500% 0%;margin-top:28px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":20,""type"":""experimental"",""array_length"":2,""meanVal"":31,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","134","418098","0.0-134.0","582474a8aac01b0001e45ef9","3694","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":21,""type"":""experimental"",""array_length"":10,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3694","3694","true","red24.jpg","23","exp","400","red","10","[23,27,24,30,31,34,35,38,39,41]","32","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","42","red","",""
"html-keyboard-response","135","418598","0.0-135.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","136","420112","0.0-136.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:1900% 0%;margin-top:42px'></div> <div class='red' style='background-position:1900% 0%;margin-top:45px'></div> <div class='red' style='background-position:3200% 0%;margin-top:39px'></div> <div class='red' style='background-position:2600% 0%;margin-top:47px'></div> <div class='red' style='background-position:2500% 0%;margin-top:29px'></div> <div class='red' style='background-position:2400% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:26px'></div> <div class='red' style='background-position:2600% 0%;margin-top:20px'></div> <div class='red' style='background-position:3100% 0%;margin-top:28px'></div> <div class='red' style='background-position:2500% 0%;margin-top:39px'></div> <div class='red' style='background-position:2700% 0%;margin-top:21px'></div> <div class='red' style='background-position:3500% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:32px'></div> <div class='red' style='background-position:2500% 0%;margin-top:49px'></div> <div class='red' style='background-position:1900% 0%;margin-top:42px'></div> <div class='red' style='background-position:2300% 0%;margin-top:35px'></div> <div class='red' style='background-position:1600% 0%;margin-top:34px'></div> <div class='red' style='background-position:3500% 0%;margin-top:22px'></div> <div class='red' style='background-position:1900% 0%;margin-top:33px'></div> <div class='red' style='background-position:2700% 0%;margin-top:29px'></div></span>","null","stimulus","{""index"":21,""type"":""experimental"",""array_length"":10,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","137","423289","0.0-137.0","582474a8aac01b0001e45ef9","3175","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":22,""type"":""experimental"",""array_length"":20,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3175","3175","true","red23.jpg","22","exp","500","red","20","[16,18,19,19,19,19,19,23,24,25,25,25,26,26,27,27,31,32,35,35]","26","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","43","red","",""
"html-keyboard-response","138","423794","0.0-138.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","139","425305","0.0-139.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:3200% 0%;margin-top:25px'></div> <div class='red' style='background-position:2700% 0%;margin-top:50px'></div> <div class='red' style='background-position:3500% 0%;margin-top:30px'></div> <div class='red' style='background-position:2700% 0%;margin-top:46px'></div> <div class='red' style='background-position:2700% 0%;margin-top:36px'></div> <div class='red' style='background-position:3400% 0%;margin-top:41px'></div> <div class='red' style='background-position:3400% 0%;margin-top:23px'></div> <div class='red' style='background-position:3300% 0%;margin-top:41px'></div> <div class='red' style='background-position:3300% 0%;margin-top:32px'></div> <div class='red' style='background-position:2600% 0%;margin-top:22px'></div> <div class='red' style='background-position:3500% 0%;margin-top:45px'></div> <div class='red' style='background-position:3100% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:47px'></div> <div class='red' style='background-position:2400% 0%;margin-top:28px'></div> <div class='red' style='background-position:4300% 0%;margin-top:23px'></div> <div class='red' style='background-position:2700% 0%;margin-top:50px'></div> <div class='red' style='background-position:2700% 0%;margin-top:29px'></div> <div class='red' style='background-position:3300% 0%;margin-top:38px'></div></span>","null","stimulus","{""index"":22,""type"":""experimental"",""array_length"":20,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","140","428137","0.0-140.0","582474a8aac01b0001e45ef9","2830","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":23,""type"":""experimental"",""array_length"":20,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2830","2830","true","red23.jpg","22","exp","500","red","20","[24,26,27,27,27,27,27,31,32,33,33,33,34,34,35,35,39,40,43,43]","34","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","44","red","",""
"html-keyboard-response","141","428638","0.0-141.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","142","430146","0.0-142.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:1700% 0%;margin-top:25px'></div> <div class='red' style='background-position:2200% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:22px'></div> <div class='red' style='background-position:1500% 0%;margin-top:27px'></div> <div class='red' style='background-position:1600% 0%;margin-top:44px'></div> <div class='red' style='background-position:1000% 0%;margin-top:40px'></div> <div class='red' style='background-position:1000% 0%;margin-top:41px'></div> <div class='red' style='background-position:700% 0%;margin-top:37px'></div> <div class='red' style='background-position:2300% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:48px'></div> <div class='red' style='background-position:1700% 0%;margin-top:30px'></div> <div class='red' style='background-position:1000% 0%;margin-top:37px'></div> <div class='red' style='background-position:2600% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:34px'></div> <div class='red' style='background-position:1600% 0%;margin-top:42px'></div> <div class='red' style='background-position:2600% 0%;margin-top:37px'></div> <div class='red' style='background-position:1600% 0%;margin-top:23px'></div> <div class='red' style='background-position:1800% 0%;margin-top:49px'></div> <div class='red' style='background-position:1800% 0%;margin-top:36px'></div> <div class='red' style='background-position:900% 0%;margin-top:36px'></div></span>","null","stimulus","{""index"":23,""type"":""experimental"",""array_length"":20,""meanVal"":34,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","143","433010","0.0-143.0","582474a8aac01b0001e45ef9","2862","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":24,""type"":""experimental"",""array_length"":20,""meanVal"":17,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2862","2862","true","red18.jpg","17","exp","500","red","20","[7,9,10,10,10,10,10,14,15,16,16,16,17,17,18,18,22,23,26,26]","17","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","45","red","",""
"html-keyboard-response","144","433511","0.0-144.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","145","435015","0.0-145.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:41px'></div> <div class='red' style='background-position:2000% 0%;margin-top:21px'></div> <div> </div></span>","null","stimulus","{""index"":24,""type"":""experimental"",""array_length"":20,""meanVal"":17,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","146","437306","0.0-146.0","582474a8aac01b0001e45ef9","2288","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":25,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2288","2288","true","red12.jpg","11","exp","500","red","2","[12,20]","16","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","46","red","",""
"html-keyboard-response","147","437919","0.0-147.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","148","439429","0.0-148.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:2200% 0%;margin-top:31px'></div> <div class='red' style='background-position:2200% 0%;margin-top:47px'></div> <div class='red' style='background-position:3400% 0%;margin-top:44px'></div> <div class='red' style='background-position:3000% 0%;margin-top:38px'></div> <div class='red' style='background-position:2700% 0%;margin-top:21px'></div> <div class='red' style='background-position:2100% 0%;margin-top:40px'></div> <div class='red' style='background-position:1900% 0%;margin-top:41px'></div> <div class='red' style='background-position:2900% 0%;margin-top:32px'></div> <div class='red' style='background-position:2800% 0%;margin-top:40px'></div> <div class='red' style='background-position:2200% 0%;margin-top:23px'></div> <div class='red' style='background-position:3800% 0%;margin-top:42px'></div> <div class='red' style='background-position:2800% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:35px'></div> <div class='red' style='background-position:3500% 0%;margin-top:30px'></div> <div class='red' style='background-position:2800% 0%;margin-top:30px'></div> <div class='red' style='background-position:2600% 0%;margin-top:22px'></div> <div class='red' style='background-position:2200% 0%;margin-top:48px'></div> <div class='red' style='background-position:3000% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:50px'></div> <div class='red' style='background-position:3800% 0%;margin-top:43px'></div></span>","null","stimulus","{""index"":25,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","149","441930","0.0-149.0","582474a8aac01b0001e45ef9","2499","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":26,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2499","2499","true","red20.jpg","19","exp","600","red","20","[19,21,22,22,22,22,22,26,27,28,28,28,29,29,30,30,34,35,38,38]","29","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","47","red","",""
"html-keyboard-response","150","442336","0.0-150.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","151","443839","0.0-151.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:35px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":26,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","152","445658","0.0-152.0","582474a8aac01b0001e45ef9","1816","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":27,""type"":""experimental"",""array_length"":2,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1816","1816","true","red15.jpg","14","exp","400","red","2","[26,34]","30","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","48","red","",""
"html-keyboard-response","153","446165","0.0-153.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","154","447678","0.0-154.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:2400% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:49px'></div> <div class='red' style='background-position:1300% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:28px'></div> <div class='red' style='background-position:1600% 0%;margin-top:35px'></div> <div class='red' style='background-position:2300% 0%;margin-top:28px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:23px'></div> <div class='red' style='background-position:1900% 0%;margin-top:27px'></div> <div class='red' style='background-position:2700% 0%;margin-top:40px'></div></span>","null","stimulus","{""index"":27,""type"":""experimental"",""array_length"":2,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","155","449514","0.0-155.0","582474a8aac01b0001e45ef9","1834","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":28,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1834","1834","true","red16.jpg","15","exp","500","red","10","[12,16,13,19,20,23,24,27,28,30]","21","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","49","red","",""
"html-keyboard-response","156","449918","0.0-156.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","157","451419","0.0-157.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:37px'></div> <div class='red' style='background-position:2600% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:46px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:27px'></div> <div class='red' style='background-position:1900% 0%;margin-top:37px'></div> <div class='red' style='background-position:2900% 0%;margin-top:28px'></div> <div class='red' style='background-position:3600% 0%;margin-top:35px'></div> <div class='red' style='background-position:2500% 0%;margin-top:45px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:26px'></div></span>","null","stimulus","{""index"":28,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","158","452986","0.0-158.0","582474a8aac01b0001e45ef9","1565","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":29,""type"":""experimental"",""array_length"":10,""meanVal"":27,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1565","1565","true","red21.jpg","20","exp","400","red","10","[18,22,19,25,26,29,30,33,34,36]","27","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","50","red","",""
"html-keyboard-response","159","453387","0.0-159.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","160","454903","0.0-160.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:2000% 0%;margin-top:45px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:21px'></div> <div class='red' style='background-position:1300% 0%;margin-top:27px'></div> <div class='red' style='background-position:1300% 0%;margin-top:43px'></div> <div class='red' style='background-position:1900% 0%;margin-top:47px'></div> <div class='red' style='background-position:1200% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:42px'></div> <div class='red' style='background-position:1800% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:43px'></div> <div class='red' style='background-position:2600% 0%;margin-top:23px'></div> <div class='red' style='background-position:2900% 0%;margin-top:43px'></div> <div class='red' style='background-position:1700% 0%;margin-top:46px'></div> <div class='red' style='background-position:2000% 0%;margin-top:24px'></div> <div class='red' style='background-position:2900% 0%;margin-top:31px'></div> <div class='red' style='background-position:1000% 0%;margin-top:44px'></div> <div class='red' style='background-position:1900% 0%;margin-top:35px'></div> <div class='red' style='background-position:2500% 0%;margin-top:32px'></div> <div class='red' style='background-position:1900% 0%;margin-top:32px'></div> <div class='red' style='background-position:2100% 0%;margin-top:34px'></div> <div class='red' style='background-position:1300% 0%;margin-top:34px'></div></span>","null","stimulus","{""index"":29,""type"":""experimental"",""array_length"":10,""meanVal"":27,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","161","456418","0.0-161.0","582474a8aac01b0001e45ef9","1513","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":30,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1513","1513","true","red23.jpg","22","exp","400","red","20","[10,12,13,13,13,13,13,17,18,19,19,19,20,20,21,21,25,26,29,29]","20","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","51","red","",""
"html-keyboard-response","162","456819","0.0-162.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","163","458322","0.0-163.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:49px'></div> <div class='red' style='background-position:2000% 0%;margin-top:35px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:34px'></div> <div class='red' style='background-position:2800% 0%;margin-top:29px'></div> <div class='red' style='background-position:1600% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:42px'></div> <div class='red' style='background-position:3100% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:44px'></div> <div class='red' style='background-position:3200% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:36px'></div></span>","null","stimulus","{""index"":30,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","164","460642","0.0-164.0","582474a8aac01b0001e45ef9","2316","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":31,""type"":""experimental"",""array_length"":10,""meanVal"":25,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2316","2316","true","red16.jpg","15","exp","400","red","10","[16,20,17,23,24,27,28,31,32,34]","25","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","52","red","",""
"html-keyboard-response","165","461248","0.0-165.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","166","462763","0.0-166.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:25px'></div> <div class='red' style='background-position:2200% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":31,""type"":""experimental"",""array_length"":10,""meanVal"":25,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","167","464353","0.0-167.0","582474a8aac01b0001e45ef9","1587","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":32,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1587","1587","true","red22.jpg","21","exp","600","red","2","[22,30]","26","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","53","red","",""
"html-keyboard-response","168","464854","0.0-168.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","169","466370","0.0-169.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:3100% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:34px'></div> <div class='red' style='background-position:1500% 0%;margin-top:20px'></div> <div class='red' style='background-position:2300% 0%;margin-top:42px'></div> <div class='red' style='background-position:1500% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:48px'></div> <div class='red' style='background-position:1200% 0%;margin-top:21px'></div> <div class='red' style='background-position:1400% 0%;margin-top:33px'></div> <div class='red' style='background-position:2300% 0%;margin-top:46px'></div> <div class='red' style='background-position:2800% 0%;margin-top:38px'></div> <div class='red' style='background-position:2100% 0%;margin-top:40px'></div> <div class='red' style='background-position:1900% 0%;margin-top:37px'></div> <div class='red' style='background-position:2100% 0%;margin-top:38px'></div> <div class='red' style='background-position:2700% 0%;margin-top:25px'></div> <div class='red' style='background-position:3100% 0%;margin-top:22px'></div> <div class='red' style='background-position:2200% 0%;margin-top:20px'></div> <div class='red' style='background-position:1500% 0%;margin-top:41px'></div> <div class='red' style='background-position:2200% 0%;margin-top:24px'></div> <div class='red' style='background-position:1500% 0%;margin-top:48px'></div> <div class='red' style='background-position:2100% 0%;margin-top:43px'></div> <div> </div></span>","null","stimulus","{""index"":32,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","170","468138","0.0-170.0","582474a8aac01b0001e45ef9","1764","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":33,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1764","1764","true","red18.jpg","17","exp","500","red","20","[12,14,15,15,15,15,15,19,20,21,21,21,22,22,23,23,27,28,31,31]","22","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","54","red","",""
"html-keyboard-response","171","468749","0.0-171.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","172","470257","0.0-172.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:1700% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:45px'></div> <div class='red' style='background-position:1100% 0%;margin-top:33px'></div> <div class='red' style='background-position:2600% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:41px'></div> <div class='red' style='background-position:1800% 0%;margin-top:43px'></div> <div class='red' style='background-position:2800% 0%;margin-top:24px'></div></span>","null","stimulus","{""index"":33,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","173","473257","0.0-173.0","582474a8aac01b0001e45ef9","2998","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":34,""type"":""experimental"",""array_length"":10,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2998","2998","true","red17.jpg","16","exp","600","red","10","[10,14,11,17,18,21,22,25,26,28]","19","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","55","red","",""
"html-keyboard-response","174","473765","0.0-174.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","175","475273","0.0-175.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":34,""type"":""experimental"",""array_length"":10,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","176","478426","0.0-176.0","582474a8aac01b0001e45ef9","3151","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":35,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3151","3151","true","red12.jpg","11","exp","500","red","2","[14,22]","18","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","56","red","",""
"html-keyboard-response","177","479042","0.0-177.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","178","480545","0.0-178.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:1900% 0%;margin-top:36px'></div> <div class='red' style='background-position:3500% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:34px'></div> <div class='red' style='background-position:2200% 0%;margin-top:24px'></div> <div class='red' style='background-position:2800% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:42px'></div> <div class='red' style='background-position:3000% 0%;margin-top:23px'></div> <div class='red' style='background-position:3800% 0%;margin-top:50px'></div> <div class='red' style='background-position:2800% 0%;margin-top:26px'></div> <div class='red' style='background-position:2200% 0%;margin-top:31px'></div> <div class='red' style='background-position:3800% 0%;margin-top:25px'></div> <div class='red' style='background-position:2600% 0%;margin-top:47px'></div> <div class='red' style='background-position:2800% 0%;margin-top:32px'></div> <div class='red' style='background-position:2200% 0%;margin-top:26px'></div> <div class='red' style='background-position:3400% 0%;margin-top:40px'></div> <div class='red' style='background-position:2900% 0%;margin-top:35px'></div> <div class='red' style='background-position:2200% 0%;margin-top:38px'></div> <div class='red' style='background-position:2200% 0%;margin-top:48px'></div> <div class='red' style='background-position:2900% 0%;margin-top:41px'></div></span>","null","stimulus","{""index"":35,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","179","482186","0.0-179.0","582474a8aac01b0001e45ef9","1640","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":36,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1640","1640","true","red22.jpg","21","exp","600","red","20","[19,21,22,22,22,22,22,26,27,28,28,28,29,29,30,30,34,35,38,38]","29","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","57","red","",""
"html-keyboard-response","180","482794","0.0-180.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","181","484310","0.0-181.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3100% 0%;margin-top:50px'></div> <div class='red' style='background-position:1600% 0%;margin-top:48px'></div> <div class='red' style='background-position:1900% 0%;margin-top:31px'></div> <div class='red' style='background-position:2700% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:37px'></div> <div class='red' style='background-position:1500% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:35px'></div> <div> </div></span>","null","stimulus","{""index"":36,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","182","486370","0.0-182.0","582474a8aac01b0001e45ef9","2059","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":37,""type"":""experimental"",""array_length"":10,""meanVal"":24,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2059","2059","true","red19.jpg","18","exp","600","red","10","[15,19,16,22,23,26,27,30,31,33]","24","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","58","red","",""
"html-keyboard-response","183","486780","0.0-183.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","184","488290","0.0-184.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:2500% 0%;margin-top:30px'></div> <div class='red' style='background-position:3200% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:28px'></div> <div class='red' style='background-position:3700% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:41px'></div> <div class='red' style='background-position:2200% 0%;margin-top:49px'></div> <div class='red' style='background-position:2900% 0%;margin-top:48px'></div> <div class='red' style='background-position:2100% 0%;margin-top:42px'></div></span>","null","stimulus","{""index"":37,""type"":""experimental"",""array_length"":10,""meanVal"":24,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","185","490794","0.0-185.0","582474a8aac01b0001e45ef9","2500","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":38,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2500","2500","true","red28.jpg","27","exp","400","red","10","[21,25,22,28,29,32,33,36,37,39]","30","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","59","red","",""
"html-keyboard-response","186","491394","0.0-186.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","187","492902","0.0-187.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:22px'></div> <div> </div></span>","null","stimulus","{""index"":38,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","188","495202","0.0-188.0","582474a8aac01b0001e45ef9","2299","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":39,""type"":""experimental"",""array_length"":2,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2299","2299","true","red21.jpg","20","exp","600","red","2","[26,34]","30","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","60","red","",""
"html-keyboard-response","189","495603","0.0-189.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","190","497114","0.0-190.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:2800% 0%;margin-top:36px'></div> <div class='red' style='background-position:2700% 0%;margin-top:50px'></div> <div class='red' style='background-position:2100% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:41px'></div> <div class='red' style='background-position:2900% 0%;margin-top:29px'></div> <div class='red' style='background-position:2900% 0%;margin-top:43px'></div> <div class='red' style='background-position:2100% 0%;margin-top:28px'></div> <div class='red' style='background-position:2100% 0%;margin-top:34px'></div> <div class='red' style='background-position:2000% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:23px'></div> <div class='red' style='background-position:2700% 0%;margin-top:44px'></div> <div class='red' style='background-position:2600% 0%;margin-top:21px'></div> <div class='red' style='background-position:3400% 0%;margin-top:41px'></div> <div class='red' style='background-position:1800% 0%;margin-top:34px'></div> <div class='red' style='background-position:2700% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:35px'></div> <div class='red' style='background-position:2500% 0%;margin-top:47px'></div> <div class='red' style='background-position:2800% 0%;margin-top:43px'></div> <div class='red' style='background-position:3700% 0%;margin-top:45px'></div> <div class='red' style='background-position:2100% 0%;margin-top:21px'></div></span>","null","stimulus","{""index"":39,""type"":""experimental"",""array_length"":2,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","191","499314","0.0-191.0","582474a8aac01b0001e45ef9","2196","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":40,""type"":""experimental"",""array_length"":20,""meanVal"":28,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2196","2196","true","red19.jpg","18","exp","400","red","20","[18,20,21,21,21,21,21,25,26,27,27,27,28,28,29,29,33,34,37,37]","28","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","61","red","",""
"html-keyboard-response","192","499918","0.0-192.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","193","501435","0.0-193.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:1500% 0%;margin-top:33px'></div> <div class='red' style='background-position:1500% 0%;margin-top:23px'></div> <div class='red' style='background-position:2700% 0%;margin-top:50px'></div> <div class='red' style='background-position:3100% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:39px'></div> <div class='red' style='background-position:1900% 0%;margin-top:35px'></div> <div class='red' style='background-position:2300% 0%;margin-top:41px'></div> <div class='red' style='background-position:1200% 0%;margin-top:42px'></div> <div class='red' style='background-position:2200% 0%;margin-top:35px'></div> <div class='red' style='background-position:2100% 0%;margin-top:49px'></div> <div class='red' style='background-position:2100% 0%;margin-top:30px'></div> <div class='red' style='background-position:1500% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:41px'></div> <div class='red' style='background-position:1400% 0%;margin-top:38px'></div> <div class='red' style='background-position:3100% 0%;margin-top:45px'></div> <div class='red' style='background-position:2200% 0%;margin-top:36px'></div> <div class='red' style='background-position:2300% 0%;margin-top:38px'></div> <div class='red' style='background-position:2800% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:26px'></div> <div class='red' style='background-position:2000% 0%;margin-top:38px'></div></span>","null","stimulus","{""index"":40,""type"":""experimental"",""array_length"":20,""meanVal"":28,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","194","503778","0.0-194.0","582474a8aac01b0001e45ef9","2340","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":41,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2340","2340","true","red21.jpg","20","exp","600","red","20","[12,14,15,15,15,15,15,19,20,21,21,21,22,22,23,23,27,28,31,31]","22","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","62","red","",""
"html-keyboard-response","195","504291","0.0-195.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","196","505793","0.0-196.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:34px'></div></span>","null","stimulus","{""index"":41,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","197","507778","0.0-197.0","582474a8aac01b0001e45ef9","1983","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":42,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1983","1983","true","red26.jpg","25","exp","500","red","2","[32,40]","36","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","63","red","",""
"html-keyboard-response","198","508185","0.0-198.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","199","509687","0.0-199.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:1600% 0%;margin-top:37px'></div> <div class='red' style='background-position:2000% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:35px'></div> <div class='red' style='background-position:900% 0%;margin-top:29px'></div> <div class='red' style='background-position:1200% 0%;margin-top:29px'></div> <div class='red' style='background-position:500% 0%;margin-top:25px'></div> <div class='red' style='background-position:1700% 0%;margin-top:43px'></div></span>","null","stimulus","{""index"":42,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","200","512169","0.0-200.0","582474a8aac01b0001e45ef9","2480","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":43,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2480","2480","true","red20.jpg","19","exp","400","red","10","[5,9,6,12,13,16,17,20,21,23]","14","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","64","red","",""
"html-keyboard-response","201","512571","0.0-201.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","202","514080","0.0-202.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:49px'></div> <div class='red' style='background-position:3200% 0%;margin-top:23px'></div> <div class='red' style='background-position:2900% 0%;margin-top:48px'></div> <div class='red' style='background-position:2200% 0%;margin-top:45px'></div> <div class='red' style='background-position:2500% 0%;margin-top:44px'></div> <div class='red' style='background-position:2800% 0%;margin-top:46px'></div> <div class='red' style='background-position:3900% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:22px'></div></span>","null","stimulus","{""index"":43,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","203","516754","0.0-203.0","582474a8aac01b0001e45ef9","2672","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":44,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2672","2672","true","red19.jpg","18","exp","400","red","10","[21,25,22,28,29,32,33,36,37,39]","30","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","65","red","",""
"html-keyboard-response","204","517169","0.0-204.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","205","518677","0.0-205.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:29px'></div> <div class='red' style='background-position:2800% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:4500% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:35px'></div> <div class='red' style='background-position:4200% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:24px'></div> <div class='red' style='background-position:3500% 0%;margin-top:50px'></div> <div class='red' style='background-position:3400% 0%;margin-top:45px'></div> <div class='red' style='background-position:3900% 0%;margin-top:46px'></div> <div> </div></span>","null","stimulus","{""index"":44,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","206","520497","0.0-206.0","582474a8aac01b0001e45ef9","1820","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":45,""type"":""experimental"",""array_length"":10,""meanVal"":36,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1820","1820","true","red30.jpg","29","exp","400","red","10","[27,31,28,34,35,38,39,42,43,45]","36","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","66","red","",""
"html-keyboard-response","207","521109","0.0-207.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","208","522618","0.0-208.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:3500% 0%;margin-top:45px'></div> <div class='red' style='background-position:1800% 0%;margin-top:34px'></div> <div class='red' style='background-position:2600% 0%;margin-top:30px'></div> <div class='red' style='background-position:1900% 0%;margin-top:27px'></div> <div class='red' style='background-position:3100% 0%;margin-top:28px'></div> <div class='red' style='background-position:2500% 0%;margin-top:49px'></div> <div class='red' style='background-position:2500% 0%;margin-top:42px'></div> <div class='red' style='background-position:1900% 0%;margin-top:22px'></div> <div class='red' style='background-position:3200% 0%;margin-top:25px'></div> <div class='red' style='background-position:2600% 0%;margin-top:20px'></div> <div class='red' style='background-position:2700% 0%;margin-top:30px'></div> <div class='red' style='background-position:1900% 0%;margin-top:23px'></div> <div class='red' style='background-position:1900% 0%;margin-top:39px'></div> <div class='red' style='background-position:3500% 0%;margin-top:43px'></div> <div class='red' style='background-position:1900% 0%;margin-top:43px'></div> <div class='red' style='background-position:2400% 0%;margin-top:29px'></div> <div class='red' style='background-position:1600% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:27px'></div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:28px'></div></span>","null","stimulus","{""index"":45,""type"":""experimental"",""array_length"":10,""meanVal"":36,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","209","525234","0.0-209.0","582474a8aac01b0001e45ef9","2614","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":46,""type"":""experimental"",""array_length"":20,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2614","2614","true","red27.jpg","26","exp","600","red","20","[16,18,19,19,19,19,19,23,24,25,25,25,26,26,27,27,31,32,35,35]","26","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","67","red","",""
"html-keyboard-response","210","525735","0.0-210.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","211","527243","0.0-211.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='red' style='background-position:2000% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:47px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:20px'></div> <div class='red' style='background-position:3000% 0%;margin-top:30px'></div> <div class='red' style='background-position:2300% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:33px'></div> <div class='red' style='background-position:2400% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:22px'></div> <div class='red' style='background-position:2800% 0%;margin-top:42px'></div></span>","null","stimulus","{""index"":46,""type"":""experimental"",""array_length"":20,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","212","530418","0.0-212.0","582474a8aac01b0001e45ef9","3174","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":47,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3174","3174","true","red25.jpg","24","exp","500","red","10","[12,16,13,19,20,23,24,27,28,30]","21","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","68","red","",""
"survey-text","213","538458","0.0-213.0-0.0","582474a8aac01b0001e45ef9","8038.799999952316","","","{""Q0"":""sky""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","214","538860","0.0-214.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","215","540362","0.0-215.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:1700% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:24px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:32px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:25px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:36px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:23px'></div></span>","null","stimulus","{""index"":47,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","216","542250","0.0-216.0","582474a8aac01b0001e45ef9","1885","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":48,""type"":""experimental"",""array_length"":20,""meanVal"":24,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1885","1885","true","blue18.jpg","17","exp","400","blue","20","[14,16,17,17,17,17,17,21,22,23,23,23,24,24,25,25,29,30,33,33]","24","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","69","blue","",""
"html-keyboard-response","217","542850","0.0-217.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","218","544354","0.0-218.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:2400% 0%;margin-top:21px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:42px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:36px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:35px'></div> <div class='blue' style='background-position:4300% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:47px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:49px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:4300% 0%;margin-top:20px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:38px'></div></span>","null","stimulus","{""index"":48,""type"":""experimental"",""array_length"":20,""meanVal"":24,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","219","546402","0.0-219.0","582474a8aac01b0001e45ef9","2047","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":49,""type"":""experimental"",""array_length"":20,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2047","2047","true","blue28.jpg","27","exp","600","blue","20","[24,26,27,27,27,27,27,31,32,33,33,33,34,34,35,35,39,40,43,43]","34","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","70","blue","",""
"html-keyboard-response","220","547005","0.0-220.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","221","548511","0.0-221.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":49,""type"":""experimental"",""array_length"":20,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","222","550050","0.0-222.0","582474a8aac01b0001e45ef9","1537","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":50,""type"":""experimental"",""array_length"":2,""meanVal"":19,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1537","1537","true","blue19.jpg","18","exp","600","blue","2","[15,23]","19","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","71","blue","",""
"html-keyboard-response","223","550451","0.0-223.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","224","551968","0.0-224.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":50,""type"":""experimental"",""array_length"":2,""meanVal"":19,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","225","553610","0.0-225.0","582474a8aac01b0001e45ef9","1639","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":51,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1639","1639","true","blue14.jpg","13","exp","400","blue","2","[14,22]","18","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","72","blue","",""
"html-keyboard-response","226","554116","0.0-226.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","227","555632","0.0-227.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:26px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:43px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:38px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:800% 0%;margin-top:38px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:24px'></div> <div> </div></span>","null","stimulus","{""index"":51,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","228","557042","0.0-228.0","582474a8aac01b0001e45ef9","1407","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":52,""type"":""experimental"",""array_length"":10,""meanVal"":17,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1407","1407","true","blue19.jpg","18","exp","500","blue","10","[8,12,9,15,16,19,20,23,24,26]","17","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","73","blue","",""
"html-keyboard-response","229","557454","0.0-229.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","230","558967","0.0-230.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:1900% 0%;margin-top:41px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:43px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:1200% 0%;margin-top:36px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:27px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:30px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:39px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:32px'></div></span>","null","stimulus","{""index"":52,""type"":""experimental"",""array_length"":10,""meanVal"":17,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","231","561689","0.0-231.0","582474a8aac01b0001e45ef9","2721","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":53,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2721","2721","true","blue17.jpg","16","exp","400","blue","20","[12,14,15,15,15,15,15,19,20,21,21,21,22,22,23,23,27,28,31,31]","22","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","74","blue","",""
"html-keyboard-response","232","562291","0.0-232.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","233","563798","0.0-233.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:2600% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:48px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:37px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:36px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:42px'></div></span>","null","stimulus","{""index"":53,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","234","565746","0.0-234.0","582474a8aac01b0001e45ef9","1946","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":54,""type"":""experimental"",""array_length"":20,""meanVal"":28,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1946","1946","true","blue22.jpg","21","exp","600","blue","20","[18,20,21,21,21,21,21,25,26,27,27,27,28,28,29,29,33,34,37,37]","28","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","75","blue","",""
"html-keyboard-response","235","566355","0.0-235.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","236","567870","0.0-236.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:2200% 0%;margin-top:21px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:33px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:25px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:48px'></div></span>","null","stimulus","{""index"":54,""type"":""experimental"",""array_length"":20,""meanVal"":28,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","237","569898","0.0-237.0","582474a8aac01b0001e45ef9","2027","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":55,""type"":""experimental"",""array_length"":10,""meanVal"":27,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2027","2027","true","blue24.jpg","23","exp","600","blue","10","[18,22,19,25,26,29,30,33,34,36]","27","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","76","blue","",""
"html-keyboard-response","238","570400","0.0-238.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","239","571901","0.0-239.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:900% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:37px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:43px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:900% 0%;margin-top:33px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:36px'></div> <div class='blue' style='background-position:900% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:46px'></div> <div class='blue' style='background-position:900% 0%;margin-top:26px'></div> <div class='blue' style='background-position:900% 0%;margin-top:43px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:22px'></div> <div class='blue' style='background-position:600% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:31px'></div> <div class='blue' style='background-position:800% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:46px'></div></span>","null","stimulus","{""index"":55,""type"":""experimental"",""array_length"":10,""meanVal"":27,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","240","573810","0.0-240.0","582474a8aac01b0001e45ef9","1907","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":56,""type"":""experimental"",""array_length"":20,""meanVal"":16,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1907","1907","true","blue21.jpg","20","exp","500","blue","20","[6,8,9,9,9,9,9,13,14,15,15,15,16,16,17,17,21,22,25,25]","16","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","77","blue","",""
"html-keyboard-response","241","574311","0.0-241.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","242","575821","0.0-242.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:50px'></div> <div> </div></span>","null","stimulus","{""index"":56,""type"":""experimental"",""array_length"":20,""meanVal"":16,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","243","577594","0.0-243.0","582474a8aac01b0001e45ef9","1771","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":57,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1771","1771","true","blue18.jpg","17","exp","500","blue","2","[22,30]","26","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","78","blue","",""
"html-keyboard-response","244","577994","0.0-244.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","245","579497","0.0-245.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:28px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:41px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":57,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","246","581746","0.0-246.0","582474a8aac01b0001e45ef9","2245","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":58,""type"":""experimental"",""array_length"":10,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2245","2245","true","blue19.jpg","18","exp","400","blue","10","[17,21,18,24,25,28,29,32,33,35]","26","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","79","blue","",""
"html-keyboard-response","247","582250","0.0-247.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","248","583759","0.0-248.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:20px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:46px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:34px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:46px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:39px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:40px'></div> <div class='blue' style='background-position:4200% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:30px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:30px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:50px'></div> <div class='blue' style='background-position:4200% 0%;margin-top:48px'></div></span>","null","stimulus","{""index"":58,""type"":""experimental"",""array_length"":10,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","249","585489","0.0-249.0","582474a8aac01b0001e45ef9","1729","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":59,""type"":""experimental"",""array_length"":20,""meanVal"":33,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1729","1729","true","blue27.jpg","26","exp","500","blue","20","[23,25,26,26,26,26,26,30,31,32,32,32,33,33,34,34,38,39,42,42]","33","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","80","blue","",""
"html-keyboard-response","250","586099","0.0-250.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","251","587615","0.0-251.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:4100% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:21px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:46px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:34px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:36px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:42px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":59,""type"":""experimental"",""array_length"":20,""meanVal"":33,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","252","589489","0.0-252.0","582474a8aac01b0001e45ef9","1872","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":60,""type"":""experimental"",""array_length"":10,""meanVal"":32,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1872","1872","true","blue28.jpg","27","exp","600","blue","10","[23,27,24,30,31,34,35,38,39,41]","32","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","81","blue","",""
"html-keyboard-response","253","590102","0.0-253.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","254","591613","0.0-254.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:2500% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:20px'></div> <div class='blue' style='background-position:900% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:37px'></div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:48px'></div> <div class='blue' style='background-position:900% 0%;margin-top:31px'></div> <div class='blue' style='background-position:800% 0%;margin-top:25px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:23px'></div> <div class='blue' style='background-position:600% 0%;margin-top:32px'></div> <div class='blue' style='background-position:900% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:32px'></div> <div class='blue' style='background-position:900% 0%;margin-top:45px'></div> <div class='blue' style='background-position:900% 0%;margin-top:29px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:24px'></div></span>","null","stimulus","{""index"":60,""type"":""experimental"",""array_length"":10,""meanVal"":32,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","255","596282","0.0-255.0","582474a8aac01b0001e45ef9","4667","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":61,""type"":""experimental"",""array_length"":20,""meanVal"":16,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4667","4667","true","blue23.jpg","22","exp","600","blue","20","[6,8,9,9,9,9,9,13,14,15,15,15,16,16,17,17,21,22,25,25]","16","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","82","blue","",""
"html-keyboard-response","256","596783","0.0-256.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","257","598291","0.0-257.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":61,""type"":""experimental"",""array_length"":20,""meanVal"":16,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","258","600220","0.0-258.0","582474a8aac01b0001e45ef9","1927","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":62,""type"":""experimental"",""array_length"":2,""meanVal"":23,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1927","1927","true","blue16.jpg","15","exp","500","blue","2","[19,27]","23","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","83","blue","",""
"html-keyboard-response","259","600721","0.0-259.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","260","602234","0.0-260.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:3400% 0%;margin-top:21px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:35px'></div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:45px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:50px'></div> <div> </div></span>","null","stimulus","{""index"":62,""type"":""experimental"",""array_length"":2,""meanVal"":23,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","261","604818","0.0-261.0","582474a8aac01b0001e45ef9","2582","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":63,""type"":""experimental"",""array_length"":10,""meanVal"":28,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2582","2582","true","blue24.jpg","23","exp","500","blue","10","[19,23,20,26,27,30,31,34,35,37]","28","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","84","blue","",""
"html-keyboard-response","262","605220","0.0-262.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","263","606735","0.0-263.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:1800% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:35px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:43px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:49px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:24px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:34px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:25px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:30px'></div></span>","null","stimulus","{""index"":63,""type"":""experimental"",""array_length"":10,""meanVal"":28,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","264","609290","0.0-264.0","582474a8aac01b0001e45ef9","2553","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":64,""type"":""experimental"",""array_length"":20,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2553","2553","true","blue18.jpg","17","exp","400","blue","20","[15,17,18,18,18,18,18,22,23,24,24,24,25,25,26,26,30,31,34,34]","25","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","85","blue","",""
"html-keyboard-response","265","609693","0.0-265.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","266","611199","0.0-266.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1100% 0%;margin-top:35px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":64,""type"":""experimental"",""array_length"":20,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","267","612818","0.0-267.0","582474a8aac01b0001e45ef9","1618","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":65,""type"":""experimental"",""array_length"":2,""meanVal"":15,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1618","1618","true","blue13.jpg","12","exp","400","blue","2","[11,19]","15","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","86","blue","",""
"html-keyboard-response","268","613219","0.0-268.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","269","614731","0.0-269.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:4300% 0%;margin-top:20px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:24px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:25px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:42px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:46px'></div></span>","null","stimulus","{""index"":65,""type"":""experimental"",""array_length"":2,""meanVal"":15,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","270","616825","0.0-270.0","582474a8aac01b0001e45ef9","2092","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":66,""type"":""experimental"",""array_length"":10,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2092","2092","true","blue28.jpg","27","exp","400","blue","10","[25,29,26,32,33,36,37,40,41,43]","34","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","87","blue","",""
"html-keyboard-response","271","617326","0.0-271.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","272","618838","0.0-272.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1200% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:29px'></div> <div> </div></span>","null","stimulus","{""index"":66,""type"":""experimental"",""array_length"":10,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","273","620714","0.0-273.0","582474a8aac01b0001e45ef9","1874","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":67,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1874","1874","true","blue17.jpg","16","exp","500","blue","2","[12,20]","16","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","88","blue","",""
"html-keyboard-response","274","621123","0.0-274.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","275","622628","0.0-275.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":67,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","276","624529","0.0-276.0","582474a8aac01b0001e45ef9","1900","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":68,""type"":""experimental"",""array_length"":2,""meanVal"":19,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1900","1900","true","blue12.jpg","11","exp","400","blue","2","[15,23]","19","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","89","blue","",""
"html-keyboard-response","277","624939","0.0-277.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","278","626442","0.0-278.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:38px'></div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":68,""type"":""experimental"",""array_length"":2,""meanVal"":19,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","279","629369","0.0-279.0","582474a8aac01b0001e45ef9","2926","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":69,""type"":""experimental"",""array_length"":2,""meanVal"":33,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2926","2926","true","blue22.jpg","21","exp","400","blue","2","[29,37]","33","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","90","blue","",""
"html-keyboard-response","280","629971","0.0-280.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","281","631476","0.0-281.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:1100% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:28px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:36px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:42px'></div> <div> </div></span>","null","stimulus","{""index"":69,""type"":""experimental"",""array_length"":2,""meanVal"":33,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","282","633762","0.0-282.0","582474a8aac01b0001e45ef9","2284","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":70,""type"":""experimental"",""array_length"":10,""meanVal"":19,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2284","2284","true","blue19.jpg","18","exp","600","blue","10","[10,14,11,17,18,21,22,25,26,28]","19","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","91","blue","",""
"html-keyboard-response","283","634163","0.0-283.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","284","635668","0.0-284.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:24px'></div> <div> </div></span>","null","stimulus","{""index"":70,""type"":""experimental"",""array_length"":10,""meanVal"":19,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","285","637953","0.0-285.0","582474a8aac01b0001e45ef9","2285","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":71,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2285","2285","true","blue15.jpg","14","exp","400","blue","2","[18,26]","22","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","92","blue","",""
"html-keyboard-response","286","638567","0.0-286.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","287","640070","0.0-287.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:49px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:20px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:29px'></div> <div> </div></span>","null","stimulus","{""index"":71,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","288","642009","0.0-288.0","582474a8aac01b0001e45ef9","1938","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":72,""type"":""experimental"",""array_length"":10,""meanVal"":32,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1938","1938","true","blue22.jpg","21","exp","600","blue","10","[23,27,24,30,31,34,35,38,39,41]","32","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","93","blue","",""
"html-keyboard-response","289","642520","0.0-289.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","290","644026","0.0-290.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:3000% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:44px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:28px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:24px'></div> <div class='blue' style='background-position:4200% 0%;margin-top:36px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:32px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:46px'></div> <div class='blue' style='background-position:4200% 0%;margin-top:31px'></div></span>","null","stimulus","{""index"":72,""type"":""experimental"",""array_length"":10,""meanVal"":32,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","291","645713","0.0-291.0","582474a8aac01b0001e45ef9","1687","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":73,""type"":""experimental"",""array_length"":20,""meanVal"":33,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1687","1687","true","blue27.jpg","26","exp","500","blue","20","[23,25,26,26,26,26,26,30,31,32,32,32,33,33,34,34,38,39,42,42]","33","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","94","blue","",""
"html-keyboard-response","292","646225","0.0-292.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","293","647726","0.0-293.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":73,""type"":""experimental"",""array_length"":20,""meanVal"":33,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","294","649418","0.0-294.0","582474a8aac01b0001e45ef9","1690","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":74,""type"":""experimental"",""array_length"":2,""meanVal"":17,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1690","1690","true","blue13.jpg","12","exp","500","blue","2","[13,21]","17","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","95","blue","",""
"html-keyboard-response","295","649819","0.0-295.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","296","651328","0.0-296.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:2500% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:47px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:21px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:48px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:40px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:34px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:46px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:20px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":74,""type"":""experimental"",""array_length"":2,""meanVal"":17,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","297","653529","0.0-297.0","582474a8aac01b0001e45ef9","2199","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":75,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2199","2199","true","blue25.jpg","24","exp","400","blue","20","[22,24,25,25,25,25,25,29,30,31,31,31,32,32,33,33,37,38,41,41]","32","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","96","blue","",""
"html-keyboard-response","298","654038","0.0-298.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","299","655545","0.0-299.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:3000% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:42px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:42px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:20px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":75,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","300","657370","0.0-300.0","582474a8aac01b0001e45ef9","1821","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":76,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1821","1821","true","blue18.jpg","17","exp","500","blue","10","[12,16,13,19,20,23,24,27,28,30]","21","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","97","blue","",""
"html-keyboard-response","301","657775","0.0-301.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","302","659278","0.0-302.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":76,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","303","661090","0.0-303.0","582474a8aac01b0001e45ef9","1810","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":77,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1810","1810","true","blue14.jpg","13","exp","400","blue","2","[14,22]","18","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","98","blue","",""
"html-keyboard-response","304","661703","0.0-304.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","305","663212","0.0-305.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:3000% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:47px'></div> <div> </div></span>","null","stimulus","{""index"":77,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","306","665345","0.0-306.0","582474a8aac01b0001e45ef9","2131","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":78,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2131","2131","true","blue17.jpg","16","exp","600","blue","2","[22,30]","26","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","99","blue","",""
"html-keyboard-response","307","665747","0.0-307.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","308","667249","0.0-308.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:2300% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:30px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:30px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:45px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:37px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:33px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:28px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:41px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:30px'></div></span>","null","stimulus","{""index"":78,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","309","669313","0.0-309.0","582474a8aac01b0001e45ef9","2063","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":79,""type"":""experimental"",""array_length"":20,""meanVal"":30,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2063","2063","true","blue22.jpg","21","exp","400","blue","20","[20,22,23,23,23,23,23,27,28,29,29,29,30,30,31,31,35,36,39,39]","30","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","100","blue","",""
"html-keyboard-response","310","669914","0.0-310.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","311","671430","0.0-311.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:1300% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:23px'></div> <div class='blue' style='background-position:900% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:23px'></div> <div class='blue' style='background-position:900% 0%;margin-top:35px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:22px'></div> <div class='blue' style='background-position:900% 0%;margin-top:41px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:38px'></div> <div class='blue' style='background-position:600% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:38px'></div> <div class='blue' style='background-position:900% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:38px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:44px'></div> <div class='blue' style='background-position:900% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:800% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:31px'></div></span>","null","stimulus","{""index"":79,""type"":""experimental"",""array_length"":20,""meanVal"":30,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","312","673346","0.0-312.0","582474a8aac01b0001e45ef9","1915","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":80,""type"":""experimental"",""array_length"":20,""meanVal"":16,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1915","1915","true","blue20.jpg","19","exp","600","blue","20","[6,8,9,9,9,9,9,13,14,15,15,15,16,16,17,17,21,22,25,25]","16","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","101","blue","",""
"html-keyboard-response","313","673855","0.0-313.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","314","675367","0.0-314.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:2600% 0%;margin-top:39px'></div> <div> </div> <div class='blue' style='background-position:4100% 0%;margin-top:34px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:27px'></div> <div class='blue' style='background-position:4300% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:44px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:20px'></div> <div> </div></span>","null","stimulus","{""index"":80,""type"":""experimental"",""array_length"":20,""meanVal"":16,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","315","678418","0.0-315.0","582474a8aac01b0001e45ef9","3049","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":81,""type"":""experimental"",""array_length"":10,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3049","3049","true","blue30.jpg","29","exp","500","blue","10","[25,29,26,32,33,36,37,40,41,43]","34","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","102","blue","",""
"html-keyboard-response","316","678919","0.0-316.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","317","680428","0.0-317.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":81,""type"":""experimental"",""array_length"":10,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","318","682689","0.0-318.0","582474a8aac01b0001e45ef9","2260","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":82,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2260","2260","true","blue26.jpg","25","exp","500","blue","2","[31,39]","35","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","103","blue","",""
"html-keyboard-response","319","683103","0.0-319.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","320","684604","0.0-320.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:3000% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:29px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:33px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:36px'></div></span>","null","stimulus","{""index"":82,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","321","686609","0.0-321.0","582474a8aac01b0001e45ef9","2004","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":83,""type"":""experimental"",""array_length"":10,""meanVal"":28,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2004","2004","true","blue26.jpg","25","exp","400","blue","10","[19,23,20,26,27,30,31,34,35,37]","28","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","104","blue","",""
"html-keyboard-response","322","687117","0.0-322.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","323","688623","0.0-323.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:2800% 0%;margin-top:41px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:26px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:45px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:45px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:24px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:30px'></div></span>","null","stimulus","{""index"":83,""type"":""experimental"",""array_length"":10,""meanVal"":28,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","324","691050","0.0-324.0","582474a8aac01b0001e45ef9","2424","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":84,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2424","2424","true","blue22.jpg","21","exp","500","blue","20","[12,14,15,15,15,15,15,19,20,21,21,21,22,22,23,23,27,28,31,31]","22","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","105","blue","",""
"html-keyboard-response","325","691556","0.0-325.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","326","693058","0.0-326.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:27px'></div></span>","null","stimulus","{""index"":84,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","327","695521","0.0-327.0","582474a8aac01b0001e45ef9","2463","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":85,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2463","2463","true","blue16.jpg","15","exp","500","blue","2","[14,22]","18","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","106","blue","",""
"html-keyboard-response","328","696129","0.0-328.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","329","697638","0.0-329.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:900% 0%;margin-top:33px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:30px'></div> <div> </div></span>","null","stimulus","{""index"":85,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","330","699905","0.0-330.0","582474a8aac01b0001e45ef9","2267","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":86,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2267","2267","true","blue15.jpg","14","exp","600","blue","10","[9,13,10,16,17,20,21,24,25,27]","18","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","107","blue","",""
"html-keyboard-response","331","700309","0.0-331.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","332","701816","0.0-332.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:2600% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:36px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:21px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:25px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:32px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:39px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:47px'></div></span>","null","stimulus","{""index"":86,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","333","704545","0.0-333.0","582474a8aac01b0001e45ef9","2728","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":87,""type"":""experimental"",""array_length"":20,""meanVal"":27,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2728","2728","true","blue24.jpg","23","exp","400","blue","20","[17,19,20,20,20,20,20,24,25,26,26,26,27,27,28,28,32,33,36,36]","27","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","108","blue","",""
"html-keyboard-response","334","704955","0.0-334.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","335","706471","0.0-335.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":87,""type"":""experimental"",""array_length"":20,""meanVal"":27,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","336","710058","0.0-336.0","582474a8aac01b0001e45ef9","3584","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":88,""type"":""experimental"",""array_length"":2,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3584","3584","true","blue19.jpg","18","exp","400","blue","2","[21,29]","25","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","109","blue","",""
"html-keyboard-response","337","710569","0.0-337.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","338","712081","0.0-338.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:1400% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:37px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:46px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:20px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:35px'></div></span>","null","stimulus","{""index"":88,""type"":""experimental"",""array_length"":2,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","339","714569","0.0-339.0","582474a8aac01b0001e45ef9","2487","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":89,""type"":""experimental"",""array_length"":20,""meanVal"":21,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2487","2487","true","blue23.jpg","22","exp","500","blue","20","[11,13,14,14,14,14,14,18,19,20,20,20,21,21,22,22,26,27,30,30]","21","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","110","blue","",""
"html-keyboard-response","340","714970","0.0-340.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","341","716480","0.0-341.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:3300% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:20px'></div> <div class='blue' style='background-position:4300% 0%;margin-top:36px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:36px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:49px'></div> <div class='blue' style='background-position:4300% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:40px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:34px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:48px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:30px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:30px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:48px'></div></span>","null","stimulus","{""index"":89,""type"":""experimental"",""array_length"":20,""meanVal"":21,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","342","719857","0.0-342.0","582474a8aac01b0001e45ef9","3374","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":90,""type"":""experimental"",""array_length"":20,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3374","3374","true","blue27.jpg","26","exp","400","blue","20","[24,26,27,27,27,27,27,31,32,33,33,33,34,34,35,35,39,40,43,43]","34","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","111","blue","",""
"html-keyboard-response","343","720358","0.0-343.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","344","721874","0.0-344.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:2700% 0%;margin-top:36px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:25px'></div></span>","null","stimulus","{""index"":90,""type"":""experimental"",""array_length"":20,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","345","724161","0.0-345.0","582474a8aac01b0001e45ef9","2286","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":91,""type"":""experimental"",""array_length"":10,""meanVal"":29,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2286","2286","true","blue23.jpg","22","exp","500","blue","10","[20,24,21,27,28,31,32,35,36,38]","29","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","112","blue","",""
"html-keyboard-response","346","724671","0.0-346.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","347","726176","0.0-347.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:2000% 0%;margin-top:43px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:44px'></div> <div class='blue' style='background-position:900% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:20px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:28px'></div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:45px'></div></span>","null","stimulus","{""index"":91,""type"":""experimental"",""array_length"":10,""meanVal"":29,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","348","727889","0.0-348.0","582474a8aac01b0001e45ef9","1712","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":92,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1712","1712","true","blue20.jpg","19","exp","500","blue","10","[9,13,10,16,17,20,21,24,25,27]","18","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","113","blue","",""
"html-keyboard-response","349","728495","0.0-349.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","350","730006","0.0-350.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div class='blue' style='background-position:3400% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:4500% 0%;margin-top:43px'></div> <div class='blue' style='background-position:4300% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:22px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:4200% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:37px'></div></span>","null","stimulus","{""index"":92,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","351","732105","0.0-351.0","582474a8aac01b0001e45ef9","2097","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":93,""type"":""experimental"",""array_length"":10,""meanVal"":36,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2097","2097","true","blue29.jpg","28","exp","600","blue","10","[27,31,28,34,35,38,39,42,43,45]","36","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","114","blue","",""
"html-keyboard-response","352","732616","0.0-352.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","353","734122","0.0-353.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":93,""type"":""experimental"",""array_length"":10,""meanVal"":36,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","354","736529","0.0-354.0","582474a8aac01b0001e45ef9","2407","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":94,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2407","2407","true","blue29.jpg","28","exp","500","blue","2","[25,33]","29","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","115","blue","",""
"html-keyboard-response","355","737035","0.0-355.0","582474a8aac01b0001e45ef9","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","356","738553","0.0-356.0","582474a8aac01b0001e45ef9","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:21px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:39px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:35px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:48px'></div></span>","null","stimulus","{""index"":94,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","357","740321","0.0-357.0","582474a8aac01b0001e45ef9","1767","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":95,""type"":""experimental"",""array_length"":10,""meanVal"":28,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1767","1767","true","blue30.jpg","29","exp","500","blue","10","[19,23,20,26,27,30,31,34,35,37]","28","that there some dang ol' giraffes doing some giraffe stuff in a big dang ol' field","116","blue","",""
"html-button-response","358","744898","0.0-358.0","582474a8aac01b0001e45ef9","4575.599999904633","","","","<p><strong>My purpose in this experiment was:</strong></p>","","","","","","","","","","","","","","","","","","","","","","","","","","","","1","2"
"survey-text","359","809354","0.0-360.0-0.0","582474a8aac01b0001e45ef9","64454.5","","","{""feel_strategy"":""Not sure how to describe how colors feel. I tried approximating the palette.""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","360","811346","0.0-362.0","582474a8aac01b0001e45ef9","1990.7000000476837","","[{""page_index"":0,""viewing_time"":1990.5}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
