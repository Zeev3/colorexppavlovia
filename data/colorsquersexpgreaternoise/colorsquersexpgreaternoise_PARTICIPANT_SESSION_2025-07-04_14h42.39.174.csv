"trial_type","trial_index","time_elapsed","internal_node_id","participant_id","rt","url","view_history","responses","stimulus","key_press","Name","config","type","prompt","step","max","start","on_load","data","min","labels","button_label","stimulus_duration","trial_duration","response_ends_trial","imageSelected","indexSelected","exp_type","fixationTime","faceIdentity","array_length","array_values","meanVal","description","trial","color","button_pressed","purpose"
"pavlovia","0","7","0.0-0.0","668c0bc95fadbd0e93071351","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"external-html","1","157598","0.0-1.0","668c0bc95fadbd0e93071351","157043","external_page.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","2","516040","0.0-2.0","668c0bc95fadbd0e93071351","358439.80000019073","","[{""page_index"":0,""viewing_time"":181188.5},{""page_index"":1,""viewing_time"":57895.60000038147},{""page_index"":2,""viewing_time"":112244.89999961853},{""page_index"":3,""viewing_time"":7109.700000286102}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","3","538695","0.0-3.0","668c0bc95fadbd0e93071351","22647.200000286102","","","{""Q0"":""668c0bc95fadbd0e93071351""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","4","545541","0.0-4.0","668c0bc95fadbd0e93071351","6843.5","","[{""page_index"":0,""viewing_time"":6843.10000038147}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","5","640633","0.0-5.0","668c0bc95fadbd0e93071351","95088.09999990463","","","{""Q0"":""Three giraffes standing together.""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","6","699107","0.0-6.0-0.0","668c0bc95fadbd0e93071351","58468.2000002861","","","{""Q0"":""but""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","7","699620","0.0-7.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","8","701131","0.0-8.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:200% 0%;margin-top:22px'></div> <div class='red' style='background-position:1600% 0%;margin-top:47px'></div> <div class='red' style='background-position:1800% 0%;margin-top:24px'></div> <div class='red' style='background-position:400% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:48px'></div> <div class='red' style='background-position:600% 0%;margin-top:30px'></div> <div class='red' style='background-position:800% 0%;margin-top:49px'></div> <div class='red' style='background-position:1400% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:37px'></div> <div class='red' style='background-position:2000% 0%;margin-top:22px'></div></span>","null","stimulus","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","9","738102","0.0-9.0","668c0bc95fadbd0e93071351","36967","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":0,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","36967","36967","true","red3.jpg","2","exp","500","red","11","[12,6,8,19,4,5,20,16,14,2,18]","11.272727272727273","Three giraffes standing together.","1","","",""
"html-keyboard-response","10","738616","0.0-10.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","11","740131","0.0-11.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:3000% 0%;margin-top:31px'></div> <div class='red' style='background-position:4200% 0%;margin-top:34px'></div> <div class='red' style='background-position:3400% 0%;margin-top:31px'></div> <div class='red' style='background-position:4000% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:4800% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:24px'></div></span>","null","stimulus","{""index"":0,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","12","757724","0.0-12.0","668c0bc95fadbd0e93071351","17590","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":1,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","17590","17590","true","red30.jpg","29","exp","500","red","8","[37,36,30,42,48,31,34,40]","37.25","Three giraffes standing together.","2","","",""
"html-keyboard-response","13","758132","0.0-13.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","14","759641","0.0-14.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:40px'></div> <div class='red' style='background-position:4100% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4200% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4500% 0%;margin-top:45px'></div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:40px'></div></span>","null","stimulus","{""index"":1,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","15","768606","0.0-15.0","668c0bc95fadbd0e93071351","8963","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":2,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8963","8963","true","red35.jpg","34","exp","400","red","5","[40,34,41,45,42]","40.4","Three giraffes standing together.","3","","",""
"html-keyboard-response","16","769221","0.0-16.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","17","770730","0.0-17.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:24px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":2,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","18","783814","0.0-18.0","668c0bc95fadbd0e93071351","13082","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":3,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","13082","13082","true","red10.jpg","9","exp","600","red","2","[13,10]","11.5","Three giraffes standing together.","4","","",""
"html-keyboard-response","19","784325","0.0-19.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","20","785838","0.0-20.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:3700% 0%;margin-top:48px'></div> <div class='red' style='background-position:4400% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":3,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","21","804198","0.0-21.0","668c0bc95fadbd0e93071351","18358","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":4,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","18358","18358","true","red27.jpg","26","exp","500","red","6","[31,37,44,43,34,33]","37","Three giraffes standing together.","5","","",""
"html-keyboard-response","22","804612","0.0-22.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","23","806127","0.0-23.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3600% 0%;margin-top:33px'></div> <div class='red' style='background-position:4000% 0%;margin-top:34px'></div> <div class='red' style='background-position:3700% 0%;margin-top:31px'></div> <div class='red' style='background-position:4400% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4600% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4800% 0%;margin-top:31px'></div> <div class='red' style='background-position:4700% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:4500% 0%;margin-top:32px'></div> <div class='red' style='background-position:3300% 0%;margin-top:29px'></div> <div class='red' style='background-position:3800% 0%;margin-top:50px'></div> <div class='red' style='background-position:4300% 0%;margin-top:38px'></div></span>","null","stimulus","{""index"":4,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","24","812381","0.0-24.0","668c0bc95fadbd0e93071351","6252","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":5,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6252","6252","true","red36.jpg","35","exp","400","red","11","[47,45,40,48,44,43,37,38,33,36,46]","41.54545454545455","Three giraffes standing together.","6","","",""
"html-keyboard-response","25","812893","0.0-25.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","26","814397","0.0-26.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:4500% 0%;margin-top:40px'></div> <div class='red' style='background-position:4600% 0%;margin-top:20px'></div> <div class='red' style='background-position:3600% 0%;margin-top:47px'></div> <div class='red' style='background-position:3900% 0%;margin-top:23px'></div> <div class='red' style='background-position:4300% 0%;margin-top:31px'></div> <div class='red' style='background-position:3100% 0%;margin-top:27px'></div> <div class='red' style='background-position:3200% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4700% 0%;margin-top:36px'></div> <div class='red' style='background-position:3000% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":5,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","27","819707","0.0-27.0","668c0bc95fadbd0e93071351","5307","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":6,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5307","5307","true","red32.jpg","31","exp","500","red","9","[31,32,47,39,46,30,43,45,36]","38.77777777777778","Three giraffes standing together.","7","","",""
"html-keyboard-response","28","820309","0.0-28.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","29","821822","0.0-29.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:4400% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4600% 0%;margin-top:23px'></div></span>","null","stimulus","{""index"":6,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","30","833096","0.0-30.0","668c0bc95fadbd0e93071351","11272","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":7,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","11272","11272","true","red29.jpg","28","exp","600","red","4","[44,29,35,46]","38.5","Three giraffes standing together.","8","","",""
"html-keyboard-response","31","833609","0.0-31.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","32","835114","0.0-32.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:1300% 0%;margin-top:31px'></div> <div class='red' style='background-position:300% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:100% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:39px'></div> <div class='red' style='background-position:1900% 0%;margin-top:42px'></div> <div class='red' style='background-position:700% 0%;margin-top:38px'></div> <div class='red' style='background-position:1600% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:47px'></div> <div class='red' style='background-position:2000% 0%;margin-top:43px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":7,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","33","864571","0.0-33.0","668c0bc95fadbd0e93071351","29454","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":8,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","29454","29454","true","red16.jpg","15","exp","500","red","9","[19,3,1,13,5,2,20,16,7]","9.555555555555555","Three giraffes standing together.","9","","",""
"html-keyboard-response","34","865181","0.0-34.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","35","866693","0.0-35.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4800% 0%;margin-top:38px'></div> <div class='red' style='background-position:4200% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:49px'></div> <div> </div></span>","null","stimulus","{""index"":8,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","36","881754","0.0-36.0","668c0bc95fadbd0e93071351","15059","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":9,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","15059","15059","true","red29.jpg","28","exp","600","red","5","[48,42,34,43,41]","41.6","Three giraffes standing together.","10","","",""
"html-keyboard-response","37","882166","0.0-37.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","38","883675","0.0-38.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:3400% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":9,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","39","893038","0.0-39.0","668c0bc95fadbd0e93071351","9361","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":10,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9361","9361","true","red30.jpg","29","exp","400","red","3","[37,34,41]","37.333333333333336","Three giraffes standing together.","11","","",""
"html-keyboard-response","40","893450","0.0-40.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","41","894962","0.0-41.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:1200% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:38px'></div> <div class='red' style='background-position:600% 0%;margin-top:37px'></div> <div class='red' style='background-position:300% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:40px'></div> <div class='red' style='background-position:1300% 0%;margin-top:36px'></div> <div class='red' style='background-position:500% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:25px'></div> <div class='red' style='background-position:100% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:50px'></div> <div class='red' style='background-position:1900% 0%;margin-top:25px'></div></span>","null","stimulus","{""index"":10,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","42","913619","0.0-42.0","668c0bc95fadbd0e93071351","18655","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":11,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","18655","18655","true","red13.jpg","12","exp","400","red","12","[20,3,12,16,19,13,11,2,6,5,1,15]","10.25","Three giraffes standing together.","12","","",""
"html-keyboard-response","43","914134","0.0-43.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","44","915645","0.0-44.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:3900% 0%;margin-top:36px'></div> <div class='red' style='background-position:2900% 0%;margin-top:25px'></div> <div class='red' style='background-position:3100% 0%;margin-top:35px'></div> <div class='red' style='background-position:3000% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":11,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","45","920955","0.0-45.0","668c0bc95fadbd0e93071351","5308","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":12,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5308","5308","true","red28.jpg","27","exp","500","red","6","[31,36,37,30,29,39]","33.666666666666664","Three giraffes standing together.","13","","",""
"html-keyboard-response","46","921468","0.0-46.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","47","922980","0.0-47.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4500% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":12,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","48","928321","0.0-48.0","668c0bc95fadbd0e93071351","5338","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":13,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5338","5338","true","red31.jpg","30","exp","500","red","3","[38,45,30]","37.666666666666664","Three giraffes standing together.","14","","",""
"html-keyboard-response","49","928738","0.0-49.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","50","930244","0.0-50.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:1800% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:28px'></div> <div> </div> <div class='red' style='background-position:400% 0%;margin-top:31px'></div> <div class='red' style='background-position:1200% 0%;margin-top:32px'></div> <div class='red' style='background-position:1600% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:700% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:26px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:300% 0%;margin-top:45px'></div> <div class='red' style='background-position:200% 0%;margin-top:33px'></div> <div> </div></span>","null","stimulus","{""index"":13,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","51","933930","0.0-51.0","668c0bc95fadbd0e93071351","3684","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":14,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3684","3684","true","red6.jpg","5","exp","400","red","10","[3,15,2,4,16,7,13,12,14,18]","10.4","Three giraffes standing together.","15","","",""
"html-keyboard-response","52","934441","0.0-52.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","53","935958","0.0-53.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:4700% 0%;margin-top:40px'></div> <div class='red' style='background-position:3100% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:20px'></div> <div class='red' style='background-position:4100% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4800% 0%;margin-top:21px'></div> <div class='red' style='background-position:4400% 0%;margin-top:28px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":14,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","54","943237","0.0-54.0","668c0bc95fadbd0e93071351","7277","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":15,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7277","7277","true","red34.jpg","33","exp","500","red","8","[31,40,41,48,43,38,47,44]","41.5","Three giraffes standing together.","16","","",""
"html-keyboard-response","55","943749","0.0-55.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","56","945262","0.0-56.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4700% 0%;margin-top:46px'></div> <div class='red' style='background-position:3700% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:46px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":15,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","57","956598","0.0-57.0","668c0bc95fadbd0e93071351","11334","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":16,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","11334","11334","true","red34.jpg","33","exp","500","red","4","[38,35,47,37]","39.25","Three giraffes standing together.","17","","",""
"html-keyboard-response","58","957109","0.0-58.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","59","958625","0.0-59.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:200% 0%;margin-top:30px'></div></span>","null","stimulus","{""index"":16,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","60","981566","0.0-60.0","668c0bc95fadbd0e93071351","22938","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":17,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","22938","22938","true","red19.jpg","18","exp","500","red","3","[2,11,20]","11","Three giraffes standing together.","18","","",""
"html-keyboard-response","61","982178","0.0-61.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","62","983689","0.0-62.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:300% 0%;margin-top:43px'></div> <div class='red' style='background-position:100% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":17,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","63","989817","0.0-63.0","668c0bc95fadbd0e93071351","6125","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":18,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6125","6125","true","red4.jpg","3","exp","600","red","2","[1,3]","2","Three giraffes standing together.","19","","",""
"html-keyboard-response","64","990427","0.0-64.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","65","991933","0.0-65.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:32px'></div> <div class='red' style='background-position:700% 0%;margin-top:46px'></div> <div class='red' style='background-position:500% 0%;margin-top:46px'></div> <div class='red' style='background-position:1700% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:36px'></div> <div class='red' style='background-position:1100% 0%;margin-top:27px'></div> <div class='red' style='background-position:2000% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:31px'></div> <div class='red' style='background-position:800% 0%;margin-top:33px'></div> <div class='red' style='background-position:100% 0%;margin-top:26px'></div> <div class='red' style='background-position:1600% 0%;margin-top:32px'></div> <div class='red' style='background-position:1500% 0%;margin-top:24px'></div> <div> </div></span>","null","stimulus","{""index"":18,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","66","996004","0.0-66.0","668c0bc95fadbd0e93071351","4069","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":19,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4069","4069","true","red6.jpg","5","exp","600","red","12","[5,15,16,8,20,11,17,13,19,7,12,1]","12","Three giraffes standing together.","20","","",""
"instructions","67","999438","0.0-67.0","668c0bc95fadbd0e93071351","3432.7000002861023","","[{""page_index"":0,""viewing_time"":3431.6000003814697}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","68","1014551","0.0-68.0-0.0","668c0bc95fadbd0e93071351","15107.700000286102","","","{""Q0"":""rock""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","69","1014956","0.0-69.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","70","1016464","0.0-70.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:21px'></div> <div> </div></span>","null","stimulus","{""index"":19,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","71","1026700","0.0-71.0","668c0bc95fadbd0e93071351","10232","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":0,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","10232","10232","true","blue5.jpg","4","exp","400","blue","2","[10,18]","14","Three giraffes standing together.","21","blue","",""
"html-keyboard-response","72","1027114","0.0-72.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","73","1028618","0.0-73.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:32px'></div> <div> </div></span>","null","stimulus","{""index"":0,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","74","1037021","0.0-74.0","668c0bc95fadbd0e93071351","8400","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":1,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","8400","8400","true","blue19.jpg","18","exp","400","blue","2","[30,38]","34","Three giraffes standing together.","22","blue","",""
"html-keyboard-response","75","1037431","0.0-75.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","76","1038935","0.0-76.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:24px'></div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:38px'></div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:36px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:43px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:21px'></div></span>","null","stimulus","{""index"":1,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","77","1041999","0.0-77.0","668c0bc95fadbd0e93071351","3062","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":2,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3062","3062","true","blue32.jpg","31","exp","400","blue","10","[21,25,22,28,29,32,33,36,37,39]","30","Three giraffes standing together.","23","blue","",""
"html-keyboard-response","78","1042608","0.0-78.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","79","1044123","0.0-79.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2500% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:44px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:21px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:28px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:29px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:37px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:43px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:35px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:36px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:43px'></div></span>","null","stimulus","{""index"":2,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","80","1049481","0.0-80.0","668c0bc95fadbd0e93071351","5356","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":3,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5356","5356","true","blue27.jpg","26","exp","600","blue","20","[22,24,25,25,25,25,25,29,30,31,31,31,32,32,33,33,37,38,41,41]","32","Three giraffes standing together.","24","blue","",""
"html-keyboard-response","81","1050091","0.0-81.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","82","1051605","0.0-82.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2100% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:28px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:37px'></div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:42px'></div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:37px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:49px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:35px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:33px'></div></span>","null","stimulus","{""index"":3,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","83","1056203","0.0-83.0","668c0bc95fadbd0e93071351","4596","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":4,""type"":""experimental"",""array_length"":20,""meanVal"":21,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4596","4596","true","blue10.jpg","9","exp","600","blue","20","[11,13,14,14,14,14,14,18,19,20,20,20,21,21,22,22,26,27,30,30]","21","Three giraffes standing together.","25","blue","",""
"html-keyboard-response","84","1056710","0.0-84.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","85","1058222","0.0-85.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:700% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:28px'></div> <div class='blue' style='background-position:600% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:22px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:36px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:32px'></div></span>","null","stimulus","{""index"":4,""type"":""experimental"",""array_length"":20,""meanVal"":21,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","86","1061421","0.0-86.0","668c0bc95fadbd0e93071351","3197","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":5,""type"":""experimental"",""array_length"":10,""meanVal"":15,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3197","3197","true","blue17.jpg","16","exp","500","blue","10","[6,10,7,13,14,17,18,21,22,24]","15","Three giraffes standing together.","26","blue","",""
"html-keyboard-response","87","1061839","0.0-87.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","88","1063343","0.0-88.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":5,""type"":""experimental"",""array_length"":10,""meanVal"":15,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","89","1077502","0.0-89.0","668c0bc95fadbd0e93071351","14157","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":6,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","14157","14157","true","blue5.jpg","4","exp","400","blue","2","[30,38]","34","Three giraffes standing together.","27","blue","",""
"html-keyboard-response","90","1078107","0.0-90.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","91","1079619","0.0-91.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:31px'></div> <div> </div></span>","null","stimulus","{""index"":6,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","92","1110672","0.0-92.0","668c0bc95fadbd0e93071351","31051","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":7,""type"":""experimental"",""array_length"":2,""meanVal"":17,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","31051","31051","true","blue10.jpg","9","exp","600","blue","2","[13,21]","17","Three giraffes standing together.","28","blue","",""
"html-keyboard-response","93","1111177","0.0-93.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","94","1112682","0.0-94.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:1200% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:20px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:35px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:22px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:23px'></div> <div> </div></span>","null","stimulus","{""index"":7,""type"":""experimental"",""array_length"":2,""meanVal"":17,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","95","1122419","0.0-95.0","668c0bc95fadbd0e93071351","9735","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":8,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","9735","9735","true","blue24.jpg","23","exp","500","blue","10","[12,16,13,19,20,23,24,27,28,30]","21","Three giraffes standing together.","29","blue","",""
"html-keyboard-response","96","1122830","0.0-96.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","97","1124336","0.0-97.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":8,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","98","1130398","0.0-98.0","668c0bc95fadbd0e93071351","6060","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":9,""type"":""experimental"",""array_length"":2,""meanVal"":23,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6060","6060","true","blue17.jpg","16","exp","400","blue","2","[19,27]","23","Three giraffes standing together.","30","blue","",""
"html-keyboard-response","99","1130812","0.0-99.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","100","1132324","0.0-100.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":9,""type"":""experimental"",""array_length"":2,""meanVal"":23,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","101","1139523","0.0-101.0","668c0bc95fadbd0e93071351","7196","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":10,""type"":""experimental"",""array_length"":2,""meanVal"":31,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7196","7196","true","blue21.jpg","20","exp","400","blue","2","[27,35]","31","Three giraffes standing together.","31","blue","",""
"html-keyboard-response","102","1140127","0.0-102.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","103","1141637","0.0-103.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2500% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:35px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:43px'></div> <div class='blue' style='background-position:4400% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:44px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:42px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:36px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:20px'></div> <div class='blue' style='background-position:4400% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:21px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:47px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:48px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:48px'></div></span>","null","stimulus","{""index"":10,""type"":""experimental"",""array_length"":2,""meanVal"":31,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","104","1147538","0.0-104.0","668c0bc95fadbd0e93071351","5900","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":11,""type"":""experimental"",""array_length"":20,""meanVal"":35,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5900","5900","true","blue26.jpg","25","exp","600","blue","20","[25,27,28,28,28,28,28,32,33,34,34,34,35,35,36,36,40,41,44,44]","35","Three giraffes standing together.","32","blue","",""
"html-keyboard-response","105","1148140","0.0-105.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","106","1149654","0.0-106.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2000% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":11,""type"":""experimental"",""array_length"":20,""meanVal"":35,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","107","1154496","0.0-107.0","668c0bc95fadbd0e93071351","4840","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":12,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4840","4840","true","blue24.jpg","23","exp","600","blue","2","[20,28]","24","Three giraffes standing together.","33","blue","",""
"html-keyboard-response","108","1155112","0.0-108.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","109","1156630","0.0-109.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:40px'></div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:30px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:26px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:37px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:21px'></div></span>","null","stimulus","{""index"":12,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","110","1174766","0.0-110.0","668c0bc95fadbd0e93071351","18134","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":13,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","18134","18134","true","blue22.jpg","21","exp","600","blue","10","[12,16,13,19,20,23,24,27,28,30]","21","Three giraffes standing together.","34","blue","",""
"html-keyboard-response","111","1175182","0.0-111.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","112","1176688","0.0-112.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2400% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:50px'></div> <div> </div></span>","null","stimulus","{""index"":13,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","113","1182088","0.0-113.0","668c0bc95fadbd0e93071351","5398","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":14,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5398","5398","true","blue19.jpg","18","exp","400","blue","10","[9,13,10,16,17,20,21,24,25,27]","18","Three giraffes standing together.","35","blue","",""
"html-keyboard-response","114","1182595","0.0-114.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","115","1184104","0.0-115.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2400% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:35px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:30px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:36px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:48px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:45px'></div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:46px'></div></span>","null","stimulus","{""index"":14,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","116","1189038","0.0-116.0","668c0bc95fadbd0e93071351","4932","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":15,""type"":""experimental"",""array_length"":20,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4932","4932","true","blue13.jpg","12","exp","500","blue","20","[15,17,18,18,18,18,18,22,23,24,24,24,25,25,26,26,30,31,34,34]","25","Three giraffes standing together.","36","blue","",""
"html-keyboard-response","117","1189446","0.0-117.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","118","1190963","0.0-118.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:1800% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:37px'></div> <div> </div></span>","null","stimulus","{""index"":15,""type"":""experimental"",""array_length"":20,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","119","1196810","0.0-119.0","668c0bc95fadbd0e93071351","5846","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":16,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5846","5846","true","blue13.jpg","12","exp","400","blue","2","[18,26]","22","Three giraffes standing together.","37","blue","",""
"html-keyboard-response","120","1197414","0.0-120.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","121","1198918","0.0-121.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:25px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:28px'></div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:43px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:44px'></div></span>","null","stimulus","{""index"":16,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","122","1206787","0.0-122.0","668c0bc95fadbd0e93071351","7867","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":17,""type"":""experimental"",""array_length"":10,""meanVal"":31,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7867","7867","true","blue23.jpg","22","exp","600","blue","10","[22,26,23,29,30,33,34,37,38,40]","31","Three giraffes standing together.","38","blue","",""
"html-keyboard-response","123","1207403","0.0-123.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","124","1208911","0.0-124.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:3200% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:21px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:41px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:43px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:20px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:35px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:33px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:46px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:28px'></div></span>","null","stimulus","{""index"":17,""type"":""experimental"",""array_length"":10,""meanVal"":31,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","125","1218555","0.0-125.0","668c0bc95fadbd0e93071351","9641","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":18,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","9641","9641","true","blue27.jpg","26","exp","600","blue","20","[22,24,25,25,25,25,25,29,30,31,31,31,32,32,33,33,37,38,41,41]","32","Three giraffes standing together.","39","blue","",""
"html-keyboard-response","126","1219060","0.0-126.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","127","1220567","0.0-127.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:35px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:25px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:50px'></div></span>","null","stimulus","{""index"":18,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","128","1244087","0.0-128.0","668c0bc95fadbd0e93071351","23518","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":19,""type"":""experimental"",""array_length"":10,""meanVal"":31,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","23518","23518","true","blue24.jpg","23","exp","500","blue","10","[22,26,23,29,30,33,34,37,38,40]","31","Three giraffes standing together.","40","blue","",""
"html-keyboard-response","129","1244601","0.0-129.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","130","1246108","0.0-130.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2500% 0%;margin-top:46px'></div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:45px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:37px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:43px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:37px'></div></span>","null","stimulus","{""index"":19,""type"":""experimental"",""array_length"":10,""meanVal"":31,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","131","1258463","0.0-131.0","668c0bc95fadbd0e93071351","12354","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":20,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","12354","12354","true","blue24.jpg","23","exp","500","blue","10","[21,25,22,28,29,32,33,36,37,39]","30","Three giraffes standing together.","41","blue","",""
"html-keyboard-response","132","1258977","0.0-132.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","133","1260483","0.0-133.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":20,""type"":""experimental"",""array_length"":10,""meanVal"":30,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","134","1269856","0.0-134.0","668c0bc95fadbd0e93071351","9371","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":21,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","9371","9371","true","blue23.jpg","22","exp","500","blue","2","[25,33]","29","Three giraffes standing together.","42","blue","",""
"html-keyboard-response","135","1270271","0.0-135.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","136","1271786","0.0-136.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3900% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:31px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":21,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","137","1279336","0.0-137.0","668c0bc95fadbd0e93071351","7548","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":22,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7548","7548","true","blue27.jpg","26","exp","400","blue","2","[31,39]","35","Three giraffes standing together.","43","blue","",""
"html-keyboard-response","138","1279941","0.0-138.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","139","1281442","0.0-139.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:22px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:34px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:29px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:21px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:38px'></div></span>","null","stimulus","{""index"":22,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","140","1286132","0.0-140.0","668c0bc95fadbd0e93071351","4688","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":23,""type"":""experimental"",""array_length"":20,""meanVal"":30,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4688","4688","true","blue29.jpg","28","exp","600","blue","20","[20,22,23,23,23,23,23,27,28,29,29,29,30,30,31,31,35,36,39,39]","30","Three giraffes standing together.","44","blue","",""
"html-keyboard-response","141","1286636","0.0-141.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","142","1288141","0.0-142.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:1500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:29px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:50px'></div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:41px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:33px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:31px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:37px'></div> <div> </div></span>","null","stimulus","{""index"":23,""type"":""experimental"",""array_length"":20,""meanVal"":30,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","143","1293572","0.0-143.0","668c0bc95fadbd0e93071351","5429","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":24,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5429","5429","true","blue15.jpg","14","exp","500","blue","20","[12,14,15,15,15,15,15,19,20,21,21,21,22,22,23,23,27,28,31,31]","22","Three giraffes standing together.","45","blue","",""
"html-keyboard-response","144","1294176","0.0-144.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","145","1295681","0.0-145.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:1100% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:40px'></div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:38px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:48px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:45px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:49px'></div> <div> </div></span>","null","stimulus","{""index"":24,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","146","1303546","0.0-146.0","668c0bc95fadbd0e93071351","7863","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":25,""type"":""experimental"",""array_length"":10,""meanVal"":19,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7863","7863","true","blue20.jpg","19","exp","600","blue","10","[10,14,11,17,18,21,22,25,26,28]","19","Three giraffes standing together.","46","blue","",""
"html-keyboard-response","147","1304059","0.0-147.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","148","1305562","0.0-148.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2000% 0%;margin-top:46px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:46px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:48px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:30px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:21px'></div></span>","null","stimulus","{""index"":25,""type"":""experimental"",""array_length"":10,""meanVal"":19,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","149","1311050","0.0-149.0","668c0bc95fadbd0e93071351","5486","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":26,""type"":""experimental"",""array_length"":20,""meanVal"":30,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5486","5486","true","blue23.jpg","22","exp","500","blue","20","[20,22,23,23,23,23,23,27,28,29,29,29,30,30,31,31,35,36,39,39]","30","Three giraffes standing together.","47","blue","",""
"html-keyboard-response","150","1311552","0.0-150.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","151","1313069","0.0-151.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2500% 0%;margin-top:35px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:32px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:36px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:34px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:32px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:35px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:27px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:24px'></div></span>","null","stimulus","{""index"":26,""type"":""experimental"",""array_length"":20,""meanVal"":30,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","152","1325437","0.0-152.0","668c0bc95fadbd0e93071351","12367","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":27,""type"":""experimental"",""array_length"":20,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","12367","12367","true","blue16.jpg","15","exp","500","blue","20","[16,18,19,19,19,19,19,23,24,25,25,25,26,26,27,27,31,32,35,35]","26","Three giraffes standing together.","48","blue","",""
"html-keyboard-response","153","1326043","0.0-153.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","154","1327545","0.0-154.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:3800% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:30px'></div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:49px'></div> <div class='blue' style='background-position:4400% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:21px'></div> <div class='blue' style='background-position:4200% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:33px'></div> <div> </div> <div class='blue' style='background-position:4100% 0%;margin-top:29px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:49px'></div></span>","null","stimulus","{""index"":27,""type"":""experimental"",""array_length"":20,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","155","1340939","0.0-155.0","668c0bc95fadbd0e93071351","13390","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":28,""type"":""experimental"",""array_length"":10,""meanVal"":35,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","13390","13390","true","blue26.jpg","25","exp","600","blue","10","[26,30,27,33,34,37,38,41,42,44]","35","Three giraffes standing together.","49","blue","",""
"html-keyboard-response","156","1341443","0.0-156.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","157","1342958","0.0-157.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":28,""type"":""experimental"",""array_length"":10,""meanVal"":35,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","158","1352621","0.0-158.0","668c0bc95fadbd0e93071351","9661","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":29,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","9661","9661","true","blue19.jpg","18","exp","500","blue","2","[14,22]","18","Three giraffes standing together.","50","blue","",""
"html-keyboard-response","159","1353134","0.0-159.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","160","1354646","0.0-160.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:800% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:42px'></div> <div class='blue' style='background-position:800% 0%;margin-top:20px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:21px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:34px'></div> <div class='blue' style='background-position:800% 0%;margin-top:29px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:22px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:27px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:48px'></div> <div class='blue' style='background-position:800% 0%;margin-top:47px'></div> <div class='blue' style='background-position:500% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:800% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:23px'></div> <div class='blue' style='background-position:700% 0%;margin-top:34px'></div></span>","null","stimulus","{""index"":29,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","161","1365464","0.0-161.0","668c0bc95fadbd0e93071351","10817","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":30,""type"":""experimental"",""array_length"":20,""meanVal"":15,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","10817","10817","true","blue13.jpg","12","exp","500","blue","20","[5,7,8,8,8,8,8,12,13,14,14,14,15,15,16,16,20,21,24,24]","15","Three giraffes standing together.","51","blue","",""
"html-keyboard-response","162","1365879","0.0-162.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","163","1367390","0.0-163.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:400% 0%;margin-top:33px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:29px'></div> <div class='blue' style='background-position:700% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:41px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:600% 0%;margin-top:32px'></div> <div class='blue' style='background-position:700% 0%;margin-top:42px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:45px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:29px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:48px'></div> <div class='blue' style='background-position:700% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:22px'></div> <div class='blue' style='background-position:700% 0%;margin-top:33px'></div> <div class='blue' style='background-position:700% 0%;margin-top:40px'></div></span>","null","stimulus","{""index"":30,""type"":""experimental"",""array_length"":20,""meanVal"":15,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","164","1373047","0.0-164.0","668c0bc95fadbd0e93071351","5655","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":31,""type"":""experimental"",""array_length"":20,""meanVal"":14,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5655","5655","true","blue8.jpg","7","exp","400","blue","20","[4,6,7,7,7,7,7,11,12,13,13,13,14,14,15,15,19,20,23,23]","14","Three giraffes standing together.","52","blue","",""
"html-keyboard-response","165","1373561","0.0-165.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","166","1375077","0.0-166.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:22px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:41px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:21px'></div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:41px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:50px'></div></span>","null","stimulus","{""index"":31,""type"":""experimental"",""array_length"":20,""meanVal"":14,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","167","1378655","0.0-167.0","668c0bc95fadbd0e93071351","3577","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":32,""type"":""experimental"",""array_length"":20,""meanVal"":24,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3577","3577","true","blue1.jpg","0","exp","500","blue","20","[14,16,17,17,17,17,17,21,22,23,23,23,24,24,25,25,29,30,33,33]","24","Three giraffes standing together.","53","blue","",""
"html-keyboard-response","168","1379158","0.0-168.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","169","1380664","0.0-169.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:3700% 0%;margin-top:30px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:21px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:20px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:29px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:29px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:40px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":32,""type"":""experimental"",""array_length"":20,""meanVal"":24,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","170","1387297","0.0-170.0","668c0bc95fadbd0e93071351","6631","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":33,""type"":""experimental"",""array_length"":20,""meanVal"":28,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6631","6631","true","blue22.jpg","21","exp","500","blue","20","[18,20,21,21,21,21,21,25,26,27,27,27,28,28,29,29,33,34,37,37]","28","Three giraffes standing together.","54","blue","",""
"html-keyboard-response","171","1387914","0.0-171.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","172","1389416","0.0-172.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:3800% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:44px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:48px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:39px'></div> <div> </div></span>","null","stimulus","{""index"":33,""type"":""experimental"",""array_length"":20,""meanVal"":28,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","173","1405719","0.0-173.0","668c0bc95fadbd0e93071351","16300","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":34,""type"":""experimental"",""array_length"":10,""meanVal"":31,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","16300","16300","true","blue14.jpg","13","exp","600","blue","10","[22,26,23,29,30,33,34,37,38,40]","31","Three giraffes standing together.","55","blue","",""
"html-keyboard-response","174","1406336","0.0-174.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","175","1407847","0.0-175.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:28px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:41px'></div> <div class='blue' style='background-position:500% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:37px'></div> <div class='blue' style='background-position:600% 0%;margin-top:38px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:24px'></div></span>","null","stimulus","{""index"":34,""type"":""experimental"",""array_length"":10,""meanVal"":31,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","176","1420719","0.0-176.0","668c0bc95fadbd0e93071351","12871","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":35,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","12871","12871","true","blue15.jpg","14","exp","600","blue","10","[5,9,6,12,13,16,17,20,21,23]","14","Three giraffes standing together.","56","blue","",""
"html-keyboard-response","177","1421228","0.0-177.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","178","1422740","0.0-178.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:37px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:24px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:22px'></div></span>","null","stimulus","{""index"":35,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","179","1444588","0.0-179.0","668c0bc95fadbd0e93071351","21845","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":36,""type"":""experimental"",""array_length"":10,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","21845","21845","true","blue15.jpg","14","exp","500","blue","10","[16,20,17,23,24,27,28,31,32,34]","25","Three giraffes standing together.","57","blue","",""
"html-keyboard-response","180","1445093","0.0-180.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","181","1446604","0.0-181.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:1500% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:35px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:42px'></div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:26px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:36px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:21px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:43px'></div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:20px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:43px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:37px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:29px'></div></span>","null","stimulus","{""index"":36,""type"":""experimental"",""array_length"":10,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","182","1456103","0.0-182.0","668c0bc95fadbd0e93071351","9497","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":37,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","9497","9497","true","blue17.jpg","16","exp","500","blue","20","[12,14,15,15,15,15,15,19,20,21,21,21,22,22,23,23,27,28,31,31]","22","Three giraffes standing together.","58","blue","",""
"html-keyboard-response","183","1456617","0.0-183.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","184","1458131","0.0-184.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2900% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:49px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":37,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","185","1463915","0.0-185.0","668c0bc95fadbd0e93071351","5782","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":38,""type"":""experimental"",""array_length"":2,""meanVal"":33,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5782","5782","true","blue26.jpg","25","exp","500","blue","2","[29,37]","33","Three giraffes standing together.","59","blue","",""
"html-keyboard-response","186","1464328","0.0-186.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","187","1465841","0.0-187.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:2600% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:43px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:25px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:32px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:36px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:38px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:38px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:27px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:22px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:35px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:49px'></div></span>","null","stimulus","{""index"":38,""type"":""experimental"",""array_length"":2,""meanVal"":33,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","188","1477988","0.0-188.0","668c0bc95fadbd0e93071351","12144","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":39,""type"":""experimental"",""array_length"":20,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","12144","12144","true","blue25.jpg","24","exp","400","blue","20","[15,17,18,18,18,18,18,22,23,24,24,24,25,25,26,26,30,31,34,34]","25","Three giraffes standing together.","60","blue","",""
"html-keyboard-response","189","1478396","0.0-189.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","190","1479902","0.0-190.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1200% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":39,""type"":""experimental"",""array_length"":20,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","191","1490266","0.0-191.0","668c0bc95fadbd0e93071351","10362","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":40,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","10362","10362","true","blue17.jpg","16","exp","400","blue","2","[12,20]","16","Three giraffes standing together.","61","blue","",""
"html-keyboard-response","192","1490780","0.0-192.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","193","1492291","0.0-193.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:1700% 0%;margin-top:27px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:33px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:28px'></div> <div class='blue' style='background-position:900% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:41px'></div> <div> </div></span>","null","stimulus","{""index"":40,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","194","1499869","0.0-194.0","668c0bc95fadbd0e93071351","7577","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":41,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7577","7577","true","blue18.jpg","17","exp","500","blue","10","[9,13,10,16,17,20,21,24,25,27]","18","Three giraffes standing together.","62","blue","",""
"html-keyboard-response","195","1500480","0.0-195.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","196","1501989","0.0-196.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:25px'></div> <div class='blue' style='background-position:900% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:50px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:25px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:37px'></div></span>","null","stimulus","{""index"":41,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","197","1508137","0.0-197.0","668c0bc95fadbd0e93071351","6145","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":42,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6145","6145","true","blue15.jpg","14","exp","600","blue","10","[9,13,10,16,17,20,21,24,25,27]","18","Three giraffes standing together.","63","blue","",""
"html-keyboard-response","198","1508650","0.0-198.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","199","1510155","0.0-199.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":42,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","200","1518818","0.0-200.0","668c0bc95fadbd0e93071351","8660","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":43,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","8660","8660","true","blue19.jpg","18","exp","500","blue","2","[22,30]","26","Three giraffes standing together.","64","blue","",""
"html-keyboard-response","201","1519430","0.0-201.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","202","1520944","0.0-202.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:50px'></div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":43,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","203","1525154","0.0-203.0","668c0bc95fadbd0e93071351","4208","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":44,""type"":""experimental"",""array_length"":2,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4208","4208","true","blue21.jpg","20","exp","600","blue","2","[21,29]","25","Three giraffes standing together.","65","blue","",""
"html-keyboard-response","204","1525660","0.0-204.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","205","1527162","0.0-205.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='blue' style='background-position:1600% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:40px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:23px'></div> <div class='blue' style='background-position:1000% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:44px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:37px'></div> <div> </div></span>","null","stimulus","{""index"":44,""type"":""experimental"",""array_length"":2,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","206","1537378","0.0-206.0","668c0bc95fadbd0e93071351","10213","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":45,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","10213","10213","true","blue12.jpg","11","exp","500","blue","10","[9,13,10,16,17,20,21,24,25,27]","18","Three giraffes standing together.","66","blue","",""
"html-keyboard-response","207","1537995","0.0-207.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","208","1539507","0.0-208.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:49px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:33px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:48px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:38px'></div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:49px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:33px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:37px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:39px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:26px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:43px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:31px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:45px'></div></span>","null","stimulus","{""index"":45,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","209","1550936","0.0-209.0","668c0bc95fadbd0e93071351","11426","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":46,""type"":""experimental"",""array_length"":20,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","11426","11426","true","blue17.jpg","16","exp","600","blue","20","[16,18,19,19,19,19,19,23,24,25,25,25,26,26,27,27,31,32,35,35]","26","Three giraffes standing together.","67","blue","",""
"html-keyboard-response","210","1551347","0.0-210.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"html-keyboard-response","211","1552853","0.0-211.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":46,""type"":""experimental"",""array_length"":20,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","blue","",""
"image-slider-response_noButton","212","1559737","0.0-212.0","668c0bc95fadbd0e93071351","6881","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":47,""type"":""experimental"",""array_length"":2,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>how blue did the array felt to you?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","6881","6881","true","blue15.jpg","14","exp","400","blue","2","[21,29]","25","Three giraffes standing together.","68","blue","",""
"survey-text","213","1584657","0.0-213.0-0.0","668c0bc95fadbd0e93071351","24915","","","{""Q0"":""sky""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","214","1585271","0.0-214.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","215","1586788","0.0-215.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:800% 0%;margin-top:25px'></div> <div class='red' style='background-position:1100% 0%;margin-top:35px'></div> <div class='red' style='background-position:1100% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:33px'></div> <div class='red' style='background-position:1800% 0%;margin-top:44px'></div> <div class='red' style='background-position:1100% 0%;margin-top:32px'></div> <div class='red' style='background-position:1100% 0%;margin-top:42px'></div> <div class='red' style='background-position:2700% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:38px'></div> <div class='red' style='background-position:1700% 0%;margin-top:20px'></div> <div class='red' style='background-position:1500% 0%;margin-top:33px'></div> <div class='red' style='background-position:1900% 0%;margin-top:35px'></div> <div class='red' style='background-position:2400% 0%;margin-top:25px'></div> <div class='red' style='background-position:1800% 0%;margin-top:40px'></div> <div class='red' style='background-position:1100% 0%;margin-top:50px'></div> <div class='red' style='background-position:1700% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:21px'></div> <div class='red' style='background-position:2700% 0%;margin-top:44px'></div> <div class='red' style='background-position:2300% 0%;margin-top:26px'></div> <div class='red' style='background-position:1000% 0%;margin-top:38px'></div></span>","null","stimulus","{""index"":47,""type"":""experimental"",""array_length"":2,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","216","1597904","0.0-216.0","668c0bc95fadbd0e93071351","11114","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":48,""type"":""experimental"",""array_length"":20,""meanVal"":18,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","11114","11114","true","red8.jpg","7","exp","600","red","20","[8,10,11,11,11,11,11,15,16,17,17,17,18,18,19,19,23,24,27,27]","18","Three giraffes standing together.","69","red","",""
"html-keyboard-response","217","1598313","0.0-217.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","218","1599822","0.0-218.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":48,""type"":""experimental"",""array_length"":20,""meanVal"":18,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","219","1606232","0.0-219.0","668c0bc95fadbd0e93071351","6407","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":49,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6407","6407","true","red13.jpg","12","exp","400","red","2","[18,26]","22","Three giraffes standing together.","70","red","",""
"html-keyboard-response","220","1606738","0.0-220.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","221","1608247","0.0-221.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:1200% 0%;margin-top:38px'></div> <div class='red' style='background-position:1800% 0%;margin-top:21px'></div> <div class='red' style='background-position:2400% 0%;margin-top:38px'></div> <div class='red' style='background-position:1200% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:37px'></div> <div class='red' style='background-position:1900% 0%;margin-top:45px'></div> <div class='red' style='background-position:2500% 0%;margin-top:35px'></div> <div class='red' style='background-position:1900% 0%;margin-top:42px'></div> <div class='red' style='background-position:1200% 0%;margin-top:41px'></div> <div class='red' style='background-position:1200% 0%;margin-top:35px'></div> <div class='red' style='background-position:1600% 0%;margin-top:46px'></div> <div class='red' style='background-position:2800% 0%;margin-top:26px'></div> <div class='red' style='background-position:1100% 0%;margin-top:29px'></div> <div class='red' style='background-position:1800% 0%;margin-top:23px'></div> <div class='red' style='background-position:1700% 0%;margin-top:29px'></div> <div class='red' style='background-position:1800% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:48px'></div> <div class='red' style='background-position:900% 0%;margin-top:22px'></div> <div class='red' style='background-position:2000% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:33px'></div></span>","null","stimulus","{""index"":49,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","222","1612735","0.0-222.0","668c0bc95fadbd0e93071351","4487","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":50,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4487","4487","true","red14.jpg","13","exp","500","red","20","[9,11,12,12,12,12,12,16,17,18,18,18,19,19,20,20,24,25,28,28]","19","Three giraffes standing together.","71","red","",""
"html-keyboard-response","223","1613144","0.0-223.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","224","1614649","0.0-224.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:33px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":50,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","225","1618053","0.0-225.0","668c0bc95fadbd0e93071351","3402","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":51,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3402","3402","true","red10.jpg","9","exp","400","red","2","[12,20]","16","Three giraffes standing together.","72","red","",""
"html-keyboard-response","226","1618461","0.0-226.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","227","1619974","0.0-227.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:50px'></div> <div class='red' style='background-position:3000% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:40px'></div> <div class='red' style='background-position:2500% 0%;margin-top:28px'></div> <div class='red' style='background-position:3300% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:47px'></div> <div class='red' style='background-position:2600% 0%;margin-top:43px'></div> <div class='red' style='background-position:1800% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:48px'></div> <div class='red' style='background-position:3600% 0%;margin-top:40px'></div></span>","null","stimulus","{""index"":51,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","228","1624270","0.0-228.0","668c0bc95fadbd0e93071351","4293","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":52,""type"":""experimental"",""array_length"":10,""meanVal"":27,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4293","4293","true","red18.jpg","17","exp","400","red","10","[18,22,19,25,26,29,30,33,34,36]","27","Three giraffes standing together.","73","red","",""
"html-keyboard-response","229","1624679","0.0-229.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","230","1626194","0.0-230.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3000% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":52,""type"":""experimental"",""array_length"":10,""meanVal"":27,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","231","1629719","0.0-231.0","668c0bc95fadbd0e93071351","3523","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":53,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3523","3523","true","red25.jpg","24","exp","400","red","2","[30,38]","34","Three giraffes standing together.","74","red","",""
"html-keyboard-response","232","1630231","0.0-232.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","233","1631748","0.0-233.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3800% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":53,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","234","1636769","0.0-234.0","668c0bc95fadbd0e93071351","5020","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":54,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5020","5020","true","red28.jpg","27","exp","500","red","2","[30,38]","34","Three giraffes standing together.","75","red","",""
"html-keyboard-response","235","1637385","0.0-235.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","236","1638900","0.0-236.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:50px'></div> <div class='red' style='background-position:1300% 0%;margin-top:31px'></div> <div class='red' style='background-position:2800% 0%;margin-top:50px'></div> <div class='red' style='background-position:1200% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:30px'></div> <div class='red' style='background-position:3000% 0%;margin-top:50px'></div> <div class='red' style='background-position:2400% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:45px'></div> <div class='red' style='background-position:2700% 0%;margin-top:36px'></div></span>","null","stimulus","{""index"":54,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","237","1643061","0.0-237.0","668c0bc95fadbd0e93071351","4158","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":55,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4158","4158","true","red18.jpg","17","exp","600","red","10","[12,16,13,19,20,23,24,27,28,30]","21","Three giraffes standing together.","76","red","",""
"html-keyboard-response","238","1643671","0.0-238.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","239","1645178","0.0-239.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:22px'></div> <div> </div></span>","null","stimulus","{""index"":55,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","240","1650589","0.0-240.0","668c0bc95fadbd0e93071351","5408","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":56,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5408","5408","true","red14.jpg","13","exp","600","red","2","[22,30]","26","Three giraffes standing together.","77","red","",""
"html-keyboard-response","241","1651094","0.0-241.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","242","1652608","0.0-242.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:1800% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:50px'></div> <div class='red' style='background-position:2400% 0%;margin-top:47px'></div> <div class='red' style='background-position:2000% 0%;margin-top:27px'></div> <div class='red' style='background-position:1800% 0%;margin-top:35px'></div> <div class='red' style='background-position:1700% 0%;margin-top:24px'></div> <div class='red' style='background-position:2000% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:44px'></div> <div class='red' style='background-position:900% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:26px'></div> <div class='red' style='background-position:1200% 0%;margin-top:45px'></div> <div class='red' style='background-position:1200% 0%;margin-top:36px'></div> <div class='red' style='background-position:1200% 0%;margin-top:38px'></div> <div class='red' style='background-position:1900% 0%;margin-top:29px'></div> <div class='red' style='background-position:1600% 0%;margin-top:34px'></div> <div class='red' style='background-position:1200% 0%;margin-top:36px'></div> <div class='red' style='background-position:2800% 0%;margin-top:20px'></div> <div class='red' style='background-position:2800% 0%;margin-top:32px'></div> <div class='red' style='background-position:2500% 0%;margin-top:42px'></div> <div class='red' style='background-position:1100% 0%;margin-top:44px'></div></span>","null","stimulus","{""index"":56,""type"":""experimental"",""array_length"":2,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","243","1657897","0.0-243.0","668c0bc95fadbd0e93071351","5286","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":57,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5286","5286","true","red9.jpg","8","exp","500","red","20","[9,11,12,12,12,12,12,16,17,18,18,18,19,19,20,20,24,25,28,28]","19","Three giraffes standing together.","78","red","",""
"html-keyboard-response","244","1658303","0.0-244.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","245","1659806","0.0-245.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:2500% 0%;margin-top:21px'></div> <div class='red' style='background-position:3800% 0%;margin-top:44px'></div> <div class='red' style='background-position:2500% 0%;margin-top:41px'></div> <div class='red' style='background-position:3300% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:48px'></div> <div class='red' style='background-position:2500% 0%;margin-top:34px'></div> <div class='red' style='background-position:3200% 0%;margin-top:27px'></div> <div class='red' style='background-position:3200% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:46px'></div> <div class='red' style='background-position:2400% 0%;margin-top:33px'></div> <div class='red' style='background-position:3700% 0%;margin-top:50px'></div> <div class='red' style='background-position:3000% 0%;margin-top:30px'></div> <div class='red' style='background-position:4100% 0%;margin-top:23px'></div> <div class='red' style='background-position:4100% 0%;margin-top:23px'></div> <div class='red' style='background-position:3100% 0%;margin-top:43px'></div> <div class='red' style='background-position:3100% 0%;margin-top:25px'></div> <div class='red' style='background-position:2900% 0%;margin-top:48px'></div> <div class='red' style='background-position:3300% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:44px'></div> <div class='red' style='background-position:2500% 0%;margin-top:26px'></div></span>","null","stimulus","{""index"":57,""type"":""experimental"",""array_length"":20,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","246","1666963","0.0-246.0","668c0bc95fadbd0e93071351","7155","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":58,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7155","7155","true","red16.jpg","15","exp","400","red","20","[22,24,25,25,25,25,25,29,30,31,31,31,32,32,33,33,37,38,41,41]","32","Three giraffes standing together.","79","red","",""
"html-keyboard-response","247","1667369","0.0-247.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","248","1668875","0.0-248.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:2200% 0%;margin-top:22px'></div> <div class='red' style='background-position:2300% 0%;margin-top:37px'></div> <div class='red' style='background-position:2900% 0%;margin-top:45px'></div> <div class='red' style='background-position:3000% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:47px'></div> <div class='red' style='background-position:3400% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:41px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:31px'></div> <div class='red' style='background-position:2600% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:38px'></div> <div> </div></span>","null","stimulus","{""index"":58,""type"":""experimental"",""array_length"":20,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","249","1696503","0.0-249.0","668c0bc95fadbd0e93071351","27625","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":59,""type"":""experimental"",""array_length"":10,""meanVal"":31,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","27625","27625","true","red17.jpg","16","exp","400","red","10","[22,26,23,29,30,33,34,37,38,40]","31","Three giraffes standing together.","80","red","",""
"html-keyboard-response","250","1697008","0.0-250.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","251","1698521","0.0-251.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:2600% 0%;margin-top:22px'></div> <div class='red' style='background-position:2100% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:44px'></div> <div class='red' style='background-position:2200% 0%;margin-top:21px'></div> <div class='red' style='background-position:1800% 0%;margin-top:45px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:31px'></div> <div class='red' style='background-position:1500% 0%;margin-top:26px'></div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:37px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":59,""type"":""experimental"",""array_length"":10,""meanVal"":31,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","252","1706782","0.0-252.0","668c0bc95fadbd0e93071351","8259","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":60,""type"":""experimental"",""array_length"":10,""meanVal"":23,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","8259","8259","true","red12.jpg","11","exp","500","red","10","[14,18,15,21,22,25,26,29,30,32]","23","Three giraffes standing together.","81","red","",""
"html-keyboard-response","253","1707192","0.0-253.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","254","1708707","0.0-254.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:2400% 0%;margin-top:38px'></div> <div class='red' style='background-position:4000% 0%;margin-top:21px'></div> <div class='red' style='background-position:4200% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:47px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:36px'></div> <div class='red' style='background-position:3500% 0%;margin-top:45px'></div></span>","null","stimulus","{""index"":60,""type"":""experimental"",""array_length"":10,""meanVal"":23,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","255","1713367","0.0-255.0","668c0bc95fadbd0e93071351","4658","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":61,""type"":""experimental"",""array_length"":10,""meanVal"":33,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4658","4658","true","red22.jpg","21","exp","400","red","10","[24,28,25,31,32,35,36,39,40,42]","33","Three giraffes standing together.","82","red","",""
"html-keyboard-response","256","1713980","0.0-256.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","257","1715492","0.0-257.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:3500% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4200% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:23px'></div> <div class='red' style='background-position:3900% 0%;margin-top:20px'></div> <div class='red' style='background-position:2800% 0%;margin-top:47px'></div> <div class='red' style='background-position:3100% 0%;margin-top:23px'></div> <div class='red' style='background-position:2500% 0%;margin-top:30px'></div> <div class='red' style='background-position:2400% 0%;margin-top:38px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":61,""type"":""experimental"",""array_length"":10,""meanVal"":33,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","258","1721034","0.0-258.0","668c0bc95fadbd0e93071351","5539","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":62,""type"":""experimental"",""array_length"":10,""meanVal"":33,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5539","5539","true","red17.jpg","16","exp","600","red","10","[24,28,25,31,32,35,36,39,40,42]","33","Three giraffes standing together.","83","red","",""
"html-keyboard-response","259","1721651","0.0-259.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","260","1723159","0.0-260.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":62,""type"":""experimental"",""array_length"":10,""meanVal"":33,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","261","1732293","0.0-261.0","668c0bc95fadbd0e93071351","9131","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":63,""type"":""experimental"",""array_length"":2,""meanVal"":19,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9131","9131","true","red13.jpg","12","exp","600","red","2","[15,23]","19","Three giraffes standing together.","84","red","",""
"html-keyboard-response","262","1732895","0.0-262.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","263","1734405","0.0-263.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":63,""type"":""experimental"",""array_length"":2,""meanVal"":19,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","264","1738479","0.0-264.0","668c0bc95fadbd0e93071351","4072","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":64,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4072","4072","true","red17.jpg","16","exp","600","red","2","[23,31]","27","Three giraffes standing together.","85","red","",""
"html-keyboard-response","265","1739087","0.0-265.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","266","1740598","0.0-266.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:2700% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:47px'></div> <div class='red' style='background-position:1900% 0%;margin-top:39px'></div> <div class='red' style='background-position:1600% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:28px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:28px'></div> <div class='red' style='background-position:3000% 0%;margin-top:34px'></div></span>","null","stimulus","{""index"":64,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","267","1745087","0.0-267.0","668c0bc95fadbd0e93071351","4486","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":65,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4486","4486","true","red20.jpg","19","exp","600","red","10","[12,16,13,19,20,23,24,27,28,30]","21","Three giraffes standing together.","86","red","",""
"html-keyboard-response","268","1745697","0.0-268.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","269","1747202","0.0-269.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:2800% 0%;margin-top:20px'></div> <div class='red' style='background-position:3500% 0%;margin-top:31px'></div> <div class='red' style='background-position:4000% 0%;margin-top:38px'></div> <div class='red' style='background-position:3400% 0%;margin-top:31px'></div> <div class='red' style='background-position:3600% 0%;margin-top:39px'></div> <div class='red' style='background-position:2800% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:49px'></div> <div class='red' style='background-position:2800% 0%;margin-top:32px'></div> <div class='red' style='background-position:4400% 0%;margin-top:30px'></div> <div class='red' style='background-position:3500% 0%;margin-top:35px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:27px'></div> <div class='red' style='background-position:2500% 0%;margin-top:26px'></div> <div class='red' style='background-position:3300% 0%;margin-top:41px'></div> <div class='red' style='background-position:2800% 0%;margin-top:27px'></div> <div class='red' style='background-position:3200% 0%;margin-top:43px'></div> <div class='red' style='background-position:3400% 0%;margin-top:26px'></div> <div class='red' style='background-position:4400% 0%;margin-top:42px'></div> <div class='red' style='background-position:2800% 0%;margin-top:39px'></div> <div class='red' style='background-position:2700% 0%;margin-top:26px'></div></span>","null","stimulus","{""index"":65,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","270","1754430","0.0-270.0","668c0bc95fadbd0e93071351","7226","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":66,""type"":""experimental"",""array_length"":20,""meanVal"":35,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7226","7226","true","red20.jpg","19","exp","600","red","20","[25,27,28,28,28,28,28,32,33,34,34,34,35,35,36,36,40,41,44,44]","35","Three giraffes standing together.","87","red","",""
"html-keyboard-response","271","1754941","0.0-271.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","272","1756451","0.0-272.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:28px'></div></span>","null","stimulus","{""index"":66,""type"":""experimental"",""array_length"":20,""meanVal"":35,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","273","1759587","0.0-273.0","668c0bc95fadbd0e93071351","3135","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":67,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3135","3135","true","red10.jpg","9","exp","500","red","2","[12,20]","16","Three giraffes standing together.","88","red","",""
"html-keyboard-response","274","1760093","0.0-274.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","275","1761607","0.0-275.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:700% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:29px'></div> <div class='red' style='background-position:1800% 0%;margin-top:45px'></div> <div class='red' style='background-position:1500% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:24px'></div> <div class='red' style='background-position:800% 0%;margin-top:28px'></div> <div class='red' style='background-position:2200% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:31px'></div> <div> </div></span>","null","stimulus","{""index"":67,""type"":""experimental"",""array_length"":2,""meanVal"":16,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","276","1772369","0.0-276.0","668c0bc95fadbd0e93071351","10760","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":68,""type"":""experimental"",""array_length"":10,""meanVal"":16,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","10760","10760","true","red6.jpg","5","exp","500","red","10","[7,11,8,14,15,18,19,22,23,25]","16","Three giraffes standing together.","89","red","",""
"html-keyboard-response","277","1772780","0.0-277.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","278","1774285","0.0-278.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:700% 0%;margin-top:37px'></div> <div class='red' style='background-position:1200% 0%;margin-top:31px'></div> <div class='red' style='background-position:1500% 0%;margin-top:25px'></div> <div class='red' style='background-position:1100% 0%;margin-top:25px'></div> <div class='red' style='background-position:2300% 0%;margin-top:39px'></div> <div class='red' style='background-position:1400% 0%;margin-top:47px'></div> <div class='red' style='background-position:2000% 0%;margin-top:42px'></div> <div class='red' style='background-position:700% 0%;margin-top:21px'></div> <div class='red' style='background-position:1900% 0%;margin-top:50px'></div> <div class='red' style='background-position:1300% 0%;margin-top:21px'></div> <div class='red' style='background-position:1300% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:700% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:21px'></div> <div class='red' style='background-position:600% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:700% 0%;margin-top:27px'></div> <div class='red' style='background-position:400% 0%;margin-top:44px'></div> <div class='red' style='background-position:1500% 0%;margin-top:29px'></div> <div class='red' style='background-position:1400% 0%;margin-top:50px'></div> <div class='red' style='background-position:2300% 0%;margin-top:50px'></div> <div class='red' style='background-position:700% 0%;margin-top:32px'></div></span>","null","stimulus","{""index"":68,""type"":""experimental"",""array_length"":10,""meanVal"":16,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","279","1777950","0.0-279.0","668c0bc95fadbd0e93071351","3663","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":69,""type"":""experimental"",""array_length"":20,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3663","3663","true","red2.jpg","1","exp","400","red","20","[4,6,7,7,7,7,7,11,12,13,13,13,14,14,15,15,19,20,23,23]","14","Three giraffes standing together.","90","red","",""
"html-keyboard-response","280","1778360","0.0-280.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","281","1779873","0.0-281.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:2300% 0%;margin-top:46px'></div> <div class='red' style='background-position:1700% 0%;margin-top:50px'></div> <div class='red' style='background-position:600% 0%;margin-top:38px'></div> <div class='red' style='background-position:1200% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div class='red' style='background-position:900% 0%;margin-top:47px'></div> <div class='red' style='background-position:500% 0%;margin-top:42px'></div> <div class='red' style='background-position:1600% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:28px'></div> <div class='red' style='background-position:2000% 0%;margin-top:30px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":69,""type"":""experimental"",""array_length"":20,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","282","1787312","0.0-282.0","668c0bc95fadbd0e93071351","7436","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":70,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7436","7436","true","red7.jpg","6","exp","400","red","10","[5,9,6,12,13,16,17,20,21,23]","14","Three giraffes standing together.","91","red","",""
"html-keyboard-response","283","1787924","0.0-283.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","284","1789433","0.0-284.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:3000% 0%;margin-top:30px'></div> <div class='red' style='background-position:2800% 0%;margin-top:38px'></div> <div class='red' style='background-position:2900% 0%;margin-top:44px'></div> <div class='red' style='background-position:2600% 0%;margin-top:29px'></div> <div class='red' style='background-position:3000% 0%;margin-top:39px'></div> <div class='red' style='background-position:2900% 0%;margin-top:31px'></div> <div class='red' style='background-position:3800% 0%;margin-top:39px'></div> <div class='red' style='background-position:3500% 0%;margin-top:28px'></div> <div class='red' style='background-position:3400% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:28px'></div> <div class='red' style='background-position:2200% 0%;margin-top:48px'></div> <div class='red' style='background-position:2800% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:20px'></div> <div class='red' style='background-position:2200% 0%;margin-top:33px'></div> <div class='red' style='background-position:2100% 0%;margin-top:21px'></div> <div class='red' style='background-position:3800% 0%;margin-top:42px'></div> <div class='red' style='background-position:2200% 0%;margin-top:40px'></div> <div class='red' style='background-position:2200% 0%;margin-top:35px'></div> <div class='red' style='background-position:2800% 0%;margin-top:31px'></div> <div class='red' style='background-position:2700% 0%;margin-top:38px'></div> <div> </div></span>","null","stimulus","{""index"":70,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","285","1795935","0.0-285.0","668c0bc95fadbd0e93071351","6500","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":71,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6500","6500","true","red11.jpg","10","exp","600","red","20","[19,21,22,22,22,22,22,26,27,28,28,28,29,29,30,30,34,35,38,38]","29","Three giraffes standing together.","92","red","",""
"html-keyboard-response","286","1796450","0.0-286.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","287","1797965","0.0-287.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:2300% 0%;margin-top:50px'></div> <div class='red' style='background-position:2700% 0%;margin-top:26px'></div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:28px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:20px'></div> <div class='red' style='background-position:1200% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:50px'></div> <div class='red' style='background-position:2000% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:42px'></div></span>","null","stimulus","{""index"":71,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","288","1804747","0.0-288.0","668c0bc95fadbd0e93071351","6780","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":72,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6780","6780","true","red13.jpg","12","exp","500","red","10","[12,16,13,19,20,23,24,27,28,30]","21","Three giraffes standing together.","93","red","",""
"html-keyboard-response","289","1805163","0.0-289.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","290","1806679","0.0-290.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1700% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:46px'></div></span>","null","stimulus","{""index"":72,""type"":""experimental"",""array_length"":10,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","291","1809103","0.0-291.0","668c0bc95fadbd0e93071351","2421","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":73,""type"":""experimental"",""array_length"":2,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2421","2421","true","red14.jpg","13","exp","400","red","2","[17,25]","21","Three giraffes standing together.","94","red","",""
"html-keyboard-response","292","1809711","0.0-292.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","293","1811225","0.0-293.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:34px'></div> <div class='red' style='background-position:1700% 0%;margin-top:38px'></div> <div class='red' style='background-position:2000% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:49px'></div> <div class='red' style='background-position:1600% 0%;margin-top:41px'></div> <div class='red' style='background-position:1300% 0%;margin-top:40px'></div> <div class='red' style='background-position:2400% 0%;margin-top:26px'></div> <div class='red' style='background-position:900% 0%;margin-top:34px'></div> <div class='red' style='background-position:1000% 0%;margin-top:39px'></div> <div class='red' style='background-position:2700% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":73,""type"":""experimental"",""array_length"":2,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","294","1818552","0.0-294.0","668c0bc95fadbd0e93071351","7325","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":74,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7325","7325","true","red16.jpg","15","exp","600","red","10","[9,13,10,16,17,20,21,24,25,27]","18","Three giraffes standing together.","95","red","",""
"html-keyboard-response","295","1819163","0.0-295.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","296","1820673","0.0-296.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:20px'></div> <div class='red' style='background-position:1500% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:34px'></div> <div class='red' style='background-position:3100% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:27px'></div> <div class='red' style='background-position:1900% 0%;margin-top:50px'></div> <div class='red' style='background-position:3300% 0%;margin-top:30px'></div> <div class='red' style='background-position:2200% 0%;margin-top:37px'></div> <div> </div></span>","null","stimulus","{""index"":74,""type"":""experimental"",""array_length"":10,""meanVal"":18,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","297","1828603","0.0-297.0","668c0bc95fadbd0e93071351","7927","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":75,""type"":""experimental"",""array_length"":10,""meanVal"":24,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","7927","7927","true","red13.jpg","12","exp","600","red","10","[15,19,16,22,23,26,27,30,31,33]","24","Three giraffes standing together.","96","red","",""
"html-keyboard-response","298","1829019","0.0-298.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","299","1830536","0.0-299.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2500% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:42px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":75,""type"":""experimental"",""array_length"":10,""meanVal"":24,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","300","1839894","0.0-300.0","668c0bc95fadbd0e93071351","9356","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":76,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9356","9356","true","red23.jpg","22","exp","400","red","2","[25,33]","29","Three giraffes standing together.","97","red","",""
"html-keyboard-response","301","1840310","0.0-301.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","302","1841818","0.0-302.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:1400% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:47px'></div> <div class='red' style='background-position:1500% 0%;margin-top:25px'></div> <div class='red' style='background-position:1200% 0%;margin-top:50px'></div> <div class='red' style='background-position:2100% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:42px'></div> <div class='red' style='background-position:2100% 0%;margin-top:23px'></div> <div class='red' style='background-position:3100% 0%;margin-top:46px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:33px'></div> <div class='red' style='background-position:2300% 0%;margin-top:36px'></div> <div class='red' style='background-position:1900% 0%;margin-top:27px'></div> <div class='red' style='background-position:2100% 0%;margin-top:31px'></div> <div class='red' style='background-position:1500% 0%;margin-top:36px'></div> <div class='red' style='background-position:2000% 0%;margin-top:21px'></div> <div class='red' style='background-position:3100% 0%;margin-top:31px'></div> <div class='red' style='background-position:2300% 0%;margin-top:31px'></div> <div class='red' style='background-position:2200% 0%;margin-top:47px'></div> <div class='red' style='background-position:2800% 0%;margin-top:21px'></div> <div class='red' style='background-position:2700% 0%;margin-top:50px'></div> <div class='red' style='background-position:1500% 0%;margin-top:20px'></div></span>","null","stimulus","{""index"":76,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","303","1848047","0.0-303.0","668c0bc95fadbd0e93071351","6227","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":77,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6227","6227","true","red11.jpg","10","exp","400","red","20","[12,14,15,15,15,15,15,19,20,21,21,21,22,22,23,23,27,28,31,31]","22","Three giraffes standing together.","98","red","",""
"html-keyboard-response","304","1848559","0.0-304.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","305","1850072","0.0-305.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:1300% 0%;margin-top:35px'></div> <div class='red' style='background-position:1300% 0%;margin-top:44px'></div> <div class='red' style='background-position:2100% 0%;margin-top:21px'></div> <div class='red' style='background-position:1000% 0%;margin-top:28px'></div> <div class='red' style='background-position:1800% 0%;margin-top:42px'></div> <div class='red' style='background-position:1300% 0%;margin-top:25px'></div> <div class='red' style='background-position:1300% 0%;margin-top:20px'></div> <div class='red' style='background-position:2000% 0%;margin-top:24px'></div> <div class='red' style='background-position:1200% 0%;margin-top:31px'></div> <div class='red' style='background-position:2500% 0%;margin-top:33px'></div> <div class='red' style='background-position:2900% 0%;margin-top:42px'></div> <div class='red' style='background-position:1900% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:44px'></div> <div class='red' style='background-position:2900% 0%;margin-top:32px'></div> <div class='red' style='background-position:1300% 0%;margin-top:41px'></div> <div class='red' style='background-position:2000% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:32px'></div> <div class='red' style='background-position:1900% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:21px'></div> <div class='red' style='background-position:2100% 0%;margin-top:38px'></div></span>","null","stimulus","{""index"":77,""type"":""experimental"",""array_length"":20,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","306","1863329","0.0-306.0","668c0bc95fadbd0e93071351","13256","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":78,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","13256","13256","true","red16.jpg","15","exp","500","red","20","[10,12,13,13,13,13,13,17,18,19,19,19,20,20,21,21,25,26,29,29]","20","Three giraffes standing together.","99","red","",""
"html-keyboard-response","307","1863743","0.0-307.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","308","1865255","0.0-308.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:1800% 0%;margin-top:40px'></div> <div class='red' style='background-position:1500% 0%;margin-top:40px'></div> <div class='red' style='background-position:2900% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:26px'></div> <div class='red' style='background-position:2500% 0%;margin-top:39px'></div> <div class='red' style='background-position:2200% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:40px'></div> <div class='red' style='background-position:2100% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:43px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:50px'></div></span>","null","stimulus","{""index"":78,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","309","1882569","0.0-309.0","668c0bc95fadbd0e93071351","17312","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":79,""type"":""experimental"",""array_length"":10,""meanVal"":23,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","17312","17312","true","red17.jpg","16","exp","400","red","10","[14,18,15,21,22,25,26,29,30,32]","23","Three giraffes standing together.","100","red","",""
"html-keyboard-response","310","1883173","0.0-310.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","311","1884689","0.0-311.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:2800% 0%;margin-top:28px'></div> <div class='red' style='background-position:3500% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:27px'></div> <div class='red' style='background-position:2100% 0%;margin-top:29px'></div> <div class='red' style='background-position:3200% 0%;margin-top:31px'></div> <div class='red' style='background-position:2400% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:25px'></div></span>","null","stimulus","{""index"":79,""type"":""experimental"",""array_length"":10,""meanVal"":23,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","312","1893954","0.0-312.0","668c0bc95fadbd0e93071351","9264","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":80,""type"":""experimental"",""array_length"":10,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9264","9264","true","red22.jpg","21","exp","600","red","10","[20,24,21,27,28,31,32,35,36,38]","29","Three giraffes standing together.","101","red","",""
"html-keyboard-response","313","1894467","0.0-313.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","314","1895979","0.0-314.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:1900% 0%;margin-top:43px'></div> <div class='red' style='background-position:2200% 0%;margin-top:42px'></div> <div class='red' style='background-position:3500% 0%;margin-top:31px'></div> <div class='red' style='background-position:2200% 0%;margin-top:28px'></div> <div class='red' style='background-position:3800% 0%;margin-top:36px'></div> <div class='red' style='background-position:3400% 0%;margin-top:35px'></div> <div class='red' style='background-position:3000% 0%;margin-top:47px'></div> <div class='red' style='background-position:3000% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:39px'></div> <div class='red' style='background-position:2200% 0%;margin-top:48px'></div> <div class='red' style='background-position:2200% 0%;margin-top:41px'></div> <div class='red' style='background-position:2800% 0%;margin-top:28px'></div> <div class='red' style='background-position:2600% 0%;margin-top:42px'></div> <div class='red' style='background-position:2900% 0%;margin-top:33px'></div> <div class='red' style='background-position:3800% 0%;margin-top:25px'></div> <div class='red' style='background-position:2800% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:40px'></div> <div class='red' style='background-position:2700% 0%;margin-top:49px'></div> <div class='red' style='background-position:2200% 0%;margin-top:28px'></div> <div class='red' style='background-position:2100% 0%;margin-top:28px'></div></span>","null","stimulus","{""index"":80,""type"":""experimental"",""array_length"":10,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","315","1908547","0.0-315.0","668c0bc95fadbd0e93071351","12566","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":81,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","12566","12566","true","red16.jpg","15","exp","500","red","20","[19,21,22,22,22,22,22,26,27,28,28,28,29,29,30,30,34,35,38,38]","29","Three giraffes standing together.","102","red","",""
"html-keyboard-response","316","1909060","0.0-316.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","317","1910565","0.0-317.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":81,""type"":""experimental"",""array_length"":20,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","318","1915336","0.0-318.0","668c0bc95fadbd0e93071351","4770","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":82,""type"":""experimental"",""array_length"":2,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4770","4770","true","red13.jpg","12","exp","500","red","2","[17,25]","21","Three giraffes standing together.","103","red","",""
"html-keyboard-response","319","1915844","0.0-319.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","320","1917352","0.0-320.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:45px'></div> <div class='red' style='background-position:2200% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":82,""type"":""experimental"",""array_length"":2,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","321","1921114","0.0-321.0","668c0bc95fadbd0e93071351","3760","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":83,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3760","3760","true","red9.jpg","8","exp","500","red","2","[14,22]","18","Three giraffes standing together.","104","red","",""
"html-keyboard-response","322","1921529","0.0-322.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","323","1923043","0.0-323.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:2900% 0%;margin-top:28px'></div> <div class='red' style='background-position:1300% 0%;margin-top:34px'></div> <div class='red' style='background-position:1300% 0%;margin-top:35px'></div> <div class='red' style='background-position:2100% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:37px'></div> <div class='red' style='background-position:1200% 0%;margin-top:45px'></div> <div class='red' style='background-position:1900% 0%;margin-top:20px'></div> <div class='red' style='background-position:1300% 0%;margin-top:34px'></div> <div class='red' style='background-position:1700% 0%;margin-top:30px'></div> <div class='red' style='background-position:2100% 0%;margin-top:40px'></div> <div class='red' style='background-position:1000% 0%;margin-top:49px'></div> <div class='red' style='background-position:2000% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:20px'></div> <div class='red' style='background-position:2500% 0%;margin-top:27px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:26px'></div> <div class='red' style='background-position:2900% 0%;margin-top:44px'></div> <div class='red' style='background-position:1900% 0%;margin-top:25px'></div> <div class='red' style='background-position:2000% 0%;margin-top:24px'></div> <div class='red' style='background-position:1300% 0%;margin-top:30px'></div> <div class='red' style='background-position:1800% 0%;margin-top:21px'></div></span>","null","stimulus","{""index"":83,""type"":""experimental"",""array_length"":2,""meanVal"":18,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","324","1972648","0.0-324.0","668c0bc95fadbd0e93071351","49603","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":84,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","49603","49603","true","red15.jpg","14","exp","400","red","20","[10,12,13,13,13,13,13,17,18,19,19,19,20,20,21,21,25,26,29,29]","20","Three giraffes standing together.","105","red","",""
"html-keyboard-response","325","1973259","0.0-325.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","326","1974776","0.0-326.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:800% 0%;margin-top:48px'></div> <div class='red' style='background-position:800% 0%;margin-top:46px'></div> <div class='red' style='background-position:1300% 0%;margin-top:20px'></div> <div class='red' style='background-position:1500% 0%;margin-top:33px'></div> <div class='red' style='background-position:2100% 0%;margin-top:23px'></div> <div class='red' style='background-position:700% 0%;margin-top:43px'></div> <div class='red' style='background-position:1600% 0%;margin-top:22px'></div> <div class='red' style='background-position:1400% 0%;margin-top:45px'></div> <div class='red' style='background-position:1600% 0%;margin-top:45px'></div> <div class='red' style='background-position:1400% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:800% 0%;margin-top:39px'></div> <div class='red' style='background-position:1500% 0%;margin-top:33px'></div> <div class='red' style='background-position:500% 0%;margin-top:25px'></div> <div class='red' style='background-position:2400% 0%;margin-top:42px'></div> <div class='red' style='background-position:2000% 0%;margin-top:36px'></div> <div class='red' style='background-position:1400% 0%;margin-top:31px'></div> <div class='red' style='background-position:800% 0%;margin-top:21px'></div> <div class='red' style='background-position:2400% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:47px'></div> <div class='red' style='background-position:800% 0%;margin-top:35px'></div> <div> </div></span>","null","stimulus","{""index"":84,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","327","1980286","0.0-327.0","668c0bc95fadbd0e93071351","5509","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":85,""type"":""experimental"",""array_length"":20,""meanVal"":15,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","5509","5509","true","red13.jpg","12","exp","600","red","20","[5,7,8,8,8,8,8,12,13,14,14,14,15,15,16,16,20,21,24,24]","15","Three giraffes standing together.","106","red","",""
"html-keyboard-response","328","1980696","0.0-328.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","329","1982204","0.0-329.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:1900% 0%;margin-top:23px'></div> <div class='red' style='background-position:1800% 0%;margin-top:50px'></div> <div class='red' style='background-position:1300% 0%;margin-top:31px'></div> <div class='red' style='background-position:1900% 0%;margin-top:48px'></div> <div class='red' style='background-position:1700% 0%;margin-top:37px'></div> <div class='red' style='background-position:1200% 0%;margin-top:43px'></div> <div class='red' style='background-position:1300% 0%;margin-top:49px'></div> <div class='red' style='background-position:1300% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:43px'></div> <div class='red' style='background-position:2900% 0%;margin-top:50px'></div> <div class='red' style='background-position:2100% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:32px'></div> <div class='red' style='background-position:2100% 0%;margin-top:44px'></div> <div class='red' style='background-position:2500% 0%;margin-top:36px'></div> <div class='red' style='background-position:1900% 0%;margin-top:49px'></div> <div class='red' style='background-position:2000% 0%;margin-top:22px'></div> <div class='red' style='background-position:2600% 0%;margin-top:44px'></div> <div class='red' style='background-position:2000% 0%;margin-top:47px'></div> <div class='red' style='background-position:1300% 0%;margin-top:35px'></div> <div class='red' style='background-position:1000% 0%;margin-top:46px'></div> <div> </div></span>","null","stimulus","{""index"":85,""type"":""experimental"",""array_length"":20,""meanVal"":15,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","330","1996866","0.0-330.0","668c0bc95fadbd0e93071351","14659","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":86,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","14659","14659","true","red11.jpg","10","exp","400","red","20","[10,12,13,13,13,13,13,17,18,19,19,19,20,20,21,21,25,26,29,29]","20","Three giraffes standing together.","107","red","",""
"html-keyboard-response","331","1997269","0.0-331.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","332","1998772","0.0-332.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":86,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","333","2001169","0.0-333.0","668c0bc95fadbd0e93071351","2395","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":87,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2395","2395","true","red6.jpg","5","exp","400","red","2","[10,18]","14","Three giraffes standing together.","108","red","",""
"html-keyboard-response","334","2001674","0.0-334.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","335","2003187","0.0-335.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:43px'></div> <div> </div></span>","null","stimulus","{""index"":87,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","336","2013182","0.0-336.0","668c0bc95fadbd0e93071351","9992","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":88,""type"":""experimental"",""array_length"":2,""meanVal"":20,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9992","9992","true","red6.jpg","5","exp","500","red","2","[16,24]","20","Three giraffes standing together.","109","red","",""
"html-keyboard-response","337","2013585","0.0-337.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","338","2015100","0.0-338.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:3300% 0%;margin-top:47px'></div> <div class='red' style='background-position:2000% 0%;margin-top:22px'></div> <div class='red' style='background-position:2800% 0%;margin-top:28px'></div> <div class='red' style='background-position:1900% 0%;margin-top:46px'></div> <div class='red' style='background-position:2000% 0%;margin-top:44px'></div> <div class='red' style='background-position:2700% 0%;margin-top:43px'></div> <div class='red' style='background-position:2000% 0%;margin-top:42px'></div> <div class='red' style='background-position:2000% 0%;margin-top:49px'></div> <div class='red' style='background-position:3600% 0%;margin-top:45px'></div> <div class='red' style='background-position:2600% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:34px'></div> <div class='red' style='background-position:2000% 0%;margin-top:43px'></div> <div class='red' style='background-position:2800% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:45px'></div> <div class='red' style='background-position:2600% 0%;margin-top:50px'></div> <div class='red' style='background-position:3200% 0%;margin-top:50px'></div> <div class='red' style='background-position:2700% 0%;margin-top:37px'></div> <div class='red' style='background-position:2500% 0%;margin-top:43px'></div> <div class='red' style='background-position:2400% 0%;margin-top:34px'></div> <div class='red' style='background-position:2600% 0%;margin-top:22px'></div> <div> </div></span>","null","stimulus","{""index"":88,""type"":""experimental"",""array_length"":2,""meanVal"":20,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","339","2019449","0.0-339.0","668c0bc95fadbd0e93071351","4346","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":89,""type"":""experimental"",""array_length"":20,""meanVal"":27,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4346","4346","true","red19.jpg","18","exp","400","red","20","[17,19,20,20,20,20,20,24,25,26,26,26,27,27,28,28,32,33,36,36]","27","Three giraffes standing together.","110","red","",""
"html-keyboard-response","340","2019966","0.0-340.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","341","2021480","0.0-341.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:1600% 0%;margin-top:38px'></div> <div class='red' style='background-position:1000% 0%;margin-top:38px'></div> <div class='red' style='background-position:1000% 0%;margin-top:29px'></div> <div class='red' style='background-position:1000% 0%;margin-top:33px'></div> <div class='red' style='background-position:1400% 0%;margin-top:27px'></div> <div class='red' style='background-position:2300% 0%;margin-top:47px'></div> <div class='red' style='background-position:900% 0%;margin-top:31px'></div> <div class='red' style='background-position:2600% 0%;margin-top:32px'></div> <div class='red' style='background-position:1700% 0%;margin-top:31px'></div> <div class='red' style='background-position:2200% 0%;margin-top:48px'></div> <div class='red' style='background-position:1800% 0%;margin-top:22px'></div> <div class='red' style='background-position:1000% 0%;margin-top:35px'></div> <div class='red' style='background-position:2600% 0%;margin-top:32px'></div> <div class='red' style='background-position:1600% 0%;margin-top:47px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:37px'></div> <div class='red' style='background-position:1500% 0%;margin-top:33px'></div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:38px'></div> <div class='red' style='background-position:700% 0%;margin-top:49px'></div> <div class='red' style='background-position:1600% 0%;margin-top:42px'></div> <div class='red' style='background-position:1700% 0%;margin-top:47px'></div> <div> </div></span>","null","stimulus","{""index"":89,""type"":""experimental"",""array_length"":20,""meanVal"":27,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","342","2025864","0.0-342.0","668c0bc95fadbd0e93071351","4382","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":90,""type"":""experimental"",""array_length"":20,""meanVal"":17,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4382","4382","true","red12.jpg","11","exp","500","red","20","[7,9,10,10,10,10,10,14,15,16,16,16,17,17,18,18,22,23,26,26]","17","Three giraffes standing together.","111","red","",""
"html-keyboard-response","343","2026276","0.0-343.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","344","2027788","0.0-344.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":90,""type"":""experimental"",""array_length"":20,""meanVal"":17,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","345","2030229","0.0-345.0","668c0bc95fadbd0e93071351","2438","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":91,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2438","2438","true","red11.jpg","10","exp","400","red","2","[18,26]","22","Three giraffes standing together.","112","red","",""
"html-keyboard-response","346","2030635","0.0-346.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","347","2032153","0.0-347.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:2000% 0%;margin-top:34px'></div> <div class='red' style='background-position:2500% 0%;margin-top:44px'></div> <div class='red' style='background-position:1900% 0%;margin-top:21px'></div> <div class='red' style='background-position:2100% 0%;margin-top:30px'></div> <div class='red' style='background-position:1700% 0%;margin-top:34px'></div> <div class='red' style='background-position:1900% 0%;margin-top:30px'></div> <div class='red' style='background-position:1300% 0%;margin-top:24px'></div> <div class='red' style='background-position:2900% 0%;margin-top:30px'></div> <div class='red' style='background-position:2600% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:22px'></div> <div class='red' style='background-position:1200% 0%;margin-top:26px'></div> <div class='red' style='background-position:1800% 0%;margin-top:33px'></div> <div class='red' style='background-position:1000% 0%;margin-top:48px'></div> <div class='red' style='background-position:1300% 0%;margin-top:21px'></div> <div class='red' style='background-position:1300% 0%;margin-top:35px'></div> <div class='red' style='background-position:2100% 0%;margin-top:33px'></div> <div class='red' style='background-position:2900% 0%;margin-top:22px'></div> <div class='red' style='background-position:2000% 0%;margin-top:46px'></div> <div class='red' style='background-position:1900% 0%;margin-top:22px'></div></span>","null","stimulus","{""index"":91,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","348","2034377","0.0-348.0","668c0bc95fadbd0e93071351","2220","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":92,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2220","2220","true","red19.jpg","18","exp","400","red","20","[10,12,13,13,13,13,13,17,18,19,19,19,20,20,21,21,25,26,29,29]","20","Three giraffes standing together.","113","red","",""
"html-keyboard-response","349","2034985","0.0-349.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","350","2036489","0.0-350.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:24px'></div> <div> </div></span>","null","stimulus","{""index"":92,""type"":""experimental"",""array_length"":20,""meanVal"":20,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","351","2038387","0.0-351.0","668c0bc95fadbd0e93071351","1896","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":93,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1896","1896","true","red13.jpg","12","exp","600","red","2","[28,36]","32","Three giraffes standing together.","114","red","",""
"html-keyboard-response","352","2038989","0.0-352.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","353","2040490","0.0-353.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:600% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:32px'></div> <div class='red' style='background-position:900% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:47px'></div> <div class='red' style='background-position:500% 0%;margin-top:40px'></div> <div class='red' style='background-position:1300% 0%;margin-top:24px'></div> <div class='red' style='background-position:1200% 0%;margin-top:24px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:44px'></div> <div class='red' style='background-position:2100% 0%;margin-top:37px'></div> <div> </div></span>","null","stimulus","{""index"":93,""type"":""experimental"",""array_length"":2,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","354","2043135","0.0-354.0","668c0bc95fadbd0e93071351","2643","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":94,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2643","2643","true","red13.jpg","12","exp","600","red","10","[5,9,6,12,13,16,17,20,21,23]","14","Three giraffes standing together.","115","red","",""
"html-keyboard-response","355","2043739","0.0-355.0","668c0bc95fadbd0e93071351","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"html-keyboard-response","356","2045240","0.0-356.0","668c0bc95fadbd0e93071351","null","","","","<span class='grid'><div class='red' style='background-position:4300% 0%;margin-top:22px'></div> <div class='red' style='background-position:2600% 0%;margin-top:23px'></div> <div class='red' style='background-position:3600% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:50px'></div> <div class='red' style='background-position:3300% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:34px'></div> <div class='red' style='background-position:3200% 0%;margin-top:42px'></div> <div class='red' style='background-position:2900% 0%;margin-top:41px'></div> <div class='red' style='background-position:4100% 0%;margin-top:32px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":94,""type"":""experimental"",""array_length"":10,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","","red","",""
"image-slider-response_noButton","357","2051262","0.0-357.0","668c0bc95fadbd0e93071351","6021","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":95,""type"":""experimental"",""array_length"":10,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>how red did the array felt to you?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6021","6021","true","red28.jpg","27","exp","600","red","10","[25,29,26,32,33,36,37,40,41,43]","34","Three giraffes standing together.","116","red","",""
"html-button-response","358","2088189","0.0-358.0","668c0bc95fadbd0e93071351","36922.09999990463","","","","<p><strong>My purpose in this experiment was:</strong></p>","","","","","","","","","","","","","","","","","","","","","","","","","","","","0","1"
"survey-text","359","2120591","0.0-359.0-0.0","668c0bc95fadbd0e93071351","32396.5","","","{""avg_strategy"":""I went with the shade of color that was predominant.""}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","360","2128683","0.0-362.0","668c0bc95fadbd0e93071351","8090","","[{""page_index"":0,""viewing_time"":8089.400000095367}]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
