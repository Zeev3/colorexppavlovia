"trial_type","trial_index","time_elapsed","internal_node_id","participant_id","rt","url","view_history","responses","stimulus","key_press","Name","config","type","prompt","step","max","start","on_load","data","min","labels","button_label","stimulus_duration","trial_duration","response_ends_trial","imageSelected","indexSelected","fixationTime","faceIdentity","array_length","array_values","meanVal","description","trial","color"
"pavlovia","0","2","0.0-0.0","rina test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"external-html","1","7739","0.0-1.0","rina test","7729","external_page.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","2","35261","0.0-2.0","rina test","27521","","[{""page_index"":0,""viewing_time"":1679.9999999999982},{""page_index"":1,""viewing_time"":3016},{""page_index"":0,""viewing_time"":7134},{""page_index"":1,""viewing_time"":10277},{""page_index"":2,""viewing_time"":1838},{""page_index"":3,""viewing_time"":3574}]","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","3","43474","0.0-3.0","rina test","8189","","","{""Q0"":""rina test""}","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","4","44901","0.0-4.0","rina test","1426","","[{""page_index"":0,""viewing_time"":1426}]","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","5","78564","0.0-5.0","rina test","33653","","","{""Q0"":""3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background""}","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","6","83449","0.0-6.0-0.0","rina test","4880","","","{""Q0"":""but""}","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","7","83853","0.0-7.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","8","85355","0.0-8.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:23px'></div> <div class='red' style='background-position:1000% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:49px'></div> <div class='red' style='background-position:1800% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:38px'></div> <div class='red' style='background-position:1500% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:41px'></div> <div class='red' style='background-position:600% 0%;margin-top:45px'></div> <div> </div></span>","null","stimulus","","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","9","91608","0.0-9.0","rina test","6248","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":0,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","6248","6248","true","red45.jpg","44","400","red","9","[11,5,18,10,16,6,13,12,15]","11.777777777777779","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","1",""
"html-keyboard-response","10","92210","0.0-10.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","11","93713","0.0-11.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:4500% 0%;margin-top:27px'></div> <div class='red' style='background-position:3600% 0%;margin-top:25px'></div> <div class='red' style='background-position:4200% 0%;margin-top:29px'></div> <div class='red' style='background-position:4600% 0%;margin-top:20px'></div> <div class='red' style='background-position:3800% 0%;margin-top:29px'></div> <div class='red' style='background-position:4800% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4700% 0%;margin-top:29px'></div> <div class='red' style='background-position:3500% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:26px'></div> <div class='red' style='background-position:4300% 0%;margin-top:47px'></div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:40px'></div></span>","null","stimulus","{""index"":0,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","12","97055","0.0-12.0","rina test","3340","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":1,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3340","3340","true","red10.jpg","9","600","red","12","[37,47,43,41,42,40,46,45,48,36,38,35]","41.5","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","2",""
"html-keyboard-response","13","97555","0.0-13.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","14","99058","0.0-14.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3900% 0%;margin-top:49px'></div> <div class='red' style='background-position:3800% 0%;margin-top:43px'></div> <div class='red' style='background-position:4800% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:4400% 0%;margin-top:44px'></div> <div class='red' style='background-position:4200% 0%;margin-top:23px'></div> <div class='red' style='background-position:4500% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:23px'></div> <div class='red' style='background-position:4100% 0%;margin-top:42px'></div> <div class='red' style='background-position:4600% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:4700% 0%;margin-top:44px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":1,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","15","102215","0.0-15.0","rina test","3155","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":2,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3155","3155","true","red14.jpg","13","500","red","10","[44,42,47,46,41,34,45,39,38,48]","42.4","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","3",""
"html-keyboard-response","16","102816","0.0-16.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","17","104319","0.0-17.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:700% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:900% 0%;margin-top:35px'></div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:20px'></div> <div class='red' style='background-position:1400% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:39px'></div></span>","null","stimulus","{""index"":2,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","18","107059","0.0-18.0","rina test","2737","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":3,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2737","2737","true","red32.jpg","31","600","red","6","[12,14,5,11,9,7]","9.666666666666666","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","4",""
"html-keyboard-response","19","107560","0.0-19.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","20","109063","0.0-20.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:4800% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":3,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","",""
"image-slider-response_noButton","21","111544","0.0-21.0","rina test","2479","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":4,""type"":""practice"",""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2479","2479","true","red2.jpg","1","500","red","2","[48,41]","44.5","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","5",""
"instructions","22","113452","0.0-22.0","rina test","1906","","[{""page_index"":0,""viewing_time"":1906}]","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"survey-text","23","122975","0.0-23.0-0.0","rina test","9505","","","{""Q0"":""rock""}","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","24","123477","0.0-24.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","25","124981","0.0-25.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:3700% 0%;margin-top:40px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:30px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:27px'></div> <div class='blue' style='background-position:4400% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:49px'></div> <div class='blue' style='background-position:4200% 0%;margin-top:40px'></div> <div> </div> <div class='blue' style='background-position:4100% 0%;margin-top:41px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:46px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:47px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:33px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":4,""type"":""practice"",""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","26","128473","0.0-26.0","rina test","3488","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":0,""type"":""experimental"",""array_length"":12,""meanVal"":37,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3488","3488","true","blue12.jpg","11","500","blue","12","[30,33,31,35,37,36,38,38,39,41,42,44]","37","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","6","blue"
"html-keyboard-response","27","128975","0.0-27.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","28","130476","0.0-28.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":0,""type"":""experimental"",""array_length"":12,""meanVal"":37,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","29","133531","0.0-29.0","rina test","3053","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":1,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3053","3053","true","blue23.jpg","22","500","blue","2","[24,30]","27","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","7","blue"
"html-keyboard-response","30","134032","0.0-30.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","31","135534","0.0-31.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:600% 0%;margin-top:36px'></div> <div class='blue' style='background-position:500% 0%;margin-top:39px'></div> <div class='blue' style='background-position:800% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:37px'></div> <div class='blue' style='background-position:300% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:24px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":1,""type"":""experimental"",""array_length"":2,""meanVal"":27,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","32","137472","0.0-32.0","rina test","1936","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":2,""type"":""experimental"",""array_length"":8,""meanVal"":9,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1936","1936","true","blue41.jpg","40","500","blue","8","[3,5,6,8,10,12,13,15]","9","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","8","blue"
"html-keyboard-response","33","138074","0.0-33.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","34","139575","0.0-34.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:800% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:300% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:600% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:24px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:49px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:500% 0%;margin-top:40px'></div></span>","null","stimulus","{""index"":2,""type"":""experimental"",""array_length"":8,""meanVal"":9,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","35","144903","0.0-35.0","rina test","5325","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":3,""type"":""experimental"",""array_length"":8,""meanVal"":9,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5325","5325","true","blue41.jpg","40","600","blue","8","[3,5,6,8,10,12,13,15]","9","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","9","blue"
"html-keyboard-response","36","145506","0.0-36.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","37","147008","0.0-37.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:37px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:48px'></div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:38px'></div> <div> </div></span>","null","stimulus","{""index"":3,""type"":""experimental"",""array_length"":8,""meanVal"":9,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","38","149337","0.0-38.0","rina test","2324","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":4,""type"":""experimental"",""array_length"":8,""meanVal"":31,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2324","2324","true","blue18.jpg","17","600","blue","8","[25,27,28,30,32,34,35,37]","31","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","10","blue"
"html-keyboard-response","39","149740","0.0-39.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","40","151242","0.0-40.0","rina test","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:900% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:28px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:38px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:600% 0%;margin-top:49px'></div> <div class='blue' style='background-position:800% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1100% 0%;margin-top:28px'></div></span>","null","stimulus","{""index"":4,""type"":""experimental"",""array_length"":8,""meanVal"":31,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","41","155317","0.0-41.0","rina test","4072","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":5,""type"":""experimental"",""array_length"":8,""meanVal"":12,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4072","4072","true","blue35.jpg","34","400","blue","8","[6,8,9,11,13,15,16,18]","12","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","11","blue"
"html-keyboard-response","42","155918","0.0-42.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","43","157421","0.0-43.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:39px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":5,""type"":""experimental"",""array_length"":8,""meanVal"":12,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","44","159924","0.0-44.0","rina test","2501","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":6,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2501","2501","true","blue12.jpg","11","600","blue","2","[21,27]","24","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","12","blue"
"html-keyboard-response","45","160326","0.0-45.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","46","161830","0.0-46.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:24px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:36px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":6,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","47","165000","0.0-47.0","rina test","3168","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":7,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3168","3168","true","blue10.jpg","9","400","blue","2","[33,39]","36","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","13","blue"
"html-keyboard-response","48","165600","0.0-48.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","49","167103","0.0-49.0","rina test","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:49px'></div> <div class='blue' style='background-position:4100% 0%;margin-top:22px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:4300% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:22px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":7,""type"":""experimental"",""array_length"":2,""meanVal"":36,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","50","169103","0.0-50.0","rina test","1998","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":8,""type"":""experimental"",""array_length"":6,""meanVal"":38,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1998","1998","true","blue16.jpg","15","600","blue","6","[33,35,37,39,41,43]","38","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","14","blue"
"html-keyboard-response","51","169604","0.0-51.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","52","171107","0.0-52.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:4000% 0%;margin-top:20px'></div> <div> </div> <div class='blue' style='background-position:4100% 0%;margin-top:23px'></div> <div class='blue' style='background-position:4600% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:20px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:21px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:21px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:43px'></div> <div class='blue' style='background-position:4400% 0%;margin-top:24px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:40px'></div> <div class='blue' style='background-position:4300% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:27px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":8,""type"":""experimental"",""array_length"":6,""meanVal"":38,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","53","173685","0.0-53.0","rina test","2575","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":9,""type"":""experimental"",""array_length"":12,""meanVal"":39,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2575","2575","true","blue18.jpg","17","500","blue","12","[32,35,33,37,39,38,40,40,41,43,44,46]","39","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","15","blue"
"html-keyboard-response","54","174087","0.0-54.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","55","175590","0.0-55.0","rina test","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:33px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:33px'></div></span>","null","stimulus","{""index"":9,""type"":""experimental"",""array_length"":12,""meanVal"":39,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","56","178516","0.0-56.0","rina test","2925","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":10,""type"":""experimental"",""array_length"":8,""meanVal"":24,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2925","2925","true","blue29.jpg","28","400","blue","8","[18,20,21,23,25,27,28,30]","24","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","16","blue"
"html-keyboard-response","57","179017","0.0-57.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","58","180520","0.0-58.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:4400% 0%;margin-top:29px'></div> <div class='blue' style='background-position:4200% 0%;margin-top:39px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:28px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:42px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":10,""type"":""experimental"",""array_length"":8,""meanVal"":24,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","59","182935","0.0-59.0","rina test","2413","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":11,""type"":""experimental"",""array_length"":6,""meanVal"":39,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2413","2413","true","blue11.jpg","10","500","blue","6","[34,36,38,40,42,44]","39","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","17","blue"
"html-keyboard-response","60","183537","0.0-60.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","61","185040","0.0-61.0","rina test","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:42px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:38px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:35px'></div> <div> </div> <div class='blue' style='background-position:1500% 0%;margin-top:36px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:42px'></div></span>","null","stimulus","{""index"":11,""type"":""experimental"",""array_length"":6,""meanVal"":39,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","62","188662","0.0-62.0","rina test","3621","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":12,""type"":""experimental"",""array_length"":12,""meanVal"":22,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3621","3621","true","blue18.jpg","17","600","blue","12","[15,18,16,20,22,21,23,23,24,26,27,29]","22","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","18","blue"
"html-keyboard-response","63","189264","0.0-63.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","64","190766","0.0-64.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:3100% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:28px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:44px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:22px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:42px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:30px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:45px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:49px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":12,""type"":""experimental"",""array_length"":12,""meanVal"":22,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","65","193158","0.0-65.0","rina test","2390","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":13,""type"":""experimental"",""array_length"":12,""meanVal"":29,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2390","2390","true","blue27.jpg","26","600","blue","12","[22,25,23,27,29,28,30,30,31,33,34,36]","29","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","19","blue"
"html-keyboard-response","66","193559","0.0-66.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","67","195060","0.0-67.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:1100% 0%;margin-top:35px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:35px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:20px'></div> <div class='blue' style='background-position:600% 0%;margin-top:46px'></div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:800% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:34px'></div> <div class='blue' style='background-position:400% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:28px'></div> <div class='blue' style='background-position:300% 0%;margin-top:37px'></div> <div> </div></span>","null","stimulus","{""index"":13,""type"":""experimental"",""array_length"":12,""meanVal"":29,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","68","198841","0.0-68.0","rina test","3779","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":14,""type"":""experimental"",""array_length"":12,""meanVal"":10,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3779","3779","true","blue42.jpg","41","400","blue","12","[3,6,4,8,10,9,11,11,12,14,15,17]","10","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","20","blue"
"html-keyboard-response","69","199342","0.0-69.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","70","200843","0.0-70.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:44px'></div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:21px'></div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:28px'></div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:42px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:21px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:47px'></div> <div class='blue' style='background-position:3100% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3600% 0%;margin-top:25px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:43px'></div> <div> </div> <div class='blue' style='background-position:4200% 0%;margin-top:23px'></div></span>","null","stimulus","{""index"":14,""type"":""experimental"",""array_length"":12,""meanVal"":10,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","71","204930","0.0-71.0","rina test","4084","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":15,""type"":""experimental"",""array_length"":12,""meanVal"":35,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","4084","4084","true","blue17.jpg","16","500","blue","12","[28,31,29,33,35,34,36,36,37,39,40,42]","35","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","21","blue"
"html-keyboard-response","72","205433","0.0-72.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","73","206935","0.0-73.0","rina test","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:50px'></div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:40px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:27px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:36px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:29px'></div></span>","null","stimulus","{""index"":15,""type"":""experimental"",""array_length"":12,""meanVal"":35,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","74","208598","0.0-74.0","rina test","1662","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":16,""type"":""experimental"",""array_length"":12,""meanVal"":23,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1662","1662","true","blue22.jpg","21","500","blue","12","[16,19,17,21,23,22,24,24,25,27,28,30]","23","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","22","blue"
"html-keyboard-response","75","209199","0.0-75.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","76","210702","0.0-76.0","rina test","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:42px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:47px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:34px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:46px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:39px'></div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:41px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:47px'></div></span>","null","stimulus","{""index"":16,""type"":""experimental"",""array_length"":12,""meanVal"":23,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","77","213405","0.0-77.0","rina test","2700","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":17,""type"":""experimental"",""array_length"":12,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2700","2700","true","blue39.jpg","38","600","blue","12","[11,14,12,16,18,17,19,19,20,22,23,25]","18","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","23","blue"
"html-keyboard-response","78","213807","0.0-78.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","79","215308","0.0-79.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:22px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":17,""type"":""experimental"",""array_length"":12,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","80","219243","0.0-80.0","rina test","3931","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":18,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3931","3931","true","blue19.jpg","18","400","blue","2","[26,32]","29","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","24","blue"
"html-keyboard-response","81","219744","0.0-81.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","82","221246","0.0-82.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:3700% 0%;margin-top:24px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3800% 0%;margin-top:37px'></div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:46px'></div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:45px'></div> <div class='blue' style='background-position:4400% 0%;margin-top:20px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:32px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:25px'></div> <div class='blue' style='background-position:4600% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:4100% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:4300% 0%;margin-top:37px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:39px'></div></span>","null","stimulus","{""index"":18,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","83","223984","0.0-83.0","rina test","2735","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":19,""type"":""experimental"",""array_length"":12,""meanVal"":39,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2735","2735","true","blue12.jpg","11","500","blue","12","[32,35,33,37,39,38,40,40,41,43,44,46]","39","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","25","blue"
"html-keyboard-response","84","224485","0.0-84.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","85","225987","0.0-85.0","rina test","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":19,""type"":""experimental"",""array_length"":12,""meanVal"":39,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","86","228485","0.0-86.0","rina test","2496","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":20,""type"":""experimental"",""array_length"":2,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2496","2496","true","blue19.jpg","18","500","blue","2","[22,28]","25","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","26","blue"
"html-keyboard-response","87","229086","0.0-87.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","88","230591","0.0-88.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:2000% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:45px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:39px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2100% 0%;margin-top:30px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:40px'></div> <div class='blue' style='background-position:1300% 0%;margin-top:33px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:27px'></div></span>","null","stimulus","{""index"":20,""type"":""experimental"",""array_length"":2,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","89","232771","0.0-89.0","rina test","2175","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":21,""type"":""experimental"",""array_length"":12,""meanVal"":20,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2175","2175","true","blue31.jpg","30","600","blue","12","[13,16,14,18,20,19,21,21,22,24,25,27]","20","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","27","blue"
"html-keyboard-response","90","233274","0.0-90.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","91","234775","0.0-91.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:43px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:50px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:39px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:44px'></div> <div> </div></span>","null","stimulus","{""index"":21,""type"":""experimental"",""array_length"":12,""meanVal"":20,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","92","237365","0.0-92.0","rina test","2588","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":22,""type"":""experimental"",""array_length"":8,""meanVal"":33,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2588","2588","true","blue12.jpg","11","500","blue","8","[27,29,30,32,34,36,37,39]","33","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","28","blue"
"html-keyboard-response","93","237865","0.0-93.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","94","239367","0.0-94.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:47px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:48px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:43px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:26px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3300% 0%;margin-top:31px'></div> <div class='blue' style='background-position:3000% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2500% 0%;margin-top:45px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:34px'></div></span>","null","stimulus","{""index"":22,""type"":""experimental"",""array_length"":8,""meanVal"":33,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","95","241134","0.0-95.0","rina test","1765","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":23,""type"":""experimental"",""array_length"":12,""meanVal"":26,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1765","1765","true","blue36.jpg","35","500","blue","12","[19,22,20,24,26,25,27,27,28,30,31,33]","26","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","29","blue"
"html-keyboard-response","96","241634","0.0-96.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","97","243136","0.0-97.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:1100% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:31px'></div> <div class='blue' style='background-position:400% 0%;margin-top:37px'></div> <div class='blue' style='background-position:600% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:29px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:49px'></div> <div class='blue' style='background-position:700% 0%;margin-top:45px'></div></span>","null","stimulus","{""index"":23,""type"":""experimental"",""array_length"":12,""meanVal"":26,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","98","245151","0.0-98.0","rina test","2013","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":24,""type"":""experimental"",""array_length"":8,""meanVal"":10,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2013","2013","true","blue35.jpg","34","500","blue","8","[4,6,7,9,11,13,14,16]","10","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","30","blue"
"html-keyboard-response","99","245753","0.0-99.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","100","247255","0.0-100.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:1600% 0%;margin-top:46px'></div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:37px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2600% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1700% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2100% 0%;margin-top:33px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":24,""type"":""experimental"",""array_length"":8,""meanVal"":10,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","101","249972","0.0-101.0","rina test","2715","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":25,""type"":""experimental"",""array_length"":8,""meanVal"":20,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2715","2715","true","blue16.jpg","15","600","blue","8","[14,16,17,19,21,23,24,26]","20","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","31","blue"
"html-keyboard-response","102","250473","0.0-102.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","103","251976","0.0-103.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:2200% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:20px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:50px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:43px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":25,""type"":""experimental"",""array_length"":8,""meanVal"":20,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","104","254239","0.0-104.0","rina test","2261","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":26,""type"":""experimental"",""array_length"":8,""meanVal"":23,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2261","2261","true","blue33.jpg","32","500","blue","8","[17,19,20,22,24,26,27,29]","23","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","32","blue"
"html-keyboard-response","105","254740","0.0-105.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","106","256243","0.0-106.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:3600% 0%;margin-top:35px'></div> <div class='blue' style='background-position:2400% 0%;margin-top:39px'></div> <div class='blue' style='background-position:2700% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:25px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:42px'></div></span>","null","stimulus","{""index"":26,""type"":""experimental"",""array_length"":8,""meanVal"":23,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","107","259382","0.0-107.0","rina test","3137","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":27,""type"":""experimental"",""array_length"":8,""meanVal"":30,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3137","3137","true","blue15.jpg","14","500","blue","8","[24,26,27,29,31,33,34,36]","30","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","33","blue"
"html-keyboard-response","108","259783","0.0-108.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","109","261285","0.0-109.0","rina test","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:34px'></div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3700% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:4100% 0%;margin-top:46px'></div> <div class='blue' style='background-position:3900% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:30px'></div> <div> </div></span>","null","stimulus","{""index"":27,""type"":""experimental"",""array_length"":8,""meanVal"":30,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","110","263378","0.0-110.0","rina test","2091","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":28,""type"":""experimental"",""array_length"":6,""meanVal"":36,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2091","2091","true","blue13.jpg","12","400","blue","6","[31,33,35,37,39,41]","36","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","34","blue"
"html-keyboard-response","111","263779","0.0-111.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","112","265282","0.0-112.0","rina test","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:2500% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2900% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:2700% 0%;margin-top:32px'></div></span>","null","stimulus","{""index"":28,""type"":""experimental"",""array_length"":6,""meanVal"":36,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","113","267354","0.0-113.0","rina test","2068","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":29,""type"":""experimental"",""array_length"":6,""meanVal"":28,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2068","2068","true","blue30.jpg","29","400","blue","6","[23,25,27,29,31,33]","28","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","35","blue"
"html-keyboard-response","114","267755","0.0-114.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","115","269258","0.0-115.0","rina test","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:1100% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:35px'></div> <div class='blue' style='background-position:1900% 0%;margin-top:30px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:50px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1300% 0%;margin-top:23px'></div></span>","null","stimulus","{""index"":29,""type"":""experimental"",""array_length"":6,""meanVal"":28,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","116","274645","0.0-116.0","rina test","5385","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":30,""type"":""experimental"",""array_length"":6,""meanVal"":14,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","5385","5385","true","blue21.jpg","20","400","blue","6","[9,11,13,15,17,19]","14","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","36","blue"
"html-keyboard-response","117","275047","0.0-117.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","118","276549","0.0-118.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2300% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:27px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":30,""type"":""experimental"",""array_length"":6,""meanVal"":14,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","119","279224","0.0-119.0","rina test","2672","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":31,""type"":""experimental"",""array_length"":2,""meanVal"":20,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2672","2672","true","blue35.jpg","34","400","blue","2","[17,23]","20","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","37","blue"
"html-keyboard-response","120","279725","0.0-120.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","121","281229","0.0-121.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3100% 0%;margin-top:30px'></div> <div class='blue' style='background-position:2900% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3900% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:23px'></div> <div class='blue' style='background-position:3500% 0%;margin-top:21px'></div> <div class='blue' style='background-position:3700% 0%;margin-top:34px'></div> <div> </div></span>","null","stimulus","{""index"":31,""type"":""experimental"",""array_length"":2,""meanVal"":20,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","122","283394","0.0-122.0","rina test","2162","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":32,""type"":""experimental"",""array_length"":6,""meanVal"":34,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2162","2162","true","blue10.jpg","9","500","blue","6","[29,31,33,35,37,39]","34","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","38","blue"
"html-keyboard-response","123","283895","0.0-123.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","124","285397","0.0-124.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:2500% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1200% 0%;margin-top:21px'></div> <div class='blue' style='background-position:1600% 0%;margin-top:35px'></div> <div class='blue' style='background-position:1800% 0%;margin-top:46px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:44px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:47px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:22px'></div> <div> </div> <div class='blue' style='background-position:1900% 0%;margin-top:45px'></div> <div class='blue' style='background-position:1100% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2300% 0%;margin-top:32px'></div> <div> </div> <div class='blue' style='background-position:1700% 0%;margin-top:46px'></div></span>","null","stimulus","{""index"":32,""type"":""experimental"",""array_length"":6,""meanVal"":34,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","125","287733","0.0-125.0","rina test","2335","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":33,""type"":""experimental"",""array_length"":12,""meanVal"":18,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2335","2335","true","blue31.jpg","30","500","blue","12","[11,14,12,16,18,17,19,19,20,22,23,25]","18","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","39","blue"
"html-keyboard-response","126","288335","0.0-126.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","127","289837","0.0-127.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:1700% 0%;margin-top:28px'></div> <div class='blue' style='background-position:700% 0%;margin-top:35px'></div> <div> </div> <div class='blue' style='background-position:1200% 0%;margin-top:37px'></div> <div class='blue' style='background-position:1400% 0%;margin-top:27px'></div> <div class='blue' style='background-position:1500% 0%;margin-top:33px'></div> <div class='blue' style='background-position:500% 0%;margin-top:40px'></div> <div class='blue' style='background-position:800% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:25px'></div> <div> </div></span>","null","stimulus","{""index"":33,""type"":""experimental"",""array_length"":12,""meanVal"":18,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","128","292173","0.0-128.0","rina test","2335","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":34,""type"":""experimental"",""array_length"":8,""meanVal"":11,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2335","2335","true","blue35.jpg","34","600","blue","8","[5,7,8,10,12,14,15,17]","11","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","40","blue"
"html-keyboard-response","129","292774","0.0-129.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","130","294276","0.0-130.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:2800% 0%;margin-top:23px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:50px'></div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:40px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:27px'></div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":34,""type"":""experimental"",""array_length"":8,""meanVal"":11,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","131","296325","0.0-131.0","rina test","2047","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":35,""type"":""experimental"",""array_length"":6,""meanVal"":25,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2047","2047","true","blue31.jpg","30","600","blue","6","[20,22,24,26,28,30]","25","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","41","blue"
"html-keyboard-response","132","296726","0.0-132.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","133","298228","0.0-133.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:2600% 0%;margin-top:45px'></div> <div class='blue' style='background-position:3200% 0%;margin-top:43px'></div> <div> </div> <div class='blue' style='background-position:2800% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:23px'></div> <div> </div> <div class='blue' style='background-position:2200% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:20px'></div> <div> </div></span>","null","stimulus","{""index"":35,""type"":""experimental"",""array_length"":6,""meanVal"":25,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","134","300820","0.0-134.0","rina test","2589","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":36,""type"":""experimental"",""array_length"":6,""meanVal"":27,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2589","2589","true","blue31.jpg","30","400","blue","6","[22,24,26,28,30,32]","27","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","42","blue"
"html-keyboard-response","135","301222","0.0-135.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","136","302724","0.0-136.0","rina test","null","","","","<span class='grid'><div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3600% 0%;margin-top:30px'></div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:21px'></div> <div class='blue' style='background-position:4200% 0%;margin-top:44px'></div> <div class='blue' style='background-position:4300% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:3300% 0%;margin-top:20px'></div> <div class='blue' style='background-position:4500% 0%;margin-top:31px'></div> <div> </div> <div class='blue' style='background-position:3500% 0%;margin-top:22px'></div> <div> </div></span>","null","stimulus","{""index"":36,""type"":""experimental"",""array_length"":6,""meanVal"":27,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","137","304566","0.0-137.0","rina test","1840","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":37,""type"":""experimental"",""array_length"":8,""meanVal"":39,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1840","1840","true","blue12.jpg","11","400","blue","8","[33,35,36,38,40,42,43,45]","39","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","43","blue"
"html-keyboard-response","138","305068","0.0-138.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","139","306571","0.0-139.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":37,""type"":""experimental"",""array_length"":8,""meanVal"":39,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","140","309110","0.0-140.0","rina test","2536","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":38,""type"":""experimental"",""array_length"":2,""meanVal"":13,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2536","2536","true","blue31.jpg","30","500","blue","2","[10,16]","13","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","44","blue"
"html-keyboard-response","141","309611","0.0-141.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","142","311113","0.0-142.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:1500% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:900% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":38,""type"":""experimental"",""array_length"":2,""meanVal"":13,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","143","314080","0.0-143.0","rina test","2966","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":39,""type"":""experimental"",""array_length"":2,""meanVal"":12,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2966","2966","true","blue38.jpg","37","500","blue","2","[9,15]","12","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","45","blue"
"html-keyboard-response","144","314696","0.0-144.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","145","316205","0.0-145.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:32px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:24px'></div> <div class='blue' style='background-position:2200% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:25px'></div> <div class='blue' style='background-position:2000% 0%;margin-top:26px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":39,""type"":""experimental"",""array_length"":2,""meanVal"":12,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","146","319664","0.0-146.0","rina test","3458","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":40,""type"":""experimental"",""array_length"":6,""meanVal"":17,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3458","3458","true","blue38.jpg","37","600","blue","6","[12,14,16,18,20,22]","17","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","46","blue"
"html-keyboard-response","147","320165","0.0-147.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","148","321667","0.0-148.0","rina test","null","","","","<span class='grid'><div class='blue' style='background-position:3600% 0%;margin-top:50px'></div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:4200% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:42px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:49px'></div> <div class='blue' style='background-position:4000% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":40,""type"":""experimental"",""array_length"":6,""meanVal"":17,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","149","323816","0.0-149.0","rina test","2148","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":41,""type"":""experimental"",""array_length"":6,""meanVal"":37,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2148","2148","true","blue11.jpg","10","500","blue","6","[32,34,36,38,40,42]","37","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","47","blue"
"html-keyboard-response","150","324317","0.0-150.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","151","325819","0.0-151.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:1000% 0%;margin-top:28px'></div> <div> </div> <div class='blue' style='background-position:2000% 0%;margin-top:49px'></div> <div> </div> <div class='blue' style='background-position:1800% 0%;margin-top:35px'></div> <div> </div> <div class='blue' style='background-position:1600% 0%;margin-top:27px'></div> <div class='blue' style='background-position:1200% 0%;margin-top:21px'></div> <div> </div></span>","null","stimulus","{""index"":41,""type"":""experimental"",""array_length"":6,""meanVal"":37,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","152","327674","0.0-152.0","rina test","1853","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":42,""type"":""experimental"",""array_length"":6,""meanVal"":15,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1853","1853","true","blue38.jpg","37","500","blue","6","[10,12,14,16,18,20]","15","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","48","blue"
"html-keyboard-response","153","328175","0.0-153.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","154","329677","0.0-154.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":42,""type"":""experimental"",""array_length"":6,""meanVal"":15,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","155","332138","0.0-155.0","rina test","2459","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":43,""type"":""experimental"",""array_length"":2,""meanVal"":37,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2459","2459","true","blue6.jpg","5","500","blue","2","[34,40]","37","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","49","blue"
"html-keyboard-response","156","332539","0.0-156.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","157","334041","0.0-157.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:800% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:1400% 0%;margin-top:45px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":43,""type"":""experimental"",""array_length"":2,""meanVal"":37,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","158","337817","0.0-158.0","rina test","3756","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":44,""type"":""experimental"",""array_length"":2,""meanVal"":11,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","3756","3756","true","blue41.jpg","40","400","blue","2","[8,14]","11","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","50","blue"
"html-keyboard-response","159","338219","0.0-159.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","160","339721","0.0-160.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3000% 0%;margin-top:41px'></div> <div class='blue' style='background-position:2800% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='blue' style='background-position:2400% 0%;margin-top:26px'></div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:43px'></div> <div class='blue' style='background-position:3400% 0%;margin-top:29px'></div> <div> </div> <div class='blue' style='background-position:2600% 0%;margin-top:28px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":44,""type"":""experimental"",""array_length"":2,""meanVal"":11,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","161","342042","0.0-161.0","rina test","2318","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":45,""type"":""experimental"",""array_length"":6,""meanVal"":29,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","2318","2318","true","blue22.jpg","21","400","blue","6","[24,26,28,30,32,34]","29","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","51","blue"
"html-keyboard-response","162","342543","0.0-162.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","163","344045","0.0-163.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3400% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:4000% 0%;margin-top:49px'></div> <div> </div></span>","null","stimulus","{""index"":45,""type"":""experimental"",""array_length"":6,""meanVal"":29,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","164","345883","0.0-164.0","rina test","1837","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":46,""type"":""experimental"",""array_length"":2,""meanVal"":37,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","1837","1837","true","blue19.jpg","18","500","blue","2","[34,40]","37","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","52","blue"
"html-keyboard-response","165","346285","0.0-165.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","blue"
"html-keyboard-response","166","347787","0.0-166.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3200% 0%;margin-top:25px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='blue' style='background-position:3800% 0%;margin-top:42px'></div></span>","null","stimulus","{""index"":46,""type"":""experimental"",""array_length"":2,""meanVal"":37,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","blue"
"image-slider-response_noButton","167","355445","0.0-167.0","rina test","7657","","","","img/blue1.jpg,img/blue2.jpg,img/blue3.jpg,img/blue4.jpg,img/blue5.jpg,img/blue6.jpg,img/blue7.jpg,img/blue8.jpg,img/blue9.jpg,img/blue10.jpg,img/blue11.jpg,img/blue12.jpg,img/blue13.jpg,img/blue14.jpg,img/blue15.jpg,img/blue16.jpg,img/blue17.jpg,img/blue18.jpg,img/blue19.jpg,img/blue20.jpg,img/blue21.jpg,img/blue22.jpg,img/blue23.jpg,img/blue24.jpg,img/blue25.jpg,img/blue26.jpg,img/blue27.jpg,img/blue28.jpg,img/blue29.jpg,img/blue30.jpg,img/blue31.jpg,img/blue32.jpg,img/blue33.jpg,img/blue34.jpg,img/blue35.jpg,img/blue36.jpg,img/blue37.jpg,img/blue38.jpg,img/blue39.jpg,img/blue40.jpg,img/blue41.jpg,img/blue42.jpg,img/blue43.jpg,img/blue44.jpg,img/blue45.jpg,img/blue46.jpg,img/blue47.jpg,img/blue48.jpg,img/blue49.jpg,img/blue50.jpg","","response","{""index"":47,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""blue""}","image-slider-response_noButton","<p>how blue was the stimulus in your opinion?</p>","1","50","0","function morphedScaleBlue() {
  // defining a few helper functions
  function nrange(size, startAt = 0) {
    return [...Array(size).keys()].map(i => i + startAt);
  };

  function fillArray(value, len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(value);
    }
    return arr;
  };

  function generateSlices(vWidth, nSlices) {
    var step = vWidth*0.6/(nSlices-2);
    var stepArray = fillArray(step,nSlices-2)
    stepArray.unshift(0.2*vWidth)
    stepArray.push(0.2*vWidth)

    var bounds = [];
    
    for (var i = 0; i < nSlices; i++) {
      if (i==0) {
        bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
      } else if (i>0 && i!=nSlices-1) {
        bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
      } else {
        bounds.push([(vWidth-0.2*vWidth), vWidth])  
      }
    };
    return bounds;
  };
  
  // start trial timer
  var startTime = (new Date()).getTime();
  // get trial data
  var trialData = jsPsych.currentTrial();

  // remove the picture scales and the slider
  $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
  $('img').remove();
  var imgScale = getScaleBlue();
  
  // derive the letter of the image filenames
  var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
  
  // split the number of the image filenames off from the rest of it
  var nScale = [];
  for (var i = 0; i < imgScale.length-1; i++) {
    var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
    nScale.push(n);
  };
  
  // calculate the element width, and slice it up into sections
  var vWidth = $(document).width();
  var nSlices = nScale.length;
  var slices = generateSlices(vWidth, nSlices);

  // setting up initial vertical line to start the mousemove functionality
  var vHeight = $(document).height()-8;
  var lineSlice = vWidth / 10;
  var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
  var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
  $("".jspsych-content-wrapper"").prepend(vertLine);
  $("".jspsych-content-wrapper"").prepend(linePrompt);
  
  // hide prompt until the trial is begun
  $('#jspsych-content > p').css(""visibility"", ""hidden"");

  // initialize the central image with the most neutral one (i.e. from
  // the middle of the scale) and set the image to be blurred
  var initialImage = imgScale[0];
  $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);

  // ADD VISUAL SCALE SHOWING MIN/MAX
  var scaleWidth = vWidth * 0.6;
  var scaleLeft = vWidth * 0.2;
  var scaleHtml = `
    <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
      <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
      <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
      <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
      <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:blue; display:none;""></div>
    </div>
  `;
  $("".jspsych-content-wrapper"").append(scaleHtml);

  // workaround with a global variable
  window.__imageMouseOver = {
    lineSlice: lineSlice,
    slices: slices,
    nScale: nScale,
    imgBase: imgBase,
    startTime: startTime,
    trialData: trialData,
    sliceSelected: 0,
  };
  var __listenerBools = {};

  // define mousemove event listener that changes image
  function changeImg(event) {
    var mouseX = Math.floor(event.pageX);
    
    // Show the scale after interaction begins
    $(""#scale-container"").css(""display"", ""block"");
    
    // Update current marker position based on mouse position
    var scaleWidth = $(""#scale-container"").width();
    var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
    var percentPos = (relativePos / scaleWidth) * 100;
    
    $(""#current-marker"").css({
      ""left"": `${relativePos}px`,
      ""display"": ""block""
    });
    
    for (var i = 0; i < __imageMouseOver.slices.length; i++) {
      // if mouse X position is within the bounds of the X axis slice,
      // change the image to one that is indexed to that slice
      if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
        // capture which slice is selected
        __imageMouseOver.sliceSelected = i;
        // update img src to the picture that corresponds to that slice
        $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
      }
    };
  };
  
  // define the click listener that ends trial
  function clickHandler(event) {
    if (__listenerBools['mousemove']) {
      // derive trial data
      var trialData = __imageMouseOver.trialData;
      var end_time = (new Date()).getTime();
      var rt = end_time - __imageMouseOver.startTime;
      trialData['rt'] = rt;
      trialData['stimulus_duration'] = rt;
      trialData['trial_duration'] = rt;
      trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
      trialData['indexSelected'] = __imageMouseOver.sliceSelected;
      // turn off listeners
      $(document).off('mousemove');
      $(document).off('click');
      // clean up variable namespaces
      delete window.__imageMouseOver
      delete __listenerBools;
      // clean up scale
      $(""#scale-container"").remove();
      // finish the trial with trial data
      jsPsych.finishTrial(trialData);
    };
  };

  function verticalLineInit(event) {
    var mouseX = Math.floor(event.pageX);
    if (mouseX <= __imageMouseOver.lineSlice) {
      $(""#vertLine"").remove();
      $(""#linePrompt"").remove();
      $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
        ""filter"":""blur(0px)"",
        ""visibility"": ""visible"",
      });
      $('#jspsych-content > p').css(""visibility"", ""visible"");
      $('.jspsych-image-slider-response_noButton-').css(""visibility"", ""visible"");
      
      __listenerBools['mousemove'] = true;
      // turn off THIS mouse move listener
      $(document).off(""mousemove"");
      // turn on the mouse move listener that changes the image
      $(document).mousemove(changeImg);
      // add mouse click listener
      $(document).on('click', clickHandler);
    };
  };

  // turn on the vertical line mouse move listener
  $(document).mousemove(verticalLineInit);
}","[object Object]","0","","Continue","7657","7657","true","blue13.jpg","12","400","blue","2","[32,38]","35","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","53","blue"
"survey-text","168","364538","0.0-168.0-0.0","rina test","9082","","","{""Q0"":""sky""}","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"html-keyboard-response","169","364941","0.0-169.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","170","366445","0.0-170.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:38px'></div> <div class='red' style='background-position:2800% 0%;margin-top:42px'></div> <div class='red' style='background-position:2300% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:31px'></div> <div class='red' style='background-position:3500% 0%;margin-top:32px'></div> <div class='red' style='background-position:2500% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:40px'></div></span>","null","stimulus","{""index"":47,""type"":""experimental"",""array_length"":2,""meanVal"":35,""color"":""blue""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","171","400122","0.0-171.0","rina test","33673","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":48,""type"":""experimental"",""array_length"":8,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","33673","33673","true","red8.jpg","7","400","red","8","[23,25,26,28,30,32,33,35]","29","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","54","red"
"html-keyboard-response","172","400525","0.0-172.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","173","402028","0.0-173.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:1700% 0%;margin-top:49px'></div> <div class='red' style='background-position:2500% 0%;margin-top:39px'></div> <div class='red' style='background-position:2200% 0%;margin-top:36px'></div> <div class='red' style='background-position:2700% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:20px'></div> <div class='red' style='background-position:1600% 0%;margin-top:48px'></div> <div class='red' style='background-position:2300% 0%;margin-top:22px'></div> <div class='red' style='background-position:3000% 0%;margin-top:32px'></div> <div class='red' style='background-position:2800% 0%;margin-top:44px'></div> <div class='red' style='background-position:2400% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:24px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":48,""type"":""experimental"",""array_length"":8,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","174","404555","0.0-174.0","rina test","2524","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":49,""type"":""experimental"",""array_length"":12,""meanVal"":23,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2524","2524","true","red42.jpg","41","400","red","12","[16,19,17,21,23,22,24,24,25,27,28,30]","23","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","55","red"
"html-keyboard-response","175","404956","0.0-175.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","176","406457","0.0-176.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:3600% 0%;margin-top:29px'></div> <div class='red' style='background-position:4200% 0%;margin-top:30px'></div> <div class='red' style='background-position:3900% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:50px'></div> <div class='red' style='background-position:4100% 0%;margin-top:21px'></div> <div class='red' style='background-position:3700% 0%;margin-top:22px'></div> <div class='red' style='background-position:4400% 0%;margin-top:29px'></div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:27px'></div> <div class='red' style='background-position:3300% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:24px'></div> <div class='red' style='background-position:3500% 0%;margin-top:28px'></div></span>","null","stimulus","{""index"":49,""type"":""experimental"",""array_length"":12,""meanVal"":23,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","177","408627","0.0-177.0","rina test","2168","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":50,""type"":""experimental"",""array_length"":12,""meanVal"":37,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2168","2168","true","red9.jpg","8","400","red","12","[30,33,31,35,37,36,38,38,39,41,42,44]","37","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","56","red"
"html-keyboard-response","178","409028","0.0-178.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","179","410531","0.0-179.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3000% 0%;margin-top:32px'></div> <div class='red' style='background-position:3400% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:22px'></div> <div class='red' style='background-position:3800% 0%;margin-top:21px'></div></span>","null","stimulus","{""index"":50,""type"":""experimental"",""array_length"":12,""meanVal"":37,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","180","412641","0.0-180.0","rina test","2107","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":51,""type"":""experimental"",""array_length"":6,""meanVal"":33,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2107","2107","true","red9.jpg","8","400","red","6","[28,30,32,34,36,38]","33","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","57","red"
"html-keyboard-response","181","413243","0.0-181.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","182","414745","0.0-182.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:32px'></div> <div class='red' style='background-position:1100% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":51,""type"":""experimental"",""array_length"":6,""meanVal"":33,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","183","417296","0.0-183.0","rina test","2549","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":52,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2549","2549","true","red38.jpg","37","600","red","2","[11,17]","14","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","58","red"
"html-keyboard-response","184","417797","0.0-184.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","185","419298","0.0-185.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:37px'></div> <div class='red' style='background-position:3500% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":52,""type"":""experimental"",""array_length"":2,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","186","422476","0.0-186.0","rina test","3175","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":53,""type"":""experimental"",""array_length"":2,""meanVal"":38,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3175","3175","true","red9.jpg","8","500","red","2","[35,41]","38","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","59","red"
"html-keyboard-response","187","422978","0.0-187.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","188","424483","0.0-188.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:3400% 0%;margin-top:39px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:38px'></div> <div class='red' style='background-position:4400% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:46px'></div> <div> </div> <div class='red' style='background-position:4200% 0%;margin-top:32px'></div> <div class='red' style='background-position:4100% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:26px'></div> <div class='red' style='background-position:3500% 0%;margin-top:36px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":53,""type"":""experimental"",""array_length"":2,""meanVal"":38,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","189","427658","0.0-189.0","rina test","3173","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":54,""type"":""experimental"",""array_length"":8,""meanVal"":38,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3173","3173","true","red8.jpg","7","500","red","8","[32,34,35,37,39,41,42,44]","38","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","60","red"
"html-keyboard-response","190","428159","0.0-190.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","191","429664","0.0-191.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:900% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='red' style='background-position:800% 0%;margin-top:34px'></div> <div class='red' style='background-position:1100% 0%;margin-top:28px'></div> <div class='red' style='background-position:1300% 0%;margin-top:44px'></div> <div class='red' style='background-position:1600% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:26px'></div> <div class='red' style='background-position:600% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:22px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":54,""type"":""experimental"",""array_length"":8,""meanVal"":38,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","192","431921","0.0-192.0","rina test","2255","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":55,""type"":""experimental"",""array_length"":8,""meanVal"":12,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2255","2255","true","red42.jpg","41","500","red","8","[6,8,9,11,13,15,16,18]","12","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","61","red"
"html-keyboard-response","193","432323","0.0-193.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","194","433827","0.0-194.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:3700% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:40px'></div> <div class='red' style='background-position:4000% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:46px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:45px'></div> <div class='red' style='background-position:3300% 0%;margin-top:41px'></div> <div class='red' style='background-position:3200% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:45px'></div> <div class='red' style='background-position:3100% 0%;margin-top:50px'></div> <div class='red' style='background-position:3500% 0%;margin-top:31px'></div> <div class='red' style='background-position:3800% 0%;margin-top:44px'></div> <div class='red' style='background-position:2900% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":55,""type"":""experimental"",""array_length"":8,""meanVal"":12,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","195","435940","0.0-195.0","rina test","2111","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":56,""type"":""experimental"",""array_length"":12,""meanVal"":33,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2111","2111","true","red10.jpg","9","400","red","12","[26,29,27,31,33,32,34,34,35,37,38,40]","33","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","62","red"
"html-keyboard-response","196","436541","0.0-196.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","197","438045","0.0-197.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:1700% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:20px'></div> <div class='red' style='background-position:600% 0%;margin-top:39px'></div> <div class='red' style='background-position:800% 0%;margin-top:26px'></div> <div class='red' style='background-position:1400% 0%;margin-top:44px'></div> <div class='red' style='background-position:1000% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:500% 0%;margin-top:46px'></div> <div class='red' style='background-position:1300% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:46px'></div> <div class='red' style='background-position:1900% 0%;margin-top:41px'></div> <div class='red' style='background-position:1100% 0%;margin-top:35px'></div></span>","null","stimulus","{""index"":56,""type"":""experimental"",""array_length"":12,""meanVal"":33,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","198","440580","0.0-198.0","rina test","2534","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":57,""type"":""experimental"",""array_length"":12,""meanVal"":12,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2534","2534","true","red46.jpg","45","600","red","12","[5,8,6,10,12,11,13,13,14,16,17,19]","12","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","63","red"
"html-keyboard-response","199","440982","0.0-199.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","200","442486","0.0-200.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:40px'></div> <div class='red' style='background-position:3400% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:42px'></div> <div class='red' style='background-position:2800% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":57,""type"":""experimental"",""array_length"":12,""meanVal"":12,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","201","444458","0.0-201.0","rina test","1971","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":58,""type"":""experimental"",""array_length"":6,""meanVal"":33,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1971","1971","true","red8.jpg","7","400","red","6","[28,30,32,34,36,38]","33","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","64","red"
"html-keyboard-response","202","444861","0.0-202.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","203","446364","0.0-203.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:23px'></div> <div class='red' style='background-position:2700% 0%;margin-top:47px'></div></span>","null","stimulus","{""index"":58,""type"":""experimental"",""array_length"":6,""meanVal"":33,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","204","448612","0.0-204.0","rina test","2247","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":59,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2247","2247","true","red5.jpg","4","400","red","2","[21,27]","24","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","65","red"
"html-keyboard-response","205","449214","0.0-205.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","206","450716","0.0-206.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3100% 0%;margin-top:31px'></div> <div class='red' style='background-position:2400% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:33px'></div> <div class='red' style='background-position:2900% 0%;margin-top:40px'></div> <div class='red' style='background-position:2700% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:39px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":59,""type"":""experimental"",""array_length"":2,""meanVal"":24,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","207","454690","0.0-207.0","rina test","3969","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":60,""type"":""experimental"",""array_length"":8,""meanVal"":28,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3969","3969","true","red36.jpg","35","600","red","8","[22,24,25,27,29,31,32,34]","28","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","66","red"
"html-keyboard-response","208","455093","0.0-208.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","209","456596","0.0-209.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:3200% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:35px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:45px'></div></span>","null","stimulus","{""index"":60,""type"":""experimental"",""array_length"":8,""meanVal"":28,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","210","458999","0.0-210.0","rina test","2402","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":61,""type"":""experimental"",""array_length"":6,""meanVal"":35,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2402","2402","true","red19.jpg","18","400","red","6","[30,32,34,36,38,40]","35","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","67","red"
"html-keyboard-response","211","459500","0.0-211.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","212","461003","0.0-212.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:47px'></div> <div class='red' style='background-position:3500% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4700% 0%;margin-top:30px'></div> <div class='red' style='background-position:4400% 0%;margin-top:27px'></div> <div class='red' style='background-position:3700% 0%;margin-top:41px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:33px'></div> <div class='red' style='background-position:4200% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div class='red' style='background-position:4500% 0%;margin-top:46px'></div> <div> </div></span>","null","stimulus","{""index"":61,""type"":""experimental"",""array_length"":6,""meanVal"":35,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","213","463152","0.0-213.0","rina test","2148","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":62,""type"":""experimental"",""array_length"":8,""meanVal"":41,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2148","2148","true","red9.jpg","8","500","red","8","[35,37,38,40,42,44,45,47]","41","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","68","red"
"html-keyboard-response","214","463555","0.0-214.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","215","465057","0.0-215.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2500% 0%;margin-top:45px'></div> <div class='red' style='background-position:2200% 0%;margin-top:36px'></div> <div class='red' style='background-position:1900% 0%;margin-top:47px'></div> <div class='red' style='background-position:2100% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:34px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:41px'></div> <div class='red' style='background-position:1800% 0%;margin-top:31px'></div> <div class='red' style='background-position:2700% 0%;margin-top:34px'></div> <div class='red' style='background-position:2400% 0%;margin-top:23px'></div> <div class='red' style='background-position:1300% 0%;margin-top:43px'></div> <div class='red' style='background-position:1400% 0%;margin-top:44px'></div> <div class='red' style='background-position:2100% 0%;margin-top:38px'></div></span>","null","stimulus","{""index"":62,""type"":""experimental"",""array_length"":8,""meanVal"":41,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","216","466971","0.0-216.0","rina test","1912","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":63,""type"":""experimental"",""array_length"":12,""meanVal"":20,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1912","1912","true","red42.jpg","41","400","red","12","[13,16,14,18,20,19,21,21,22,24,25,27]","20","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","69","red"
"html-keyboard-response","217","467572","0.0-217.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","218","469074","0.0-218.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:27px'></div> <div class='red' style='background-position:2100% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:20px'></div> <div class='red' style='background-position:2700% 0%;margin-top:47px'></div> <div class='red' style='background-position:2900% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:34px'></div></span>","null","stimulus","{""index"":63,""type"":""experimental"",""array_length"":12,""meanVal"":20,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","219","472627","0.0-219.0","rina test","3551","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":64,""type"":""experimental"",""array_length"":6,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3551","3551","true","red18.jpg","17","600","red","6","[21,23,25,27,29,31]","26","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","70","red"
"html-keyboard-response","220","473029","0.0-220.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","221","474531","0.0-221.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:1500% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:49px'></div> <div class='red' style='background-position:700% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:25px'></div> <div class='red' style='background-position:1700% 0%;margin-top:28px'></div> <div class='red' style='background-position:900% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":64,""type"":""experimental"",""array_length"":6,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","222","476421","0.0-222.0","rina test","1887","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":65,""type"":""experimental"",""array_length"":6,""meanVal"":12,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1887","1887","true","red45.jpg","44","400","red","6","[7,9,11,13,15,17]","12","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","71","red"
"html-keyboard-response","223","477023","0.0-223.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","224","478525","0.0-224.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1700% 0%;margin-top:24px'></div> <div class='red' style='background-position:2300% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:36px'></div> <div class='red' style='background-position:1600% 0%;margin-top:30px'></div> <div class='red' style='background-position:2600% 0%;margin-top:29px'></div> <div class='red' style='background-position:2400% 0%;margin-top:29px'></div></span>","null","stimulus","{""index"":65,""type"":""experimental"",""array_length"":6,""meanVal"":12,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","225","480794","0.0-225.0","rina test","2267","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":66,""type"":""experimental"",""array_length"":8,""meanVal"":20,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2267","2267","true","red37.jpg","36","600","red","8","[14,16,17,19,21,23,24,26]","20","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","72","red"
"html-keyboard-response","226","481395","0.0-226.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","227","482896","0.0-227.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:2600% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:31px'></div> <div> </div></span>","null","stimulus","{""index"":66,""type"":""experimental"",""array_length"":8,""meanVal"":20,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","228","485135","0.0-228.0","rina test","2237","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":67,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2237","2237","true","red19.jpg","18","600","red","2","[26,32]","29","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","73","red"
"html-keyboard-response","229","485637","0.0-229.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","230","487139","0.0-230.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:2600% 0%;margin-top:23px'></div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:28px'></div> <div class='red' style='background-position:2900% 0%;margin-top:21px'></div> <div class='red' style='background-position:2200% 0%;margin-top:37px'></div> <div class='red' style='background-position:2100% 0%;margin-top:39px'></div> <div class='red' style='background-position:2800% 0%;margin-top:45px'></div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:34px'></div> <div class='red' style='background-position:3300% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:27px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:41px'></div> <div class='red' style='background-position:3000% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:32px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":67,""type"":""experimental"",""array_length"":2,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","231","489647","0.0-231.0","rina test","2506","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":68,""type"":""experimental"",""array_length"":12,""meanVal"":28,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2506","2506","true","red8.jpg","7","500","red","12","[21,24,22,26,28,27,29,29,30,32,33,35]","28","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","74","red"
"html-keyboard-response","232","490049","0.0-232.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","233","491551","0.0-233.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:1800% 0%;margin-top:36px'></div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:32px'></div> <div class='red' style='background-position:2100% 0%;margin-top:45px'></div> <div class='red' style='background-position:1900% 0%;margin-top:31px'></div> <div class='red' style='background-position:1300% 0%;margin-top:41px'></div> <div class='red' style='background-position:1400% 0%;margin-top:38px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2100% 0%;margin-top:42px'></div> <div class='red' style='background-position:2500% 0%;margin-top:35px'></div> <div class='red' style='background-position:1600% 0%;margin-top:36px'></div> <div class='red' style='background-position:2200% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:33px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2700% 0%;margin-top:35px'></div></span>","null","stimulus","{""index"":68,""type"":""experimental"",""array_length"":12,""meanVal"":28,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","234","494390","0.0-234.0","rina test","2837","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":69,""type"":""experimental"",""array_length"":12,""meanVal"":20,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2837","2837","true","red18.jpg","17","400","red","12","[13,16,14,18,20,19,21,21,22,24,25,27]","20","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","75","red"
"html-keyboard-response","235","494792","0.0-235.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","236","496293","0.0-236.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1200% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":69,""type"":""experimental"",""array_length"":12,""meanVal"":20,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","237","498879","0.0-237.0","rina test","2584","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":70,""type"":""experimental"",""array_length"":2,""meanVal"":15,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2584","2584","true","red45.jpg","44","400","red","2","[12,18]","15","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","76","red"
"html-keyboard-response","238","499381","0.0-238.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","239","500882","0.0-239.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:400% 0%;margin-top:42px'></div> <div class='red' style='background-position:500% 0%;margin-top:21px'></div> <div class='red' style='background-position:1100% 0%;margin-top:39px'></div> <div class='red' style='background-position:1000% 0%;margin-top:35px'></div> <div class='red' style='background-position:1200% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:29px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:700% 0%;margin-top:31px'></div> <div> </div> <div class='red' style='background-position:1500% 0%;margin-top:30px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:29px'></div> <div class='red' style='background-position:900% 0%;margin-top:29px'></div> <div class='red' style='background-position:1600% 0%;margin-top:49px'></div> <div class='red' style='background-position:1200% 0%;margin-top:49px'></div> <div> </div></span>","null","stimulus","{""index"":70,""type"":""experimental"",""array_length"":2,""meanVal"":15,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","240","502977","0.0-240.0","rina test","2093","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":71,""type"":""experimental"",""array_length"":12,""meanVal"":11,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2093","2093","true","red47.jpg","46","500","red","12","[4,7,5,9,11,10,12,12,13,15,16,18]","11","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","77","red"
"html-keyboard-response","241","503579","0.0-241.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","242","505081","0.0-242.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:3000% 0%;margin-top:41px'></div> <div class='red' style='background-position:4400% 0%;margin-top:30px'></div> <div class='red' style='background-position:3900% 0%;margin-top:40px'></div> <div class='red' style='background-position:3700% 0%;margin-top:28px'></div> <div class='red' style='background-position:4100% 0%;margin-top:21px'></div> <div class='red' style='background-position:3300% 0%;margin-top:24px'></div> <div class='red' style='background-position:4200% 0%;margin-top:27px'></div> <div class='red' style='background-position:3100% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:48px'></div> <div class='red' style='background-position:3500% 0%;margin-top:37px'></div></span>","null","stimulus","{""index"":71,""type"":""experimental"",""array_length"":12,""meanVal"":11,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","243","507331","0.0-243.0","rina test","2249","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":72,""type"":""experimental"",""array_length"":12,""meanVal"":37,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2249","2249","true","red9.jpg","8","600","red","12","[30,33,31,35,37,36,38,38,39,41,42,44]","37","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","78","red"
"html-keyboard-response","244","507933","0.0-244.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","245","509435","0.0-245.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1600% 0%;margin-top:21px'></div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:46px'></div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:28px'></div> <div class='red' style='background-position:1400% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:900% 0%;margin-top:22px'></div> <div class='red' style='background-position:400% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='red' style='background-position:700% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:600% 0%;margin-top:50px'></div></span>","null","stimulus","{""index"":72,""type"":""experimental"",""array_length"":12,""meanVal"":37,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","246","511268","0.0-246.0","rina test","1830","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":73,""type"":""experimental"",""array_length"":8,""meanVal"":10,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1830","1830","true","red46.jpg","45","600","red","8","[4,6,7,9,11,13,14,16]","10","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","79","red"
"html-keyboard-response","247","511869","0.0-247.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","248","513371","0.0-248.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:2400% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:34px'></div> <div class='red' style='background-position:2300% 0%;margin-top:26px'></div> <div class='red' style='background-position:2900% 0%;margin-top:21px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3200% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:46px'></div> <div class='red' style='background-position:3400% 0%;margin-top:24px'></div> <div class='red' style='background-position:3700% 0%;margin-top:41px'></div> <div class='red' style='background-position:3000% 0%;margin-top:29px'></div> <div class='red' style='background-position:3100% 0%;margin-top:36px'></div> <div class='red' style='background-position:2800% 0%;margin-top:50px'></div></span>","null","stimulus","{""index"":73,""type"":""experimental"",""array_length"":8,""meanVal"":10,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","249","516025","0.0-249.0","rina test","2652","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":74,""type"":""experimental"",""array_length"":12,""meanVal"":30,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2652","2652","true","red20.jpg","19","600","red","12","[23,26,24,28,30,29,31,31,32,34,35,37]","30","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","80","red"
"html-keyboard-response","250","516427","0.0-250.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","251","517929","0.0-251.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:3100% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:22px'></div> <div class='red' style='background-position:3400% 0%;margin-top:32px'></div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:40px'></div> <div class='red' style='background-position:3900% 0%;margin-top:50px'></div> <div class='red' style='background-position:3200% 0%;margin-top:31px'></div> <div class='red' style='background-position:3300% 0%;margin-top:22px'></div> <div class='red' style='background-position:3000% 0%;margin-top:40px'></div> <div class='red' style='background-position:3300% 0%;margin-top:20px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:39px'></div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:43px'></div> <div> </div></span>","null","stimulus","{""index"":74,""type"":""experimental"",""array_length"":12,""meanVal"":30,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","252","521529","0.0-252.0","rina test","3597","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":75,""type"":""experimental"",""array_length"":12,""meanVal"":32,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3597","3597","true","red16.jpg","15","400","red","12","[25,28,26,30,32,31,33,33,34,36,37,39]","32","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","81","red"
"html-keyboard-response","253","521931","0.0-253.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","254","523433","0.0-254.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:2500% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:35px'></div> <div class='red' style='background-position:2700% 0%;margin-top:35px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:23px'></div> <div class='red' style='background-position:1500% 0%;margin-top:37px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:22px'></div> <div class='red' style='background-position:2000% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:22px'></div></span>","null","stimulus","{""index"":75,""type"":""experimental"",""array_length"":12,""meanVal"":32,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","255","533008","0.0-255.0","rina test","9574","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":76,""type"":""experimental"",""array_length"":8,""meanVal"":21,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","9574","9574","true","red18.jpg","17","400","red","8","[15,17,18,20,22,24,25,27]","21","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","82","red"
"html-keyboard-response","256","533612","0.0-256.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","257","535114","0.0-257.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1400% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:37px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:27px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:31px'></div> <div class='red' style='background-position:1600% 0%;margin-top:40px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":76,""type"":""experimental"",""array_length"":8,""meanVal"":21,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","258","540036","0.0-258.0","rina test","4920","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":77,""type"":""experimental"",""array_length"":6,""meanVal"":17,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","4920","4920","true","red17.jpg","16","600","red","6","[12,14,16,18,20,22]","17","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","83","red"
"html-keyboard-response","259","540537","0.0-259.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","260","542040","0.0-260.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:24px'></div> <div class='red' style='background-position:1700% 0%;margin-top:35px'></div> <div class='red' style='background-position:2500% 0%;margin-top:48px'></div> <div class='red' style='background-position:1400% 0%;margin-top:27px'></div> <div class='red' style='background-position:1800% 0%;margin-top:30px'></div> <div class='red' style='background-position:2200% 0%;margin-top:31px'></div> <div class='red' style='background-position:1900% 0%;margin-top:20px'></div> <div class='red' style='background-position:1100% 0%;margin-top:38px'></div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:49px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:45px'></div></span>","null","stimulus","{""index"":77,""type"":""experimental"",""array_length"":6,""meanVal"":17,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","261","545627","0.0-261.0","rina test","3584","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":78,""type"":""experimental"",""array_length"":12,""meanVal"":18,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3584","3584","true","red24.jpg","23","500","red","12","[11,14,12,16,18,17,19,19,20,22,23,25]","18","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","84","red"
"html-keyboard-response","262","546128","0.0-262.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","263","547630","0.0-263.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4400% 0%;margin-top:31px'></div> <div class='red' style='background-position:3800% 0%;margin-top:31px'></div></span>","null","stimulus","{""index"":78,""type"":""experimental"",""array_length"":12,""meanVal"":18,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","264","549436","0.0-264.0","rina test","1805","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":79,""type"":""experimental"",""array_length"":2,""meanVal"":41,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1805","1805","true","red9.jpg","8","500","red","2","[38,44]","41","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","85","red"
"html-keyboard-response","265","550038","0.0-265.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","266","551541","0.0-266.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:2700% 0%;margin-top:27px'></div> <div> </div> <div class='red' style='background-position:1700% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:25px'></div> <div> </div> <div class='red' style='background-position:2900% 0%;margin-top:46px'></div> <div class='red' style='background-position:2400% 0%;margin-top:26px'></div> <div> </div> <div class='red' style='background-position:2200% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:35px'></div> <div class='red' style='background-position:2000% 0%;margin-top:35px'></div> <div> </div></span>","null","stimulus","{""index"":79,""type"":""experimental"",""array_length"":2,""meanVal"":41,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","267","553453","0.0-267.0","rina test","1909","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":80,""type"":""experimental"",""array_length"":8,""meanVal"":23,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1909","1909","true","red14.jpg","13","600","red","8","[17,19,20,22,24,26,27,29]","23","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","86","red"
"html-keyboard-response","268","553954","0.0-268.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","269","555457","0.0-269.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:3200% 0%;margin-top:32px'></div> <div class='red' style='background-position:3000% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:22px'></div> <div class='red' style='background-position:2600% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2400% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":80,""type"":""experimental"",""array_length"":8,""meanVal"":23,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","270","556963","0.0-270.0","rina test","1503","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":81,""type"":""experimental"",""array_length"":6,""meanVal"":29,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1503","1503","true","red12.jpg","11","500","red","6","[24,26,28,30,32,34]","29","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","87","red"
"html-keyboard-response","271","557565","0.0-271.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","272","559068","0.0-272.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:2300% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:36px'></div> <div class='red' style='background-position:2200% 0%;margin-top:20px'></div> <div class='red' style='background-position:2700% 0%;margin-top:42px'></div> <div class='red' style='background-position:2900% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:30px'></div> <div class='red' style='background-position:3200% 0%;margin-top:22px'></div></span>","null","stimulus","{""index"":81,""type"":""experimental"",""array_length"":6,""meanVal"":29,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","273","561909","0.0-273.0","rina test","2839","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":82,""type"":""experimental"",""array_length"":8,""meanVal"":26,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2839","2839","true","red17.jpg","16","600","red","8","[20,22,23,25,27,29,30,32]","26","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","88","red"
"html-keyboard-response","274","562313","0.0-274.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","275","563815","0.0-275.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:43px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:40px'></div> <div> </div></span>","null","stimulus","{""index"":82,""type"":""experimental"",""array_length"":8,""meanVal"":26,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","276","566076","0.0-276.0","rina test","2260","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":83,""type"":""experimental"",""array_length"":2,""meanVal"":13,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2260","2260","true","red44.jpg","43","400","red","2","[10,16]","13","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","89","red"
"html-keyboard-response","277","566678","0.0-277.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","278","568181","0.0-278.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:3200% 0%;margin-top:40px'></div> <div class='red' style='background-position:3400% 0%;margin-top:28px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3600% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:34px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3800% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3000% 0%;margin-top:43px'></div></span>","null","stimulus","{""index"":83,""type"":""experimental"",""array_length"":2,""meanVal"":13,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","279","570769","0.0-279.0","rina test","2585","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":84,""type"":""experimental"",""array_length"":6,""meanVal"":35,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2585","2585","true","red18.jpg","17","600","red","6","[30,32,34,36,38,40]","35","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","90","red"
"html-keyboard-response","280","571370","0.0-280.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","281","572872","0.0-281.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:1800% 0%;margin-top:50px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2600% 0%;margin-top:44px'></div> <div class='red' style='background-position:2200% 0%;margin-top:40px'></div> <div class='red' style='background-position:2400% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2000% 0%;margin-top:49px'></div> <div> </div> <div class='red' style='background-position:2800% 0%;margin-top:24px'></div></span>","null","stimulus","{""index"":84,""type"":""experimental"",""array_length"":6,""meanVal"":35,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","282","602401","0.0-282.0","rina test","29525","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":85,""type"":""experimental"",""array_length"":6,""meanVal"":23,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","29525","29525","true","red30.jpg","29","600","red","6","[18,20,22,24,26,28]","23","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","91","red"
"html-keyboard-response","283","602803","0.0-283.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","284","604306","0.0-284.0","rina test","null","","","","<span class='grid'><div> </div> <div class='red' style='background-position:800% 0%;margin-top:31px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1400% 0%;margin-top:22px'></div> <div> </div> <div class='red' style='background-position:1600% 0%;margin-top:27px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:50px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:40px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1200% 0%;margin-top:43px'></div> <div> </div></span>","null","stimulus","{""index"":85,""type"":""experimental"",""array_length"":6,""meanVal"":23,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","285","607376","0.0-285.0","rina test","3069","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":86,""type"":""experimental"",""array_length"":6,""meanVal"":13,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3069","3069","true","red20.jpg","19","400","red","6","[8,10,12,14,16,18]","13","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","92","red"
"html-keyboard-response","286","607778","0.0-286.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","287","609280","0.0-287.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:20px'></div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":86,""type"":""experimental"",""array_length"":6,""meanVal"":13,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","288","610729","0.0-288.0","rina test","1449","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":87,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1449","1449","true","red23.jpg","22","400","red","2","[19,25]","22","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","93","red"
"html-keyboard-response","289","611230","0.0-289.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","290","612733","0.0-290.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:36px'></div></span>","null","stimulus","{""index"":87,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","291","616210","0.0-291.0","rina test","3475","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":88,""type"":""experimental"",""array_length"":2,""meanVal"":37,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","3475","3475","true","red16.jpg","15","500","red","2","[34,40]","37","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","94","red"
"html-keyboard-response","292","616812","0.0-292.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","293","618314","0.0-293.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:2000% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:1000% 0%;margin-top:48px'></div> <div> </div> <div class='red' style='background-position:1800% 0%;margin-top:24px'></div> <div> </div> <div> </div> <div class='red' style='background-position:1300% 0%;margin-top:20px'></div> <div class='red' style='background-position:1700% 0%;margin-top:30px'></div> <div class='red' style='background-position:1500% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1100% 0%;margin-top:41px'></div> <div class='red' style='background-position:800% 0%;margin-top:33px'></div></span>","null","stimulus","{""index"":88,""type"":""experimental"",""array_length"":2,""meanVal"":37,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","294","620161","0.0-294.0","rina test","1846","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":89,""type"":""experimental"",""array_length"":8,""meanVal"":14,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1846","1846","true","red20.jpg","19","600","red","8","[8,10,11,13,15,17,18,20]","14","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","95","red"
"html-keyboard-response","295","620563","0.0-295.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","296","622065","0.0-296.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div class='red' style='background-position:2500% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:1900% 0%;margin-top:32px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":89,""type"":""experimental"",""array_length"":8,""meanVal"":14,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","297","623963","0.0-297.0","rina test","1896","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":90,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1896","1896","true","red13.jpg","12","400","red","2","[19,25]","22","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","96","red"
"html-keyboard-response","298","624365","0.0-298.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","299","625867","0.0-299.0","rina test","null","","","","<span class='grid'><div class='red' style='background-position:3500% 0%;margin-top:38px'></div> <div class='red' style='background-position:3000% 0%;margin-top:46px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:36px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:47px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:43px'></div> <div class='red' style='background-position:3300% 0%;margin-top:47px'></div> <div class='red' style='background-position:2800% 0%;margin-top:30px'></div> <div class='red' style='background-position:3800% 0%;margin-top:35px'></div></span>","null","stimulus","{""index"":90,""type"":""experimental"",""array_length"":2,""meanVal"":22,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","300","627771","0.0-300.0","rina test","1901","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":91,""type"":""experimental"",""array_length"":8,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1901","1901","true","red9.jpg","8","400","red","8","[28,30,31,33,35,37,38,40]","34","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","97","red"
"html-keyboard-response","301","628373","0.0-301.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","302","629875","0.0-302.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:26px'></div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:44px'></div> <div class='red' style='background-position:3300% 0%;margin-top:42px'></div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:23px'></div> <div class='red' style='background-position:3700% 0%;margin-top:30px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:4300% 0%;margin-top:36px'></div> <div> </div> <div> </div></span>","null","stimulus","{""index"":91,""type"":""experimental"",""array_length"":8,""meanVal"":34,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","303","632075","0.0-303.0","rina test","2199","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":92,""type"":""experimental"",""array_length"":6,""meanVal"":38,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2199","2199","true","red14.jpg","13","600","red","6","[33,35,37,39,41,43]","38","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","98","red"
"html-keyboard-response","304","632677","0.0-304.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","305","634179","0.0-305.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3300% 0%;margin-top:44px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3500% 0%;margin-top:44px'></div> <div class='red' style='background-position:4300% 0%;margin-top:35px'></div> <div> </div> <div class='red' style='background-position:3900% 0%;margin-top:48px'></div> <div> </div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:44px'></div> <div> </div> <div class='red' style='background-position:4100% 0%;margin-top:49px'></div></span>","null","stimulus","{""index"":92,""type"":""experimental"",""array_length"":6,""meanVal"":38,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","306","636393","0.0-306.0","rina test","2211","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":93,""type"":""experimental"",""array_length"":6,""meanVal"":38,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2211","2211","true","red14.jpg","13","600","red","6","[33,35,37,39,41,43]","38","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","99","red"
"html-keyboard-response","307","636994","0.0-307.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","308","638496","0.0-308.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div class='red' style='background-position:4000% 0%;margin-top:26px'></div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3400% 0%;margin-top:45px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":93,""type"":""experimental"",""array_length"":6,""meanVal"":38,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","309","641166","0.0-309.0","rina test","2669","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":94,""type"":""experimental"",""array_length"":2,""meanVal"":37,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","2669","2669","true","red10.jpg","9","600","red","2","[34,40]","37","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","100","red"
"html-keyboard-response","310","641568","0.0-310.0","rina test","null","","","","<p style=""font-size: 48px;""> + </p>","null","fixation","","","","","","","","","","","","","","","","","","","","","","","","red"
"html-keyboard-response","311","643070","0.0-311.0","rina test","null","","","","<span class='grid'><div> </div> <div> </div> <div> </div> <div> </div> <div class='red' style='background-position:3100% 0%;margin-top:40px'></div> <div> </div> <div class='red' style='background-position:3700% 0%;margin-top:23px'></div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div> <div> </div></span>","null","stimulus","{""index"":94,""type"":""experimental"",""array_length"":2,""meanVal"":37,""color"":""red""}","","","","","","","","","","","","","","","","","","","","","","","red"
"image-slider-response_noButton","312","644782","0.0-312.0","rina test","1709","","","","img/red1.jpg,img/red2.jpg,img/red3.jpg,img/red4.jpg,img/red5.jpg,img/red6.jpg,img/red7.jpg,img/red8.jpg,img/red9.jpg,img/red10.jpg,img/red11.jpg,img/red12.jpg,img/red13.jpg,img/red14.jpg,img/red15.jpg,img/red16.jpg,img/red17.jpg,img/red18.jpg,img/red19.jpg,img/red20.jpg,img/red21.jpg,img/red22.jpg,img/red23.jpg,img/red24.jpg,img/red25.jpg,img/red26.jpg,img/red27.jpg,img/red28.jpg,img/red29.jpg,img/red30.jpg,img/red31.jpg,img/red32.jpg,img/red33.jpg,img/red34.jpg,img/red35.jpg,img/red36.jpg,img/red37.jpg,img/red38.jpg,img/red39.jpg,img/red40.jpg,img/red41.jpg,img/red42.jpg,img/red43.jpg,img/red44.jpg,img/red45.jpg,img/red46.jpg,img/red47.jpg,img/red48.jpg,img/red49.jpg,img/red50.jpg","","response","{""index"":95,""type"":""experimental"",""array_length"":2,""meanVal"":34,""color"":""red""}","image-slider-response_noButton","<p>how red was the stimulus in your opinion?</p>","1","50","0","function morphedScaleRed() {
    // defining a few helper functions
    function nrange(size, startAt = 0) {
      return [...Array(size).keys()].map(i => i + startAt);
    };
  
    function fillArray(value, len) {
      var arr = [];
      for (var i = 0; i < len; i++) {
        arr.push(value);
      }
      return arr;
    };
  
    function generateSlices(vWidth, nSlices) {
      var step = vWidth*0.6/(nSlices-2);
      var stepArray = fillArray(step,nSlices-2)
      stepArray.unshift(0.2*vWidth)
      stepArray.push(0.2*vWidth)
  
      var bounds = [];
      
      for (var i = 0; i < nSlices; i++) {
        if (i==0) {
          bounds.push([(i*stepArray[i]), (i*stepArray[i])+stepArray[i]])
        } else if (i>0 && i!=nSlices-1) {
          bounds.push([(i*stepArray[i]+0.2*vWidth), (i*stepArray[i])+stepArray[i]+0.2*vWidth])
        } else {
          bounds.push([(vWidth-0.2*vWidth), vWidth])  
        }
      };
      return bounds;
    };
    
    // start trial timer
    var startTime = (new Date()).getTime();
    // get trial data
    var trialData = jsPsych.currentTrial();
  
    // remove the picture scales and the slider
    $('.jspsych-image-slider-response_noButton-container').css(""visibility"", ""hidden"");
    $('img').remove();
    var imgScale = getScaleRed();
    
    // derive the letter of the image filenames
    var imgBase = imgScale[0].split('img/')[1].split('.jpg')[0].replace(/\d+/g, '');
    
    // split the number of the image filenames off from the rest of it
    var nScale = [];
    for (var i = 0; i < imgScale.length-1; i++) {
      var n = imgScale[i].split('img/')[1].split('.jpg')[0].split(imgBase)[1];
      nScale.push(n);
    };
    
    // calculate the element width, and slice it up into sections
    var vWidth = $(document).width();
    var nSlices = nScale.length;
    var slices = generateSlices(vWidth, nSlices);
  
    // setting up initial vertical line to start the mousemove functionality
    var vHeight = $(document).height()-8;
    var lineSlice = vWidth / 10;
    var vertLine = `<div style=""border-left:black;border-style:solid;margin-left:${lineSlice}px; height:${vHeight}px;width:0px;position:absolute;"" id=""vertLine""></div>`;
    var linePrompt = `<div id=""linePrompt""><div style=""font-size:50px;position:absolute;margin-left:${lineSlice*1.3}px;margin-top:${vHeight/2}px""></div><div style=""position:absolute;margin-left:${lineSlice*1.2}px;margin-top:${vHeight/2}px;z-index:5;"">Move mouse left of the line to begin</div></div>`;
    $("".jspsych-content-wrapper"").prepend(vertLine);
    $("".jspsych-content-wrapper"").prepend(linePrompt);
    
    // hide prompt until the trial is begun
    $('#jspsych-content > p').css(""visibility"", ""hidden"");
  
    // initialize the central image with the most neutral one (i.e. from
    // the middle of the scale) and set the image to be blurred
    var initialImage = imgScale[0];
    $('#jspsych-image-slider-response_noButton-stimulus').append(`<img src=""${initialImage}"" style=""filter:blur(4px);visibility:hidden;"" id=""changeable-image""/>`);
  
    // ADD VISUAL SCALE SHOWING MIN/MAX
    var scaleWidth = vWidth * 0.6;
    var scaleLeft = vWidth * 0.2;
    var scaleHtml = `
      <div id=""scale-container"" style=""position:absolute; bottom:120px; left:${scaleLeft}px; width:${scaleWidth}px; height:30px; background-color:rgba(220,220,220,0.7); border-radius:5px; display:none; z-index:10;"">
        <div style=""position:absolute; left:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; left:0px; top:32px; font-size:12px; color:black;"">Min (1)</div>
        <div style=""position:absolute; right:0px; width:2px; height:30px; background-color:black;""></div>
        <div style=""position:absolute; right:0px; top:32px; font-size:12px; color:black;"">Max (50)</div>
        <div id=""current-marker"" style=""position:absolute; left:0px; width:2px; height:30px; background-color:red; display:none;""></div>
      </div>
    `;
    $("".jspsych-content-wrapper"").append(scaleHtml);
  
    // workaround with a global variable
    window.__imageMouseOver = {
      lineSlice: lineSlice,
      slices: slices,
      nScale: nScale,
      imgBase: imgBase,
      startTime: startTime,
      trialData: trialData,
      sliceSelected: 0,
    };
    var __listenerBools = {};
  
    // define mousemove event listener that changes image
    function changeImg(event) {
      var mouseX = Math.floor(event.pageX);
      
      // Show the scale after interaction begins
      $(""#scale-container"").css(""display"", ""block"");
      
      // Update current marker position based on mouse position
      var scaleWidth = $(""#scale-container"").width();
      var relativePos = Math.max(0, Math.min(mouseX - scaleLeft, scaleWidth));
      var percentPos = (relativePos / scaleWidth) * 100;
      
      $(""#current-marker"").css({
        ""left"": `${relativePos}px`,
        ""display"": ""block""
      });
      
      for (var i = 0; i < __imageMouseOver.slices.length; i++) {
        // if mouse X position is within the bounds of the X axis slice,
        // change the image to one that is indexed to that slice
        if (mouseX >= __imageMouseOver.slices[i][0] && mouseX <= __imageMouseOver.slices[i][1]) {
          // capture which slice is selected
          __imageMouseOver.sliceSelected = i;
          // update img src to the picture that corresponds to that slice
          $('#changeable-image').attr('src', `img/${__imageMouseOver.imgBase}${__imageMouseOver.nScale[i]}.jpg`);
        }
      };
    };
    
    // define the click listener that ends trial
    function clickHandler(event) {
      if (__listenerBools['mousemove']) {
        // derive trial data
        var trialData = __imageMouseOver.trialData;
        var end_time = (new Date()).getTime();
        var rt = end_time - __imageMouseOver.startTime;
        trialData['rt'] = rt;
        trialData['stimulus_duration'] = rt;
        trialData['trial_duration'] = rt;
        trialData['imageSelected'] = `${__imageMouseOver.imgBase}${__imageMouseOver.nScale[__imageMouseOver.sliceSelected]}.jpg`
        trialData['indexSelected'] = __imageMouseOver.sliceSelected;
        // turn off listeners
        $(document).off('mousemove');
        $(document).off('click');
        // clean up variable namespaces
        delete window.__imageMouseOver
        delete __listenerBools;
        // clean up scale
        $(""#scale-container"").remove();
        // finish the trial with trial data
        jsPsych.finishTrial(trialData);
      };
    };
  
    function verticalLineInit(event) {
      var mouseX = Math.floor(event.pageX);
      if (mouseX <= __imageMouseOver.lineSlice) {
        $(""#vertLine"").remove();
        $(""#linePrompt"").remove();
        $(""#jspsych-image-slider-response_noButton-stimulus > img"").css({
          ""filter"":""blur(0px)"",
          ""visibility"": ""visible"",
        });
        $('#jspsych-content > p').css(""visibility"", ""visible"");
        __listenerBools['mousemove'] = true;
        // turn off THIS mouse move listener
        $(document).off(""mousemove"");
        // turn on the mouse move listener that changes the image
        $(document).mousemove(changeImg);
        // add mouse click listener
        $(document).on('click', clickHandler);
      };
    };
  
    // turn on the vertical line mouse move listener
    $(document).mousemove(verticalLineInit);
  }","[object Object]","0","","Continue","1709","1709","true","red9.jpg","8","400","red","2","[31,37]","34","3 giraffes, with their necks crossing, in a savanna field with yellow grass and trees in the background","101","red"
"survey-text","313","683469","0.0-313.0","rina test","38673","","","{""Q0"":""a leopard or a cheeta in a lush green forest with a brown textured ground""}","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"instructions","314","685020","0.0-314.0","rina test","1550","","[{""page_index"":0,""viewing_time"":1550}]","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
